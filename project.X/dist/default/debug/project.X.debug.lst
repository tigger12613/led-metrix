

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jan 02 14:38:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4520 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  002EBE                     __pidataCOMRAM:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _player
    96  002EBE  04                 	db	4
    97  002EBF  0F                 	db	15
    98                           
    99                           ;initializer for _ball_last_y
   100  002EC0  0005               	dw	5
   101                           
   102                           ;initializer for _ball_last_x
   103  002EC2  0003               	dw	3
   104                           
   105                           ;initializer for _ball_y
   106  002EC4  0006               	dw	6
   107                           
   108                           ;initializer for _ball_x
   109  002EC6  0004               	dw	4
   110                           
   111                           ;initializer for _input
   112  002EC8  09                 	db	9
   113                           
   114                           	psect	idataBANK0
   115  002DB2                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for _right_board
   119  002DB2  0000               	dw	0
   120  002DB4  0000               	dw	0
   121  002DB6  0000               	dw	0
   122  002DB8  0000               	dw	0
   123  002DBA  0001               	dw	1
   124  002DBC  0001               	dw	1
   125  002DBE  0001               	dw	1
   126  002DC0  0001               	dw	1
   127  002DC2  0001               	dw	1
   128  002DC4  0001               	dw	1
   129  002DC6  0001               	dw	1
   130  002DC8  0001               	dw	1
   131  002DCA  0000               	dw	0
   132  002DCC  0000               	dw	0
   133  002DCE  0000               	dw	0
   134  002DD0  0000               	dw	0
   135                           
   136                           ;initializer for _left_board
   137  002DD2  0000               	dw	0
   138  002DD4  0000               	dw	0
   139  002DD6  0000               	dw	0
   140  002DD8  0000               	dw	0
   141  002DDA  0001               	dw	1
   142  002DDC  0001               	dw	1
   143  002DDE  0001               	dw	1
   144  002DE0  0001               	dw	1
   145  002DE2  0001               	dw	1
   146  002DE4  0001               	dw	1
   147  002DE6  0001               	dw	1
   148  002DE8  0001               	dw	1
   149  002DEA  0000               	dw	0
   150  002DEC  0000               	dw	0
   151  002DEE  0000               	dw	0
   152  002DF0  0000               	dw	0
   153                           
   154                           	psect	idataBANK1
   155  002586                     __pidataBANK1:
   156                           	opt callstack 0
   157                           
   158                           ;initializer for _outputMap1
   159  002586  01                 	db	1
   160  002587  01                 	db	1
   161  002588  01                 	db	1
   162  002589  01                 	db	1
   163  00258A  01                 	db	1
   164  00258B  01                 	db	1
   165  00258C  01                 	db	1
   166  00258D  01                 	db	1
   167  00258E  01                 	db	1
   168  00258F  01                 	db	1
   169  002590  01                 	db	1
   170  002591  01                 	db	1
   171  002592  01                 	db	1
   172  002593  01                 	db	1
   173  002594  01                 	db	1
   174  002595  01                 	db	1
   175  002596  01                 	db	1
   176  002597  00                 	db	0
   177  002598  00                 	db	0
   178  002599  00                 	db	0
   179  00259A  00                 	db	0
   180  00259B  00                 	db	0
   181  00259C  00                 	db	0
   182  00259D  00                 	db	0
   183  00259E  00                 	db	0
   184  00259F  00                 	db	0
   185  0025A0  00                 	db	0
   186  0025A1  00                 	db	0
   187  0025A2  00                 	db	0
   188  0025A3  00                 	db	0
   189  0025A4  00                 	db	0
   190  0025A5  01                 	db	1
   191  0025A6  01                 	db	1
   192  0025A7  00                 	db	0
   193  0025A8  00                 	db	0
   194  0025A9  00                 	db	0
   195  0025AA  00                 	db	0
   196  0025AB  00                 	db	0
   197  0025AC  00                 	db	0
   198  0025AD  00                 	db	0
   199  0025AE  00                 	db	0
   200  0025AF  00                 	db	0
   201  0025B0  00                 	db	0
   202  0025B1  00                 	db	0
   203  0025B2  00                 	db	0
   204  0025B3  00                 	db	0
   205  0025B4  00                 	db	0
   206  0025B5  01                 	db	1
   207  0025B6  01                 	db	1
   208  0025B7  00                 	db	0
   209  0025B8  00                 	db	0
   210  0025B9  00                 	db	0
   211  0025BA  00                 	db	0
   212  0025BB  00                 	db	0
   213  0025BC  00                 	db	0
   214  0025BD  00                 	db	0
   215  0025BE  00                 	db	0
   216  0025BF  00                 	db	0
   217  0025C0  00                 	db	0
   218  0025C1  00                 	db	0
   219  0025C2  00                 	db	0
   220  0025C3  00                 	db	0
   221  0025C4  00                 	db	0
   222  0025C5  01                 	db	1
   223  0025C6  01                 	db	1
   224  0025C7  00                 	db	0
   225  0025C8  00                 	db	0
   226  0025C9  00                 	db	0
   227  0025CA  00                 	db	0
   228  0025CB  00                 	db	0
   229  0025CC  01                 	db	1
   230  0025CD  01                 	db	1
   231  0025CE  01                 	db	1
   232  0025CF  01                 	db	1
   233  0025D0  01                 	db	1
   234  0025D1  01                 	db	1
   235  0025D2  01                 	db	1
   236  0025D3  01                 	db	1
   237  0025D4  00                 	db	0
   238  0025D5  01                 	db	1
   239  0025D6  01                 	db	1
   240  0025D7  00                 	db	0
   241  0025D8  00                 	db	0
   242  0025D9  00                 	db	0
   243  0025DA  00                 	db	0
   244  0025DB  00                 	db	0
   245  0025DC  01                 	db	1
   246  0025DD  01                 	db	1
   247  0025DE  01                 	db	1
   248  0025DF  01                 	db	1
   249  0025E0  01                 	db	1
   250  0025E1  01                 	db	1
   251  0025E2  01                 	db	1
   252  0025E3  01                 	db	1
   253  0025E4  00                 	db	0
   254  0025E5  01                 	db	1
   255  0025E6  01                 	db	1
   256  0025E7  00                 	db	0
   257  0025E8  00                 	db	0
   258  0025E9  00                 	db	0
   259  0025EA  00                 	db	0
   260  0025EB  00                 	db	0
   261  0025EC  00                 	db	0
   262  0025ED  00                 	db	0
   263  0025EE  00                 	db	0
   264  0025EF  00                 	db	0
   265  0025F0  00                 	db	0
   266  0025F1  00                 	db	0
   267  0025F2  00                 	db	0
   268  0025F3  00                 	db	0
   269  0025F4  00                 	db	0
   270  0025F5  01                 	db	1
   271  0025F6  01                 	db	1
   272  0025F7  00                 	db	0
   273  0025F8  00                 	db	0
   274  0025F9  00                 	db	0
   275  0025FA  00                 	db	0
   276  0025FB  00                 	db	0
   277  0025FC  00                 	db	0
   278  0025FD  00                 	db	0
   279  0025FE  00                 	db	0
   280  0025FF  00                 	db	0
   281  002600  00                 	db	0
   282  002601  00                 	db	0
   283  002602  00                 	db	0
   284  002603  00                 	db	0
   285  002604  00                 	db	0
   286  002605  01                 	db	1
   287  002606  01                 	db	1
   288  002607  00                 	db	0
   289  002608  00                 	db	0
   290  002609  00                 	db	0
   291  00260A  00                 	db	0
   292  00260B  00                 	db	0
   293  00260C  00                 	db	0
   294  00260D  00                 	db	0
   295  00260E  00                 	db	0
   296  00260F  00                 	db	0
   297  002610  00                 	db	0
   298  002611  00                 	db	0
   299  002612  00                 	db	0
   300  002613  00                 	db	0
   301  002614  00                 	db	0
   302  002615  01                 	db	1
   303  002616  01                 	db	1
   304  002617  00                 	db	0
   305  002618  00                 	db	0
   306  002619  00                 	db	0
   307  00261A  00                 	db	0
   308  00261B  00                 	db	0
   309  00261C  01                 	db	1
   310  00261D  01                 	db	1
   311  00261E  01                 	db	1
   312  00261F  01                 	db	1
   313  002620  01                 	db	1
   314  002621  01                 	db	1
   315  002622  01                 	db	1
   316  002623  01                 	db	1
   317  002624  00                 	db	0
   318  002625  01                 	db	1
   319  002626  01                 	db	1
   320  002627  00                 	db	0
   321  002628  00                 	db	0
   322  002629  00                 	db	0
   323  00262A  00                 	db	0
   324  00262B  00                 	db	0
   325  00262C  01                 	db	1
   326  00262D  01                 	db	1
   327  00262E  01                 	db	1
   328  00262F  01                 	db	1
   329  002630  01                 	db	1
   330  002631  01                 	db	1
   331  002632  01                 	db	1
   332  002633  01                 	db	1
   333  002634  00                 	db	0
   334  002635  01                 	db	1
   335  002636  01                 	db	1
   336  002637  00                 	db	0
   337  002638  00                 	db	0
   338  002639  00                 	db	0
   339  00263A  00                 	db	0
   340  00263B  00                 	db	0
   341  00263C  00                 	db	0
   342  00263D  00                 	db	0
   343  00263E  00                 	db	0
   344  00263F  00                 	db	0
   345  002640  00                 	db	0
   346  002641  00                 	db	0
   347  002642  00                 	db	0
   348  002643  00                 	db	0
   349  002644  00                 	db	0
   350  002645  01                 	db	1
   351  002646  01                 	db	1
   352  002647  00                 	db	0
   353  002648  00                 	db	0
   354  002649  00                 	db	0
   355  00264A  00                 	db	0
   356  00264B  00                 	db	0
   357  00264C  00                 	db	0
   358  00264D  00                 	db	0
   359  00264E  00                 	db	0
   360  00264F  00                 	db	0
   361  002650  00                 	db	0
   362  002651  00                 	db	0
   363  002652  00                 	db	0
   364  002653  00                 	db	0
   365  002654  00                 	db	0
   366  002655  01                 	db	1
   367  002656  01                 	db	1
   368  002657  00                 	db	0
   369  002658  00                 	db	0
   370  002659  00                 	db	0
   371  00265A  00                 	db	0
   372  00265B  00                 	db	0
   373  00265C  00                 	db	0
   374  00265D  00                 	db	0
   375  00265E  00                 	db	0
   376  00265F  00                 	db	0
   377  002660  00                 	db	0
   378  002661  00                 	db	0
   379  002662  00                 	db	0
   380  002663  00                 	db	0
   381  002664  00                 	db	0
   382  002665  01                 	db	1
   383  002666  01                 	db	1
   384  002667  00                 	db	0
   385  002668  00                 	db	0
   386  002669  00                 	db	0
   387  00266A  00                 	db	0
   388  00266B  00                 	db	0
   389  00266C  00                 	db	0
   390  00266D  00                 	db	0
   391  00266E  00                 	db	0
   392  00266F  00                 	db	0
   393  002670  00                 	db	0
   394  002671  00                 	db	0
   395  002672  00                 	db	0
   396  002673  00                 	db	0
   397  002674  00                 	db	0
   398  002675  01                 	db	1
   399  002676  01                 	db	1
   400  002677  01                 	db	1
   401  002678  01                 	db	1
   402  002679  01                 	db	1
   403  00267A  01                 	db	1
   404  00267B  01                 	db	1
   405  00267C  01                 	db	1
   406  00267D  01                 	db	1
   407  00267E  01                 	db	1
   408  00267F  01                 	db	1
   409  002680  01                 	db	1
   410  002681  01                 	db	1
   411  002682  01                 	db	1
   412  002683  01                 	db	1
   413  002684  01                 	db	1
   414  002685  01                 	db	1
   415  0000                     _PORTD	set	3971
   416  0000                     _TRISAbits	set	3986
   417  0000                     _LATA	set	3977
   418  0000                     _PORTA	set	3968
   419  0000                     _LATCbits	set	3979
   420  0000                     _LATDbits	set	3980
   421  0000                     _LATBbits	set	3978
   422  0000                     _TRISD	set	3989
   423  0000                     _TRISC	set	3988
   424  0000                     _TRISB	set	3987
   425  0000                     _PORTDbits	set	3971
   426  0000                     _ADRES	set	4035
   427  0000                     _ADCON0bits	set	4034
   428  0000                     _RCONbits	set	4048
   429  0000                     _ADCON2	set	4032
   430  0000                     _ADCON1	set	4033
   431  0000                     _ADCON0	set	4034
   432  0000                     _T0CON	set	4053
   433  0000                     _TMR0L	set	4054
   434  0000                     _INTCONbits	set	4082
   435  0000                     _TMR0IE	set	32661
   436  0000                     _TMR0IF	set	32658
   437                           
   438                           ; #config settings
   439  0000                     
   440                           	psect	cinit
   441  0028FA                     __pcinit:
   442                           	opt callstack 0
   443  0028FA                     start_initialization:
   444                           	opt callstack 0
   445  0028FA                     __initialization:
   446                           	opt callstack 0
   447                           
   448                           ; Initialize objects allocated to BANK1 (256 bytes)
   449                           ; load TBLPTR registers with __pidataBANK1
   450  0028FA  0E86               	movlw	low __pidataBANK1
   451  0028FC  6EF6               	movwf	tblptrl,c
   452  0028FE  0E25               	movlw	high __pidataBANK1
   453  002900  6EF7               	movwf	tblptrh,c
   454  002902  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   455  002904  6EF8               	movwf	tblptru,c
   456  002906  EE01  F000         	lfsr	0,__pdataBANK1
   457  00290A  EE11 F000          	lfsr	1,256
   458  00290E                     copy_data0:
   459  00290E  0009               	tblrd		*+
   460  002910  CFF5 FFEE          	movff	tablat,postinc0
   461  002914  50E5               	movf	postdec1,w,c
   462  002916  50E1               	movf	fsr1l,w,c
   463  002918  E1FA               	bnz	copy_data0
   464  00291A  50E2               	movf	fsr1h,w,c
   465  00291C  E1F8               	bnz	copy_data0
   466                           
   467                           ; Initialize objects allocated to BANK0 (64 bytes)
   468                           ; load TBLPTR registers with __pidataBANK0
   469  00291E  0EB2               	movlw	low __pidataBANK0
   470  002920  6EF6               	movwf	tblptrl,c
   471  002922  0E2D               	movlw	high __pidataBANK0
   472  002924  6EF7               	movwf	tblptrh,c
   473  002926  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   474  002928  6EF8               	movwf	tblptru,c
   475  00292A  EE00  F080         	lfsr	0,__pdataBANK0
   476  00292E  EE10 F040          	lfsr	1,64
   477  002932                     copy_data1:
   478  002932  0009               	tblrd		*+
   479  002934  CFF5 FFEE          	movff	tablat,postinc0
   480  002938  50E5               	movf	postdec1,w,c
   481  00293A  50E1               	movf	fsr1l,w,c
   482  00293C  E1FA               	bnz	copy_data1
   483                           
   484                           ; Initialize objects allocated to COMRAM (11 bytes)
   485                           ; load TBLPTR registers with __pidataCOMRAM
   486  00293E  0EBE               	movlw	low __pidataCOMRAM
   487  002940  6EF6               	movwf	tblptrl,c
   488  002942  0E2E               	movlw	high __pidataCOMRAM
   489  002944  6EF7               	movwf	tblptrh,c
   490  002946  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   491  002948  6EF8               	movwf	tblptru,c
   492  00294A  EE00  F060         	lfsr	0,__pdataCOMRAM
   493  00294E  EE10 F00B          	lfsr	1,11
   494  002952                     copy_data2:
   495  002952  0009               	tblrd		*+
   496  002954  CFF5 FFEE          	movff	tablat,postinc0
   497  002958  50E5               	movf	postdec1,w,c
   498  00295A  50E1               	movf	fsr1l,w,c
   499  00295C  E1FA               	bnz	copy_data2
   500                           
   501                           ; Clear objects allocated to BANK3 (256 bytes)
   502  00295E  EE03  F000         	lfsr	0,__pbssBANK3
   503  002962  EE11 F000          	lfsr	1,256
   504  002966                     clear_0:
   505  002966  6AEE               	clrf	postinc0,c
   506  002968  50E5               	movf	postdec1,w,c
   507  00296A  50E1               	movf	fsr1l,w,c
   508  00296C  E1FC               	bnz	clear_0
   509  00296E  50E2               	movf	fsr1h,w,c
   510  002970  E1FA               	bnz	clear_0
   511                           
   512                           ; Clear objects allocated to BANK2 (256 bytes)
   513  002972  EE02  F000         	lfsr	0,__pbssBANK2
   514  002976  EE11 F000          	lfsr	1,256
   515  00297A                     clear_1:
   516  00297A  6AEE               	clrf	postinc0,c
   517  00297C  50E5               	movf	postdec1,w,c
   518  00297E  50E1               	movf	fsr1l,w,c
   519  002980  E1FC               	bnz	clear_1
   520  002982  50E2               	movf	fsr1h,w,c
   521  002984  E1FA               	bnz	clear_1
   522                           
   523                           ; Clear objects allocated to BANK0 (40 bytes)
   524  002986  EE00  F0C0         	lfsr	0,__pbssBANK0
   525  00298A  0E28               	movlw	40
   526  00298C                     clear_2:
   527  00298C  6AEE               	clrf	postinc0,c
   528  00298E  06E8               	decf	wreg,f,c
   529  002990  E1FD               	bnz	clear_2
   530                           
   531                           ; Clear objects allocated to COMRAM (37 bytes)
   532  002992  EE00  F03B         	lfsr	0,__pbssCOMRAM
   533  002996  0E25               	movlw	37
   534  002998                     clear_3:
   535  002998  6AEE               	clrf	postinc0,c
   536  00299A  06E8               	decf	wreg,f,c
   537  00299C  E1FD               	bnz	clear_3
   538  00299E                     end_of_initialization:
   539                           	opt callstack 0
   540  00299E                     __end_of__initialization:
   541                           	opt callstack 0
   542  00299E  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   543  0029A0  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   544  0029A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   545  0029A4  6EF8               	movwf	tblptru,c
   546  0029A6  0100               	movlb	0
   547  0029A8  EF87  F009         	goto	_main	;jump to C main() function
   548                           
   549                           	psect	bssCOMRAM
   550  00003B                     __pbssCOMRAM:
   551                           	opt callstack 0
   552  00003B                     	ds	8
   553  000043                     	ds	8
   554  00004B                     _endBall:
   555                           	opt callstack 0
   556  00004B                     	ds	2
   557  00004D                     _endSnake:
   558                           	opt callstack 0
   559  00004D                     	ds	2
   560  00004F                     _win:
   561                           	opt callstack 0
   562  00004F                     	ds	1
   563  000050                     _d:
   564                           	opt callstack 0
   565  000050                     	ds	1
   566  000051                     _c:
   567                           	opt callstack 0
   568  000051                     	ds	1
   569  000052                     _b:
   570                           	opt callstack 0
   571  000052                     	ds	1
   572  000053                     _a:
   573                           	opt callstack 0
   574  000053                     	ds	1
   575  000054                     _select:
   576                           	opt callstack 0
   577  000054                     	ds	1
   578  000055                     _end:
   579                           	opt callstack 0
   580  000055                     	ds	1
   581  000056                     _error:
   582                           	opt callstack 0
   583  000056                     	ds	1
   584  000057                     _seed:
   585                           	opt callstack 0
   586  000057                     	ds	8
   587  00005F                     _mode:
   588                           	opt callstack 0
   589  00005F                     	ds	1
   590                           
   591                           	psect	dataCOMRAM
   592  000060                     __pdataCOMRAM:
   593                           	opt callstack 0
   594  000060                     _player:
   595                           	opt callstack 0
   596  000060                     	ds	2
   597  000062                     _ball_last_y:
   598                           	opt callstack 0
   599  000062                     	ds	2
   600  000064                     _ball_last_x:
   601                           	opt callstack 0
   602  000064                     	ds	2
   603  000066                     _ball_y:
   604                           	opt callstack 0
   605  000066                     	ds	2
   606  000068                     _ball_x:
   607                           	opt callstack 0
   608  000068                     	ds	2
   609  00006A                     _input:
   610                           	opt callstack 0
   611  00006A                     	ds	1
   612                           
   613                           	psect	bssBANK0
   614  0000C0                     __pbssBANK0:
   615                           	opt callstack 0
   616  0000C0                     _car:
   617                           	opt callstack 0
   618  0000C0                     	ds	24
   619  0000D8                     	ds	8
   620  0000E0                     	ds	8
   621                           
   622                           	psect	dataBANK0
   623  000080                     __pdataBANK0:
   624                           	opt callstack 0
   625  000080                     _right_board:
   626                           	opt callstack 0
   627  000080                     	ds	32
   628  0000A0                     _left_board:
   629                           	opt callstack 0
   630  0000A0                     	ds	32
   631                           
   632                           	psect	dataBANK1
   633  000100                     __pdataBANK1:
   634                           	opt callstack 0
   635  000100                     _outputMap1:
   636                           	opt callstack 0
   637  000100                     	ds	256
   638                           
   639                           	psect	bssBANK2
   640  000200                     __pbssBANK2:
   641                           	opt callstack 0
   642  000200                     _map:
   643                           	opt callstack 0
   644  000200                     	ds	256
   645                           
   646                           	psect	bssBANK3
   647  000300                     __pbssBANK3:
   648                           	opt callstack 0
   649  000300                     _LED:
   650                           	opt callstack 0
   651  000300                     	ds	256
   652                           
   653                           	psect	cstackBANK4
   654  000400                     __pcstackBANK4:
   655                           	opt callstack 0
   656  000400                     plot@char_pattern1:
   657                           	opt callstack 0
   658                           
   659                           ; 8 bytes @ 0x0
   660  000400                     	ds	8
   661  000408                     plot@char_pattern2:
   662                           	opt callstack 0
   663                           
   664                           ; 8 bytes @ 0x8
   665  000408                     	ds	8
   666  000410                     plot@char_pattern3:
   667                           	opt callstack 0
   668                           
   669                           ; 8 bytes @ 0x10
   670  000410                     	ds	8
   671  000418                     plot@char_pattern4:
   672                           	opt callstack 0
   673                           
   674                           ; 8 bytes @ 0x18
   675  000418                     	ds	8
   676  000420                     plot@j:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0x20
   680  000420                     	ds	2
   681  000422                     plot@i:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x22
   685  000422                     	ds	2
   686                           
   687                           	psect	cstackBANK0
   688  0000E8                     __pcstackBANK0:
   689                           	opt callstack 0
   690  0000E8                     ___awmod@counter:
   691                           	opt callstack 0
   692  0000E8                     ___fldiv@rem:
   693                           	opt callstack 0
   694                           
   695                           ; 4 bytes @ 0x0
   696  0000E8                     	ds	1
   697  0000E9                     ___awmod@sign:
   698                           	opt callstack 0
   699                           
   700                           ; 1 bytes @ 0x1
   701  0000E9                     	ds	1
   702  0000EA                     ??_initMap:
   703                           
   704                           ; 1 bytes @ 0x2
   705  0000EA                     	ds	2
   706  0000EC                     ___fldiv@sign:
   707                           	opt callstack 0
   708                           
   709                           ; 1 bytes @ 0x4
   710  0000EC                     	ds	1
   711  0000ED                     ___fldiv@new_exp:
   712                           	opt callstack 0
   713                           
   714                           ; 2 bytes @ 0x5
   715  0000ED                     	ds	2
   716  0000EF                     ___fldiv@grs:
   717                           	opt callstack 0
   718                           
   719                           ; 4 bytes @ 0x7
   720  0000EF                     	ds	3
   721  0000F2                     initMap@num:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0xA
   725  0000F2                     	ds	1
   726  0000F3                     ___fldiv@bexp:
   727                           	opt callstack 0
   728                           
   729                           ; 1 bytes @ 0xB
   730  0000F3                     	ds	1
   731  0000F4                     ___fldiv@aexp:
   732                           	opt callstack 0
   733  0000F4                     initMap@i:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0xC
   737  0000F4                     	ds	2
   738  0000F6                     initMap@j:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0xE
   742  0000F6                     	ds	2
   743  0000F8                     ??_main:
   744                           
   745                           ; 1 bytes @ 0x10
   746  0000F8                     	ds	2
   747  0000FA                     main@speed:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x12
   751  0000FA                     	ds	2
   752                           
   753                           	psect	cstackCOMRAM
   754  000001                     __pcstackCOMRAM:
   755                           	opt callstack 0
   756  000001                     board@left_down:
   757                           	opt callstack 0
   758  000001                     move@direct:
   759                           	opt callstack 0
   760                           
   761                           ; 2 bytes @ 0x0
   762  000001                     	ds	1
   763  000002                     board@right_up:
   764                           	opt callstack 0
   765                           
   766                           ; 1 bytes @ 0x1
   767  000002                     	ds	1
   768  000003                     ??_move:
   769  000003                     board@right_down:
   770                           	opt callstack 0
   771                           
   772                           ; 1 bytes @ 0x2
   773  000003                     	ds	1
   774  000004                     ??_board:
   775                           
   776                           ; 1 bytes @ 0x3
   777  000004                     	ds	2
   778  000006                     board@left_up:
   779                           	opt callstack 0
   780                           
   781                           ; 1 bytes @ 0x5
   782  000006                     	ds	1
   783  000007                     board@k:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0x6
   787  000007                     	ds	2
   788  000009                     board@i:
   789                           	opt callstack 0
   790                           
   791                           ; 2 bytes @ 0x8
   792  000009                     	ds	2
   793  00000B                     move@i:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0xA
   797  00000B                     	ds	2
   798  00000D                     move@j:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0xC
   802  00000D                     	ds	2
   803  00000F                     ??_ISR:
   804                           
   805                           ; 1 bytes @ 0xE
   806  00000F                     	ds	6
   807  000015                     ??_initial:
   808  000015                     ??_printError:
   809  000015                     ??_printWin:
   810  000015                     ??_updateCar:
   811  000015                     ??_move_ball:
   812  000015                     ?___wmul:
   813                           	opt callstack 0
   814  000015                     ?___xxtofl:
   815                           	opt callstack 0
   816  000015                     ?_time:
   817                           	opt callstack 0
   818  000015                     ?___omul:
   819                           	opt callstack 0
   820  000015                     shiftOut1@val:
   821                           	opt callstack 0
   822  000015                     shiftOut2@val:
   823                           	opt callstack 0
   824  000015                     shiftOut3@val:
   825                           	opt callstack 0
   826  000015                     shiftOut4@val:
   827                           	opt callstack 0
   828  000015                     ___wmul@multiplier:
   829                           	opt callstack 0
   830  000015                     time@t:
   831                           	opt callstack 0
   832  000015                     ___xxtofl@val:
   833                           	opt callstack 0
   834  000015                     ___omul@multiplier:
   835                           	opt callstack 0
   836                           
   837                           ; 8 bytes @ 0x14
   838  000015                     	ds	1
   839  000016                     ??_shiftOut1:
   840  000016                     ??_shiftOut2:
   841  000016                     ??_shiftOut3:
   842  000016                     ??_shiftOut4:
   843                           
   844                           ; 1 bytes @ 0x15
   845  000016                     	ds	1
   846  000017                     shiftOut1@bitOrder:
   847                           	opt callstack 0
   848  000017                     shiftOut2@bitOrder:
   849                           	opt callstack 0
   850  000017                     shiftOut3@bitOrder:
   851                           	opt callstack 0
   852  000017                     shiftOut4@bitOrder:
   853                           	opt callstack 0
   854  000017                     move_ball@x_direct:
   855                           	opt callstack 0
   856  000017                     ___wmul@multiplicand:
   857                           	opt callstack 0
   858                           
   859                           ; 2 bytes @ 0x16
   860  000017                     	ds	1
   861  000018                     shiftOut1@i:
   862                           	opt callstack 0
   863  000018                     shiftOut2@i:
   864                           	opt callstack 0
   865  000018                     shiftOut3@i:
   866                           	opt callstack 0
   867  000018                     shiftOut4@i:
   868                           	opt callstack 0
   869                           
   870                           ; 1 bytes @ 0x17
   871  000018                     	ds	1
   872  000019                     ??___xxtofl:
   873  000019                     set_register1@value:
   874                           	opt callstack 0
   875  000019                     set_register2@value:
   876                           	opt callstack 0
   877  000019                     set_register3@value:
   878                           	opt callstack 0
   879  000019                     set_register4@value:
   880                           	opt callstack 0
   881  000019                     printError@i:
   882                           	opt callstack 0
   883  000019                     printWin@i:
   884                           	opt callstack 0
   885  000019                     updateCar@num:
   886                           	opt callstack 0
   887  000019                     move_ball@y_direct:
   888                           	opt callstack 0
   889  000019                     initial@k:
   890                           	opt callstack 0
   891  000019                     ___wmul@product:
   892                           	opt callstack 0
   893                           
   894                           ; 2 bytes @ 0x18
   895  000019                     	ds	1
   896  00001A                     set_register1@address:
   897                           	opt callstack 0
   898  00001A                     set_register2@address:
   899                           	opt callstack 0
   900  00001A                     set_register3@address:
   901                           	opt callstack 0
   902  00001A                     set_register4@address:
   903                           	opt callstack 0
   904                           
   905                           ; 1 bytes @ 0x19
   906  00001A                     	ds	1
   907  00001B                     clear_matrix@i:
   908                           	opt callstack 0
   909  00001B                     plot@pattern:
   910                           	opt callstack 0
   911  00001B                     printError@j:
   912                           	opt callstack 0
   913  00001B                     printWin@j:
   914                           	opt callstack 0
   915  00001B                     updateCar@j:
   916                           	opt callstack 0
   917  00001B                     move_ball@rebound:
   918                           	opt callstack 0
   919                           
   920                           ; 2 bytes @ 0x1A
   921  00001B                     	ds	2
   922  00001D                     ??_plot:
   923  00001D                     ??_updateMap:
   924  00001D                     ??_ball:
   925  00001D                     ___xxtofl@sign:
   926                           	opt callstack 0
   927  00001D                     srand@s:
   928                           	opt callstack 0
   929  00001D                     ___omul@multiplicand:
   930                           	opt callstack 0
   931                           
   932                           ; 8 bytes @ 0x1C
   933  00001D                     	ds	1
   934  00001E                     ___xxtofl@exp:
   935                           	opt callstack 0
   936                           
   937                           ; 1 bytes @ 0x1D
   938  00001E                     	ds	1
   939  00001F                     ??_srand:
   940  00001F                     ___xxtofl@arg:
   941                           	opt callstack 0
   942                           
   943                           ; 4 bytes @ 0x1E
   944  00001F                     	ds	2
   945  000021                     ball@i:
   946                           	opt callstack 0
   947                           
   948                           ; 2 bytes @ 0x20
   949  000021                     	ds	2
   950  000023                     ?___fldiv:
   951                           	opt callstack 0
   952  000023                     ball@j:
   953                           	opt callstack 0
   954  000023                     ___fldiv@b:
   955                           	opt callstack 0
   956                           
   957                           ; 4 bytes @ 0x22
   958  000023                     	ds	2
   959  000025                     updateMap@i:
   960                           	opt callstack 0
   961  000025                     ___omul@product:
   962                           	opt callstack 0
   963                           
   964                           ; 8 bytes @ 0x24
   965  000025                     	ds	2
   966  000027                     updateMap@j:
   967                           	opt callstack 0
   968  000027                     ___fldiv@a:
   969                           	opt callstack 0
   970                           
   971                           ; 4 bytes @ 0x26
   972  000027                     	ds	4
   973  00002B                     ??___fldiv:
   974                           
   975                           ; 1 bytes @ 0x2A
   976  00002B                     	ds	2
   977  00002D                     ?_rand:
   978                           	opt callstack 0
   979                           
   980                           ; 2 bytes @ 0x2C
   981  00002D                     	ds	2
   982  00002F                     ??_rand:
   983  00002F                     ?___fltol:
   984                           	opt callstack 0
   985  00002F                     ___fltol@f1:
   986                           	opt callstack 0
   987                           
   988                           ; 4 bytes @ 0x2E
   989  00002F                     	ds	4
   990  000033                     ??___fltol:
   991                           
   992                           ; 1 bytes @ 0x32
   993  000033                     	ds	4
   994  000037                     ?___awmod:
   995                           	opt callstack 0
   996  000037                     ___fltol@sign1:
   997                           	opt callstack 0
   998  000037                     ___awmod@dividend:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x36
  1002  000037                     	ds	1
  1003  000038                     ___fltol@exp1:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x37
  1007  000038                     	ds	1
  1008  000039                     ___awmod@divisor:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x38
  1012  000039                     	ds	2
  1013  00003B                     
  1014                           ; 1 bytes @ 0x3A
  1015 ;;
  1016 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1017 ;;
  1018 ;; *************** function _main *****************
  1019 ;; Defined at:
  1020 ;;		line 151 in file "main.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  speed           2   18[BANK0 ] int 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1034 ;;      Params:         0       0       0       0       0       0       0
  1035 ;;      Locals:         0       2       0       0       0       0       0
  1036 ;;      Temps:          0       2       0       0       0       0       0
  1037 ;;      Totals:         0       4       0       0       0       0       0
  1038 ;;Total ram usage:        4 bytes
  1039 ;; Hardware stack levels required when called:    6
  1040 ;; This function calls:
  1041 ;;		___fldiv
  1042 ;;		___fltol
  1043 ;;		___xxtofl
  1044 ;;		_ball
  1045 ;;		_initMap
  1046 ;;		_init_max7219
  1047 ;;		_initial
  1048 ;;		_plot
  1049 ;;		_updateMap
  1050 ;; This function is called by:
  1051 ;;		Startup code after reset
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text0
  1056  00130E                     __ptext0:
  1057                           	opt callstack 0
  1058  00130E                     _main:
  1059                           	opt callstack 25
  1060  00130E                     
  1061                           ;main.c: 152:     int speed=1;
  1062  00130E  0E00               	movlw	0
  1063  001310  0100               	movlb	0	; () banked
  1064  001312  6FFB               	movwf	(main@speed+1)& (0+255),b
  1065  001314  0E01               	movlw	1
  1066  001316  6FFA               	movwf	main@speed& (0+255),b
  1067                           
  1068                           ;main.c: 153:     TRISB = 0;
  1069  001318  0E00               	movlw	0
  1070  00131A  6E93               	movwf	147,c	;volatile
  1071                           
  1072                           ;main.c: 154:     TRISC = 0;
  1073  00131C  0E00               	movlw	0
  1074  00131E  6E94               	movwf	148,c	;volatile
  1075                           
  1076                           ;main.c: 155:     TRISD = 0b00001111;
  1077  001320  0E0F               	movlw	15
  1078  001322  6E95               	movwf	149,c	;volatile
  1079  001324                     
  1080                           ; BSR set to: 0
  1081                           ;main.c: 156:     LATBbits.LATB4 = 0x01;
  1082  001324  888A               	bsf	138,4,c	;volatile
  1083  001326                     
  1084                           ; BSR set to: 0
  1085                           ;main.c: 157:     LATBbits.LATB1 = 0x01;
  1086  001326  828A               	bsf	138,1,c	;volatile
  1087  001328                     
  1088                           ; BSR set to: 0
  1089                           ;main.c: 158:     LATDbits.LATD5 = 0x01;
  1090  001328  8A8C               	bsf	140,5,c	;volatile
  1091  00132A                     
  1092                           ; BSR set to: 0
  1093                           ;main.c: 159:     LATCbits.LATC5 = 0x01;
  1094  00132A  8A8B               	bsf	139,5,c	;volatile
  1095                           
  1096                           ;main.c: 160:     ADCON0=0b00000001;
  1097  00132C  0E01               	movlw	1
  1098  00132E  6EC2               	movwf	194,c	;volatile
  1099                           
  1100                           ;main.c: 161:     ADCON1=0b00001110;
  1101  001330  0E0E               	movlw	14
  1102  001332  6EC1               	movwf	193,c	;volatile
  1103                           
  1104                           ;main.c: 162:     ADCON2=0b10001000;
  1105  001334  0E88               	movlw	136
  1106  001336  6EC0               	movwf	192,c	;volatile
  1107                           
  1108                           ;main.c: 165:     PORTA = 0x00;
  1109  001338  0E00               	movlw	0
  1110  00133A  6E80               	movwf	128,c	;volatile
  1111                           
  1112                           ;main.c: 166:     LATA = 0x00;
  1113  00133C  0E00               	movlw	0
  1114  00133E  6E89               	movwf	137,c	;volatile
  1115  001340                     
  1116                           ; BSR set to: 0
  1117                           ;main.c: 167:     TRISAbits.RA4 = 1;
  1118  001340  8892               	bsf	146,4,c	;volatile
  1119                           
  1120                           ;main.c: 168:     PORTD = 0x00;
  1121  001342  0E00               	movlw	0
  1122  001344  6E83               	movwf	131,c	;volatile
  1123  001346                     
  1124                           ; BSR set to: 0
  1125                           ;main.c: 170:     TMR0L = 255;
  1126  001346  68D6               	setf	214,c	;volatile
  1127                           
  1128                           ;main.c: 172:     T0CON = 0b11101000;
  1129  001348  0EE8               	movlw	232
  1130  00134A  6ED5               	movwf	213,c	;volatile
  1131  00134C                     
  1132                           ; BSR set to: 0
  1133                           ;main.c: 173:     RCONbits.IPEN = 1;
  1134  00134C  8ED0               	bsf	208,7,c	;volatile
  1135  00134E                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 174:     INTCONbits.GIE = 1;
  1138  00134E  8EF2               	bsf	242,7,c	;volatile
  1139  001350                     
  1140                           ; BSR set to: 0
  1141                           ;main.c: 175:     INTCONbits.TMR0IE = 1;
  1142  001350  8AF2               	bsf	242,5,c	;volatile
  1143  001352                     
  1144                           ; BSR set to: 0
  1145                           ;main.c: 176:     INTCONbits.TMR0IF = 0;
  1146  001352  94F2               	bcf	242,2,c	;volatile
  1147                           
  1148                           ;main.c: 179:     if(select==0){
  1149  001354  5054               	movf	_select^0,w,c
  1150  001356  A4D8               	btfss	status,2,c
  1151  001358  EFB0  F009         	goto	u5461
  1152  00135C  EFB2  F009         	goto	u5460
  1153  001360                     u5461:
  1154  001360  EFBD  F009         	goto	l4533
  1155  001364                     u5460:
  1156  001364                     
  1157                           ; BSR set to: 0
  1158                           ;main.c: 180:         outputMap1[4][2]=1;
  1159  001364  0E01               	movlw	1
  1160  001366  0101               	movlb	1	; () banked
  1161  001368  6F42               	movwf	(_outputMap1+66)& (0+255),b
  1162                           
  1163                           ;main.c: 181:         outputMap1[4][3]=1;
  1164  00136A  0E01               	movlw	1
  1165  00136C  6F43               	movwf	(_outputMap1+67)& (0+255),b
  1166                           
  1167                           ;main.c: 182:         outputMap1[5][2]=1;
  1168  00136E  0E01               	movlw	1
  1169  001370  6F52               	movwf	(_outputMap1+82)& (0+255),b
  1170                           
  1171                           ;main.c: 183:         outputMap1[5][3]=1;
  1172  001372  0E01               	movlw	1
  1173  001374  6F53               	movwf	(_outputMap1+83)& (0+255),b
  1174                           
  1175                           ;main.c: 184:     }
  1176  001376  EFC6  F009         	goto	l4535
  1177  00137A                     l4533:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;main.c: 186:         outputMap1[10][2]=1;
  1181  00137A  0E01               	movlw	1
  1182  00137C  0101               	movlb	1	; () banked
  1183  00137E  6FA2               	movwf	(_outputMap1+162)& (0+255),b
  1184                           
  1185                           ;main.c: 187:         outputMap1[10][3]=1;
  1186  001380  0E01               	movlw	1
  1187  001382  6FA3               	movwf	(_outputMap1+163)& (0+255),b
  1188                           
  1189                           ;main.c: 188:         outputMap1[11][2]=1;
  1190  001384  0E01               	movlw	1
  1191  001386  6FB2               	movwf	(_outputMap1+178)& (0+255),b
  1192                           
  1193                           ;main.c: 189:         outputMap1[11][3]=1;
  1194  001388  0E01               	movlw	1
  1195  00138A  6FB3               	movwf	(_outputMap1+179)& (0+255),b
  1196  00138C                     l4535:
  1197                           
  1198                           ; BSR set to: 1
  1199                           ;main.c: 191:     init_max7219();
  1200  00138C  ECB1  F013         	call	_init_max7219	;wreg free
  1201  001390                     
  1202                           ;main.c: 192:     init_max7219();
  1203  001390  ECB1  F013         	call	_init_max7219	;wreg free
  1204  001394                     
  1205                           ;main.c: 194:     initMap();
  1206  001394  EC15  F00B         	call	_initMap	;wreg free
  1207  001398                     
  1208                           ;main.c: 195:     endBall=&mode;
  1209  001398  0E5F               	movlw	low _mode
  1210  00139A  6E4B               	movwf	_endBall^0,c
  1211  00139C  0E00               	movlw	high _mode
  1212  00139E  6E4C               	movwf	(_endBall+1)^0,c
  1213  0013A0                     
  1214                           ;main.c: 196:     endSnake=&mode;
  1215  0013A0  0E5F               	movlw	low _mode
  1216  0013A2  6E4D               	movwf	_endSnake^0,c
  1217  0013A4  0E00               	movlw	high _mode
  1218  0013A6  6E4E               	movwf	(_endSnake+1)^0,c
  1219  0013A8                     l4545:
  1220                           
  1221                           ;main.c: 198:     {;main.c: 199:         if(mode==0){
  1222  0013A8  505F               	movf	_mode^0,w,c
  1223  0013AA  A4D8               	btfss	status,2,c
  1224  0013AC  EFDA  F009         	goto	u5471
  1225  0013B0  EFDC  F009         	goto	u5470
  1226  0013B4                     u5471:
  1227  0013B4  EF1E  F00A         	goto	l4561
  1228  0013B8                     u5470:
  1229  0013B8                     
  1230                           ;main.c: 200:             speed=5;
  1231  0013B8  0E00               	movlw	0
  1232  0013BA  0100               	movlb	0	; () banked
  1233  0013BC  6FFB               	movwf	(main@speed+1)& (0+255),b
  1234  0013BE  0E05               	movlw	5
  1235  0013C0  6FFA               	movwf	main@speed& (0+255),b
  1236  0013C2                     
  1237                           ; BSR set to: 0
  1238                           ;main.c: 201:             initial();
  1239  0013C2  EC6C  F00C         	call	_initial	;wreg free
  1240  0013C6                     
  1241                           ;main.c: 202:             ADCON0bits.GO=1;
  1242  0013C6  82C2               	bsf	194,1,c	;volatile
  1243  0013C8                     
  1244                           ;main.c: 203:             if(ADRES>512){
  1245  0013C8  04C3               	decf	195,w,c	;volatile
  1246  0013CA  0E02               	movlw	2
  1247  0013CC  58C4               	subwfb	196,w,c	;volatile
  1248  0013CE  A0D8               	btfss	status,0,c
  1249  0013D0  EFEC  F009         	goto	u5481
  1250  0013D4  EFEE  F009         	goto	u5480
  1251  0013D8                     u5481:
  1252  0013D8  EF03  F00A         	goto	l4557
  1253  0013DC                     u5480:
  1254  0013DC                     
  1255                           ;main.c: 204:                 select=1;
  1256  0013DC  0E01               	movlw	1
  1257  0013DE  6E54               	movwf	_select^0,c
  1258                           
  1259                           ;main.c: 205:                 outputMap1[4][2]=0;
  1260  0013E0  0E00               	movlw	0
  1261  0013E2  0101               	movlb	1	; () banked
  1262  0013E4  6F42               	movwf	(_outputMap1+66)& (0+255),b
  1263                           
  1264                           ;main.c: 206:                 outputMap1[4][3]=0;
  1265  0013E6  0E00               	movlw	0
  1266  0013E8  6F43               	movwf	(_outputMap1+67)& (0+255),b
  1267                           
  1268                           ;main.c: 207:                 outputMap1[5][2]=0;
  1269  0013EA  0E00               	movlw	0
  1270  0013EC  6F52               	movwf	(_outputMap1+82)& (0+255),b
  1271                           
  1272                           ;main.c: 208:                 outputMap1[5][3]=0;
  1273  0013EE  0E00               	movlw	0
  1274  0013F0  6F53               	movwf	(_outputMap1+83)& (0+255),b
  1275                           
  1276                           ;main.c: 209:                 outputMap1[9][2]=1;
  1277  0013F2  0E01               	movlw	1
  1278  0013F4  6F92               	movwf	(_outputMap1+146)& (0+255),b
  1279                           
  1280                           ;main.c: 210:                 outputMap1[9][3]=1;
  1281  0013F6  0E01               	movlw	1
  1282  0013F8  6F93               	movwf	(_outputMap1+147)& (0+255),b
  1283                           
  1284                           ;main.c: 211:                 outputMap1[10][2]=1;
  1285  0013FA  0E01               	movlw	1
  1286  0013FC  6FA2               	movwf	(_outputMap1+162)& (0+255),b
  1287                           
  1288                           ;main.c: 212:                 outputMap1[10][3]=1;
  1289  0013FE  0E01               	movlw	1
  1290  001400  6FA3               	movwf	(_outputMap1+163)& (0+255),b
  1291                           
  1292                           ;main.c: 213:             }
  1293  001402  EF16  F00A         	goto	l4559
  1294  001406                     l4557:
  1295                           
  1296                           ;main.c: 215:                 select=0;
  1297  001406  0E00               	movlw	0
  1298  001408  6E54               	movwf	_select^0,c
  1299                           
  1300                           ;main.c: 216:                 outputMap1[4][2]=1;
  1301  00140A  0E01               	movlw	1
  1302  00140C  0101               	movlb	1	; () banked
  1303  00140E  6F42               	movwf	(_outputMap1+66)& (0+255),b
  1304                           
  1305                           ;main.c: 217:                 outputMap1[4][3]=1;
  1306  001410  0E01               	movlw	1
  1307  001412  6F43               	movwf	(_outputMap1+67)& (0+255),b
  1308                           
  1309                           ;main.c: 218:                 outputMap1[5][2]=1;
  1310  001414  0E01               	movlw	1
  1311  001416  6F52               	movwf	(_outputMap1+82)& (0+255),b
  1312                           
  1313                           ;main.c: 219:                 outputMap1[5][3]=1;
  1314  001418  0E01               	movlw	1
  1315  00141A  6F53               	movwf	(_outputMap1+83)& (0+255),b
  1316                           
  1317                           ;main.c: 220:                 outputMap1[9][2]=0;
  1318  00141C  0E00               	movlw	0
  1319  00141E  6F92               	movwf	(_outputMap1+146)& (0+255),b
  1320                           
  1321                           ;main.c: 221:                 outputMap1[9][3]=0;
  1322  001420  0E00               	movlw	0
  1323  001422  6F93               	movwf	(_outputMap1+147)& (0+255),b
  1324                           
  1325                           ;main.c: 222:                 outputMap1[10][2]=0;
  1326  001424  0E00               	movlw	0
  1327  001426  6FA2               	movwf	(_outputMap1+162)& (0+255),b
  1328                           
  1329                           ;main.c: 223:                 outputMap1[10][3]=0;
  1330  001428  0E00               	movlw	0
  1331  00142A  6FA3               	movwf	(_outputMap1+163)& (0+255),b
  1332  00142C                     l4559:
  1333                           
  1334                           ; BSR set to: 1
  1335                           ;main.c: 225:             plot(outputMap1);
  1336  00142C  0E00               	movlw	low _outputMap1
  1337  00142E  6E1B               	movwf	plot@pattern^0,c
  1338  001430  0E01               	movlw	high _outputMap1
  1339  001432  6E1C               	movwf	(plot@pattern+1)^0,c
  1340  001434  EC09  F000         	call	_plot	;wreg free
  1341                           
  1342                           ;main.c: 226:         }
  1343  001438  EFF4  F00A         	goto	l4603
  1344  00143C                     l4561:
  1345  00143C  045F               	decf	_mode^0,w,c
  1346  00143E  A4D8               	btfss	status,2,c
  1347  001440  EF24  F00A         	goto	u5491
  1348  001444  EF26  F00A         	goto	u5490
  1349  001448                     u5491:
  1350  001448  EF66  F00A         	goto	l4577
  1351  00144C                     u5490:
  1352  00144C                     
  1353                           ;main.c: 228:             ADCON0bits.GO=1;
  1354  00144C  82C2               	bsf	194,1,c	;volatile
  1355  00144E                     
  1356                           ;main.c: 245:             updateMap();
  1357  00144E  EC24  F002         	call	_updateMap	;wreg free
  1358  001452                     
  1359                           ;main.c: 246:             plot(map);
  1360  001452  0E00               	movlw	low _map
  1361  001454  6E1B               	movwf	plot@pattern^0,c
  1362  001456  0E02               	movlw	high _map
  1363  001458  6E1C               	movwf	(plot@pattern+1)^0,c
  1364  00145A  EC09  F000         	call	_plot	;wreg free
  1365  00145E                     
  1366                           ;main.c: 247:             if(error==1){
  1367  00145E  0456               	decf	_error^0,w,c
  1368  001460  A4D8               	btfss	status,2,c
  1369  001462  EF35  F00A         	goto	u5501
  1370  001466  EF37  F00A         	goto	u5500
  1371  00146A                     u5501:
  1372  00146A  EF3B  F00A         	goto	l4575
  1373  00146E                     u5500:
  1374  00146E                     
  1375                           ;main.c: 248:                 initMap();
  1376  00146E  EC15  F00B         	call	_initMap	;wreg free
  1377  001472                     
  1378                           ;main.c: 249:                  mode=0;
  1379  001472  0E00               	movlw	0
  1380  001474  6E5F               	movwf	_mode^0,c
  1381  001476                     l4575:
  1382                           
  1383                           ;main.c: 251:             speed=ADRES/204.6;
  1384  001476  0E9A               	movlw	154
  1385  001478  6E27               	movwf	___fldiv@a^0,c
  1386  00147A  0E99               	movlw	153
  1387  00147C  6E28               	movwf	(___fldiv@a+1)^0,c
  1388  00147E  0E4C               	movlw	76
  1389  001480  6E29               	movwf	(___fldiv@a+2)^0,c
  1390  001482  0E43               	movlw	67
  1391  001484  6E2A               	movwf	(___fldiv@a+3)^0,c
  1392  001486  CFC3 F015          	movff	4035,___xxtofl@val	;volatile
  1393  00148A  CFC4 F016          	movff	4036,___xxtofl@val+1	;volatile
  1394  00148E  6A17               	clrf	(___xxtofl@val+2)^0,c
  1395  001490  6A18               	clrf	(___xxtofl@val+3)^0,c
  1396  001492  0E00               	movlw	0
  1397  001494  ECA4  F00F         	call	___xxtofl
  1398  001498  C015  F023         	movff	?___xxtofl,___fldiv@b
  1399  00149C  C016  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1400  0014A0  C017  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1401  0014A4  C018  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1402  0014A8  EC01  F006         	call	___fldiv	;wreg free
  1403  0014AC  C023  F02F         	movff	?___fldiv,___fltol@f1
  1404  0014B0  C024  F030         	movff	?___fldiv+1,___fltol@f1+1
  1405  0014B4  C025  F031         	movff	?___fldiv+2,___fltol@f1+2
  1406  0014B8  C026  F032         	movff	?___fldiv+3,___fltol@f1+3
  1407  0014BC  EC40  F012         	call	___fltol	;wreg free
  1408  0014C0  C02F  F0FA         	movff	?___fltol,main@speed
  1409  0014C4  C030  F0FB         	movff	?___fltol+1,main@speed+1
  1410                           
  1411                           ;main.c: 252:         }
  1412  0014C8  EFF4  F00A         	goto	l4603
  1413  0014CC                     l4577:
  1414  0014CC  0E02               	movlw	2
  1415  0014CE  185F               	xorwf	_mode^0,w,c
  1416  0014D0  A4D8               	btfss	status,2,c
  1417  0014D2  EF6D  F00A         	goto	u5511
  1418  0014D6  EF6F  F00A         	goto	u5510
  1419  0014DA                     u5511:
  1420  0014DA  EFB8  F00A         	goto	l136
  1421  0014DE                     u5510:
  1422  0014DE                     
  1423                           ;main.c: 254:             ADCON0bits.GO=1;
  1424  0014DE  82C2               	bsf	194,1,c	;volatile
  1425  0014E0                     
  1426                           ;main.c: 255:             ball();
  1427  0014E0  EC18  F014         	call	_ball	;wreg free
  1428                           
  1429                           ;main.c: 257:             plot(LED);
  1430  0014E4  0E00               	movlw	low _LED
  1431  0014E6  6E1B               	movwf	plot@pattern^0,c
  1432  0014E8  0E03               	movlw	high _LED
  1433  0014EA  6E1C               	movwf	(plot@pattern+1)^0,c
  1434  0014EC  EC09  F000         	call	_plot	;wreg free
  1435  0014F0                     
  1436                           ;main.c: 258:             if(ball_x == 0 || ball_x == 15)
  1437  0014F0  5068               	movf	_ball_x^0,w,c
  1438  0014F2  1069               	iorwf	(_ball_x+1)^0,w,c
  1439  0014F4  B4D8               	btfsc	status,2,c
  1440  0014F6  EF7F  F00A         	goto	u5521
  1441  0014FA  EF81  F00A         	goto	u5520
  1442  0014FE                     u5521:
  1443  0014FE  EF8B  F00A         	goto	l4587
  1444  001502                     u5520:
  1445  001502  0E0F               	movlw	15
  1446  001504  1868               	xorwf	_ball_x^0,w,c
  1447  001506  1069               	iorwf	(_ball_x+1)^0,w,c
  1448  001508  A4D8               	btfss	status,2,c
  1449  00150A  EF89  F00A         	goto	u5531
  1450  00150E  EF8B  F00A         	goto	u5530
  1451  001512                     u5531:
  1452  001512  EF8D  F00A         	goto	l4589
  1453  001516                     u5530:
  1454  001516                     l4587:
  1455                           
  1456                           ;main.c: 259:                 mode=0;
  1457  001516  0E00               	movlw	0
  1458  001518  6E5F               	movwf	_mode^0,c
  1459  00151A                     l4589:
  1460                           
  1461                           ;main.c: 260:             speed=ADRES/204.6;
  1462  00151A  0E9A               	movlw	154
  1463  00151C  6E27               	movwf	___fldiv@a^0,c
  1464  00151E  0E99               	movlw	153
  1465  001520  6E28               	movwf	(___fldiv@a+1)^0,c
  1466  001522  0E4C               	movlw	76
  1467  001524  6E29               	movwf	(___fldiv@a+2)^0,c
  1468  001526  0E43               	movlw	67
  1469  001528  6E2A               	movwf	(___fldiv@a+3)^0,c
  1470  00152A  CFC3 F015          	movff	4035,___xxtofl@val	;volatile
  1471  00152E  CFC4 F016          	movff	4036,___xxtofl@val+1	;volatile
  1472  001532  6A17               	clrf	(___xxtofl@val+2)^0,c
  1473  001534  6A18               	clrf	(___xxtofl@val+3)^0,c
  1474  001536  0E00               	movlw	0
  1475  001538  ECA4  F00F         	call	___xxtofl
  1476  00153C  C015  F023         	movff	?___xxtofl,___fldiv@b
  1477  001540  C016  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1478  001544  C017  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1479  001548  C018  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1480  00154C  EC01  F006         	call	___fldiv	;wreg free
  1481  001550  C023  F02F         	movff	?___fldiv,___fltol@f1
  1482  001554  C024  F030         	movff	?___fldiv+1,___fltol@f1+1
  1483  001558  C025  F031         	movff	?___fldiv+2,___fltol@f1+2
  1484  00155C  C026  F032         	movff	?___fldiv+3,___fltol@f1+3
  1485  001560  EC40  F012         	call	___fltol	;wreg free
  1486  001564  C02F  F0FA         	movff	?___fltol,main@speed
  1487  001568  C030  F0FB         	movff	?___fltol+1,main@speed+1
  1488  00156C  EFF4  F00A         	goto	l4603
  1489  001570                     l136:
  1490                           
  1491                           ;main.c: 266:         switch(speed){
  1492  001570  EFF4  F00A         	goto	l4603
  1493  001574                     l4591:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;main.c: 268:                 _delay(250000);
  1497  001574  0E02               	movlw	2
  1498  001576  0100               	movlb	0	; () banked
  1499  001578  6FF9               	movwf	(??_main+1)& (0+255),b
  1500  00157A  0E45               	movlw	69
  1501  00157C  6FF8               	movwf	??_main& (0+255),b
  1502  00157E  0EA9               	movlw	169
  1503  001580                     u5557:
  1504  001580  2EE8               	decfsz	wreg,f,c
  1505  001582  D7FE               	bra	u5557
  1506  001584  2FF8               	decfsz	??_main& (0+255),f,b
  1507  001586  D7FC               	bra	u5557
  1508  001588  2FF9               	decfsz	(??_main+1)& (0+255),f,b
  1509  00158A  D7FA               	bra	u5557
  1510  00158C  D000               	nop2	
  1511                           
  1512                           ;main.c: 269:                 break;
  1513  00158E  EFD4  F009         	goto	l4545
  1514  001592                     l4593:
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;main.c: 271:                 _delay(125000);
  1518  001592  0EA3               	movlw	163
  1519  001594  0100               	movlb	0	; () banked
  1520  001596  6FF8               	movwf	??_main& (0+255),b
  1521  001598  0E55               	movlw	85
  1522  00159A                     u5567:
  1523  00159A  2EE8               	decfsz	wreg,f,c
  1524  00159C  D7FE               	bra	u5567
  1525  00159E  2FF8               	decfsz	??_main& (0+255),f,b
  1526  0015A0  D7FC               	bra	u5567
  1527                           
  1528                           ;main.c: 272:                 break;
  1529  0015A2  EFD4  F009         	goto	l4545
  1530  0015A6                     l4595:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;main.c: 274:                 _delay(100000);
  1534  0015A6  0E82               	movlw	130
  1535  0015A8  0100               	movlb	0	; () banked
  1536  0015AA  6FF8               	movwf	??_main& (0+255),b
  1537  0015AC  0EDD               	movlw	221
  1538  0015AE                     u5577:
  1539  0015AE  2EE8               	decfsz	wreg,f,c
  1540  0015B0  D7FE               	bra	u5577
  1541  0015B2  2FF8               	decfsz	??_main& (0+255),f,b
  1542  0015B4  D7FC               	bra	u5577
  1543  0015B6  D000               	nop2	
  1544                           
  1545                           ;main.c: 275:                 break;
  1546  0015B8  EFD4  F009         	goto	l4545
  1547  0015BC                     l4597:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 277:                 _delay(50000);
  1551  0015BC  0E41               	movlw	65
  1552  0015BE  0100               	movlb	0	; () banked
  1553  0015C0  6FF8               	movwf	??_main& (0+255),b
  1554  0015C2  0EEE               	movlw	238
  1555  0015C4                     u5587:
  1556  0015C4  2EE8               	decfsz	wreg,f,c
  1557  0015C6  D7FE               	bra	u5587
  1558  0015C8  2FF8               	decfsz	??_main& (0+255),f,b
  1559  0015CA  D7FC               	bra	u5587
  1560  0015CC  F000               	nop	
  1561                           
  1562                           ;main.c: 278:                 break;
  1563  0015CE  EFD4  F009         	goto	l4545
  1564  0015D2                     l4599:
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;main.c: 280:                 _delay(25000);
  1568  0015D2  0E21               	movlw	33
  1569  0015D4  0100               	movlb	0	; () banked
  1570  0015D6  6FF8               	movwf	??_main& (0+255),b
  1571  0015D8  0E76               	movlw	118
  1572  0015DA                     u5597:
  1573  0015DA  2EE8               	decfsz	wreg,f,c
  1574  0015DC  D7FE               	bra	u5597
  1575  0015DE  2FF8               	decfsz	??_main& (0+255),f,b
  1576  0015E0  D7FC               	bra	u5597
  1577  0015E2  F000               	nop	
  1578                           
  1579                           ;main.c: 281:                 break;
  1580  0015E4  EFD4  F009         	goto	l4545
  1581  0015E8                     l4603:
  1582  0015E8  C0FA  F0F8         	movff	main@speed,??_main
  1583  0015EC  C0FB  F0F9         	movff	main@speed+1,??_main+1
  1584                           
  1585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1586                           ; Switch size 1, requested type "simple"
  1587                           ; Number of cases is 1, Range of values is 0 to 0
  1588                           ; switch strategies available:
  1589                           ; Name         Instructions Cycles
  1590                           ; simple_byte            4     3 (average)
  1591                           ;	Chosen strategy is simple_byte
  1592  0015F0  0100               	movlb	0	; () banked
  1593  0015F2  51F9               	movf	(??_main+1)& (0+255),w,b
  1594  0015F4  0A00               	xorlw	0	; case 0
  1595  0015F6  B4D8               	btfsc	status,2,c
  1596  0015F8  EF00  F00B         	goto	l4655
  1597  0015FC  EFE9  F00A         	goto	l4599
  1598  001600                     l4655:
  1599                           
  1600                           ; BSR set to: 0
  1601                           ; Switch size 1, requested type "simple"
  1602                           ; Number of cases is 4, Range of values is 2 to 5
  1603                           ; switch strategies available:
  1604                           ; Name         Instructions Cycles
  1605                           ; simple_byte           13     7 (average)
  1606                           ;	Chosen strategy is simple_byte
  1607  001600  51F8               	movf	??_main& (0+255),w,b
  1608  001602  0A02               	xorlw	2	; case 2
  1609  001604  B4D8               	btfsc	status,2,c
  1610  001606  EFDE  F00A         	goto	l4597
  1611  00160A  0A01               	xorlw	1	; case 3
  1612  00160C  B4D8               	btfsc	status,2,c
  1613  00160E  EFD3  F00A         	goto	l4595
  1614  001612  0A07               	xorlw	7	; case 4
  1615  001614  B4D8               	btfsc	status,2,c
  1616  001616  EFC9  F00A         	goto	l4593
  1617  00161A  0A01               	xorlw	1	; case 5
  1618  00161C  B4D8               	btfsc	status,2,c
  1619  00161E  EFBA  F00A         	goto	l4591
  1620  001622  EFE9  F00A         	goto	l4599
  1621  001626  EF07  F000         	goto	start
  1622  00162A                     __end_of_main:
  1623                           	opt callstack 0
  1624                           
  1625 ;; *************** function _updateMap *****************
  1626 ;; Defined at:
  1627 ;;		line 80 in file "snake.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  j               2   38[COMRAM] int 
  1632 ;;  i               2   36[COMRAM] int 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1642 ;;      Params:         0       0       0       0       0       0       0
  1643 ;;      Locals:         4       0       0       0       0       0       0
  1644 ;;      Temps:          8       0       0       0       0       0       0
  1645 ;;      Totals:        12       0       0       0       0       0       0
  1646 ;;Total ram usage:       12 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    3
  1649 ;; This function calls:
  1650 ;;		_printError
  1651 ;;		_printWin
  1652 ;;		_updateCar
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text1
  1659  000448                     __ptext1:
  1660                           	opt callstack 0
  1661  000448                     _updateMap:
  1662                           	opt callstack 27
  1663  000448                     
  1664                           ;snake.c: 81:  int i,j;;snake.c: 82:     if(win==1){
  1665  000448  044F               	decf	_win^0,w,c
  1666  00044A  A4D8               	btfss	status,2,c
  1667  00044C  EF2A  F002         	goto	u4901
  1668  000450  EF2C  F002         	goto	u4900
  1669  000454                     u4901:
  1670  000454  EF30  F002         	goto	l4181
  1671  000458                     u4900:
  1672  000458                     
  1673                           ;snake.c: 83:   printWin();
  1674  000458  EC26  F011         	call	_printWin	;wreg free
  1675  00045C  EF12  F004         	goto	l306
  1676  000460                     l4181:
  1677                           
  1678                           ;snake.c: 86:     if(error!=1)
  1679  000460  0456               	decf	_error^0,w,c
  1680  000462  B4D8               	btfsc	status,2,c
  1681  000464  EF36  F002         	goto	u4911
  1682  000468  EF38  F002         	goto	u4910
  1683  00046C                     u4911:
  1684  00046C  EF3A  F002         	goto	l4185
  1685  000470                     u4910:
  1686  000470                     
  1687                           ;snake.c: 87:         updateCar();
  1688  000470  ECB3  F00E         	call	_updateCar	;wreg free
  1689  000474                     l4185:
  1690                           
  1691                           ;snake.c: 88:  if(error==1){
  1692  000474  0456               	decf	_error^0,w,c
  1693  000476  A4D8               	btfss	status,2,c
  1694  000478  EF40  F002         	goto	u4921
  1695  00047C  EF42  F002         	goto	u4920
  1696  000480                     u4921:
  1697  000480  EF46  F002         	goto	l4191
  1698  000484                     u4920:
  1699  000484                     
  1700                           ;snake.c: 89:   printError();
  1701  000484  ECB7  F011         	call	_printError	;wreg free
  1702  000488  EF12  F004         	goto	l306
  1703  00048C                     l4191:
  1704                           
  1705                           ;snake.c: 92:  for(j=0;j<16;++j){
  1706  00048C  0E00               	movlw	0
  1707  00048E  6E28               	movwf	(updateMap@j+1)^0,c
  1708  000490  0E00               	movlw	0
  1709  000492  6E27               	movwf	updateMap@j^0,c
  1710  000494                     l4197:
  1711                           
  1712                           ;snake.c: 93:   for(i=0;i<16;++i){
  1713  000494  0E00               	movlw	0
  1714  000496  6E26               	movwf	(updateMap@i+1)^0,c
  1715  000498  0E00               	movlw	0
  1716  00049A  6E25               	movwf	updateMap@i^0,c
  1717  00049C                     l4203:
  1718                           
  1719                           ;snake.c: 94:    map[j][i]=0;
  1720  00049C  C027  F01D         	movff	updateMap@j,??_updateMap
  1721  0004A0  C028  F01E         	movff	updateMap@j+1,??_updateMap+1
  1722  0004A4  3A1D               	swapf	??_updateMap^0,f,c
  1723  0004A6  3A1E               	swapf	(??_updateMap+1)^0,f,c
  1724  0004A8  0EF0               	movlw	240
  1725  0004AA  161E               	andwf	(??_updateMap+1)^0,f,c
  1726  0004AC  501D               	movf	??_updateMap^0,w,c
  1727  0004AE  0B0F               	andlw	15
  1728  0004B0  121E               	iorwf	(??_updateMap+1)^0,f,c
  1729  0004B2  0EF0               	movlw	240
  1730  0004B4  161D               	andwf	??_updateMap^0,f,c
  1731  0004B6  0E00               	movlw	low _map
  1732  0004B8  6E1F               	movwf	(??_updateMap+2)^0,c
  1733  0004BA  0E02               	movlw	high _map
  1734  0004BC  6E20               	movwf	(??_updateMap+3)^0,c
  1735  0004BE  501D               	movf	??_updateMap^0,w,c
  1736  0004C0  261F               	addwf	(??_updateMap+2)^0,f,c
  1737  0004C2  501E               	movf	(??_updateMap+1)^0,w,c
  1738  0004C4  2220               	addwfc	(??_updateMap+3)^0,f,c
  1739  0004C6  5025               	movf	updateMap@i^0,w,c
  1740  0004C8  241F               	addwf	(??_updateMap+2)^0,w,c
  1741  0004CA  6ED9               	movwf	fsr2l,c
  1742  0004CC  5026               	movf	(updateMap@i+1)^0,w,c
  1743  0004CE  2020               	addwfc	(??_updateMap+3)^0,w,c
  1744  0004D0  6EDA               	movwf	fsr2h,c
  1745  0004D2  0E00               	movlw	0
  1746  0004D4  6EDF               	movwf	indf2,c
  1747  0004D6                     
  1748                           ;snake.c: 95:   }
  1749  0004D6  4A25               	infsnz	updateMap@i^0,f,c
  1750  0004D8  2A26               	incf	(updateMap@i+1)^0,f,c
  1751  0004DA  BE26               	btfsc	(updateMap@i+1)^0,7,c
  1752  0004DC  EF79  F002         	goto	u4931
  1753  0004E0  5026               	movf	(updateMap@i+1)^0,w,c
  1754  0004E2  E109               	bnz	u4930
  1755  0004E4  0E10               	movlw	16
  1756  0004E6  5C25               	subwf	updateMap@i^0,w,c
  1757  0004E8  A0D8               	btfss	status,0,c
  1758  0004EA  EF79  F002         	goto	u4931
  1759  0004EE  EF7B  F002         	goto	u4930
  1760  0004F2                     u4931:
  1761  0004F2  EF4E  F002         	goto	l4203
  1762  0004F6                     u4930:
  1763  0004F6                     
  1764                           ;snake.c: 96:  }
  1765  0004F6  4A27               	infsnz	updateMap@j^0,f,c
  1766  0004F8  2A28               	incf	(updateMap@j+1)^0,f,c
  1767  0004FA  BE28               	btfsc	(updateMap@j+1)^0,7,c
  1768  0004FC  EF89  F002         	goto	u4941
  1769  000500  5028               	movf	(updateMap@j+1)^0,w,c
  1770  000502  E109               	bnz	u4940
  1771  000504  0E10               	movlw	16
  1772  000506  5C27               	subwf	updateMap@j^0,w,c
  1773  000508  A0D8               	btfss	status,0,c
  1774  00050A  EF89  F002         	goto	u4941
  1775  00050E  EF8B  F002         	goto	u4940
  1776  000512                     u4941:
  1777  000512  EF4A  F002         	goto	l4197
  1778  000516                     u4940:
  1779  000516                     
  1780                           ;snake.c: 97:  for(j=0;j<6;++j){
  1781  000516  0E00               	movlw	0
  1782  000518  6E28               	movwf	(updateMap@j+1)^0,c
  1783  00051A  0E00               	movlw	0
  1784  00051C  6E27               	movwf	updateMap@j^0,c
  1785  00051E                     l4219:
  1786                           
  1787                           ;snake.c: 98:   for(i=0;i<3;++i){
  1788  00051E  0E00               	movlw	0
  1789  000520  6E26               	movwf	(updateMap@i+1)^0,c
  1790  000522  0E00               	movlw	0
  1791  000524  6E25               	movwf	updateMap@i^0,c
  1792  000526                     l315:
  1793                           
  1794                           ;snake.c: 99:    if(j%2==0){
  1795  000526  B027               	btfsc	updateMap@j^0,0,c
  1796  000528  EF98  F002         	goto	u4951
  1797  00052C  EF9A  F002         	goto	u4950
  1798  000530                     u4951:
  1799  000530  EF41  F003         	goto	l4235
  1800  000534                     u4950:
  1801  000534                     
  1802                           ;snake.c: 100:     if(car[j][0]-i<=15){
  1803  000534  0EC0               	movlw	low _car
  1804  000536  6E1D               	movwf	??_updateMap^0,c
  1805  000538  0E00               	movlw	high _car
  1806  00053A  6E1E               	movwf	(??_updateMap+1)^0,c
  1807  00053C  90D8               	bcf	status,0,c
  1808  00053E  3427               	rlcf	updateMap@j^0,w,c
  1809  000540  6ED9               	movwf	fsr2l,c
  1810  000542  3428               	rlcf	(updateMap@j+1)^0,w,c
  1811  000544  6EDA               	movwf	fsr2h,c
  1812  000546  90D8               	bcf	status,0,c
  1813  000548  36D9               	rlcf	fsr2l,f,c
  1814  00054A  36DA               	rlcf	fsr2h,f,c
  1815  00054C  501D               	movf	??_updateMap^0,w,c
  1816  00054E  26D9               	addwf	fsr2l,f,c
  1817  000550  501E               	movf	(??_updateMap+1)^0,w,c
  1818  000552  22DA               	addwfc	fsr2h,f,c
  1819  000554  CFDE F01F          	movff	postinc2,??_updateMap+2
  1820  000558  CFDD F020          	movff	postdec2,??_updateMap+3
  1821  00055C  5025               	movf	updateMap@i^0,w,c
  1822  00055E  5E1F               	subwf	(??_updateMap+2)^0,f,c
  1823  000560  5026               	movf	(updateMap@i+1)^0,w,c
  1824  000562  5A20               	subwfb	(??_updateMap+3)^0,f,c
  1825  000564  BE20               	btfsc	(??_updateMap+3)^0,7,c
  1826  000566  EFC0  F002         	goto	u4960
  1827  00056A  5020               	movf	(??_updateMap+3)^0,w,c
  1828  00056C  E107               	bnz	u4961
  1829  00056E  0E10               	movlw	16
  1830  000570  5C1F               	subwf	(??_updateMap+2)^0,w,c
  1831  000572  B0D8               	btfsc	status,0,c
  1832  000574  EFBE  F002         	goto	u4961
  1833  000578  EFC0  F002         	goto	u4960
  1834  00057C                     u4961:
  1835  00057C  EFE0  F003         	goto	l4245
  1836  000580                     u4960:
  1837  000580                     
  1838                           ;snake.c: 101:      map[2+2*j][car[j][0]-i]=1;
  1839  000580  0EC0               	movlw	low _car
  1840  000582  6E1D               	movwf	??_updateMap^0,c
  1841  000584  0E00               	movlw	high _car
  1842  000586  6E1E               	movwf	(??_updateMap+1)^0,c
  1843  000588  90D8               	bcf	status,0,c
  1844  00058A  3427               	rlcf	updateMap@j^0,w,c
  1845  00058C  6ED9               	movwf	fsr2l,c
  1846  00058E  3428               	rlcf	(updateMap@j+1)^0,w,c
  1847  000590  6EDA               	movwf	fsr2h,c
  1848  000592  90D8               	bcf	status,0,c
  1849  000594  36D9               	rlcf	fsr2l,f,c
  1850  000596  36DA               	rlcf	fsr2h,f,c
  1851  000598  501D               	movf	??_updateMap^0,w,c
  1852  00059A  26D9               	addwf	fsr2l,f,c
  1853  00059C  501E               	movf	(??_updateMap+1)^0,w,c
  1854  00059E  22DA               	addwfc	fsr2h,f,c
  1855  0005A0  CFDE F01F          	movff	postinc2,??_updateMap+2
  1856  0005A4  CFDD F020          	movff	postdec2,??_updateMap+3
  1857  0005A8  C027  F021         	movff	updateMap@j,??_updateMap+4
  1858  0005AC  C028  F022         	movff	updateMap@j+1,??_updateMap+5
  1859  0005B0  90D8               	bcf	status,0,c
  1860  0005B2  3621               	rlcf	(??_updateMap+4)^0,f,c
  1861  0005B4  3622               	rlcf	(??_updateMap+5)^0,f,c
  1862  0005B6  3A21               	swapf	(??_updateMap+4)^0,f,c
  1863  0005B8  3A22               	swapf	(??_updateMap+5)^0,f,c
  1864  0005BA  0EF0               	movlw	240
  1865  0005BC  1622               	andwf	(??_updateMap+5)^0,f,c
  1866  0005BE  5021               	movf	(??_updateMap+4)^0,w,c
  1867  0005C0  0B0F               	andlw	15
  1868  0005C2  1222               	iorwf	(??_updateMap+5)^0,f,c
  1869  0005C4  0EF0               	movlw	240
  1870  0005C6  1621               	andwf	(??_updateMap+4)^0,f,c
  1871  0005C8  0E00               	movlw	low _map
  1872  0005CA  6E23               	movwf	(??_updateMap+6)^0,c
  1873  0005CC  0E02               	movlw	high _map
  1874  0005CE  6E24               	movwf	(??_updateMap+7)^0,c
  1875  0005D0  0E20               	movlw	32
  1876  0005D2  2623               	addwf	(??_updateMap+6)^0,f,c
  1877  0005D4  0E00               	movlw	0
  1878  0005D6  2224               	addwfc	(??_updateMap+7)^0,f,c
  1879  0005D8  5021               	movf	(??_updateMap+4)^0,w,c
  1880  0005DA  2623               	addwf	(??_updateMap+6)^0,f,c
  1881  0005DC  5022               	movf	(??_updateMap+5)^0,w,c
  1882  0005DE  2224               	addwfc	(??_updateMap+7)^0,f,c
  1883  0005E0  5025               	movf	updateMap@i^0,w,c
  1884  0005E2  5E23               	subwf	(??_updateMap+6)^0,f,c
  1885  0005E4  5026               	movf	(updateMap@i+1)^0,w,c
  1886  0005E6  5A24               	subwfb	(??_updateMap+7)^0,f,c
  1887  0005E8  501F               	movf	(??_updateMap+2)^0,w,c
  1888  0005EA  2423               	addwf	(??_updateMap+6)^0,w,c
  1889  0005EC  6ED9               	movwf	fsr2l,c
  1890  0005EE  5020               	movf	(??_updateMap+3)^0,w,c
  1891  0005F0  2024               	addwfc	(??_updateMap+7)^0,w,c
  1892  0005F2  6EDA               	movwf	fsr2h,c
  1893  0005F4  0E01               	movlw	1
  1894  0005F6  6EDF               	movwf	indf2,c
  1895  0005F8                     
  1896                           ;snake.c: 102:      if(player[1]==2+2*j && player[0]==car[j][0]-i)
  1897  0005F8  5061               	movf	(_player+1)^0,w,c
  1898  0005FA  6E1D               	movwf	??_updateMap^0,c
  1899  0005FC  6A1E               	clrf	(??_updateMap+1)^0,c
  1900  0005FE  C027  F01F         	movff	updateMap@j,??_updateMap+2
  1901  000602  C028  F020         	movff	updateMap@j+1,??_updateMap+3
  1902  000606  90D8               	bcf	status,0,c
  1903  000608  361F               	rlcf	(??_updateMap+2)^0,f,c
  1904  00060A  3620               	rlcf	(??_updateMap+3)^0,f,c
  1905  00060C  0E02               	movlw	2
  1906  00060E  261F               	addwf	(??_updateMap+2)^0,f,c
  1907  000610  0E00               	movlw	0
  1908  000612  2220               	addwfc	(??_updateMap+3)^0,f,c
  1909  000614  501D               	movf	??_updateMap^0,w,c
  1910  000616  181F               	xorwf	(??_updateMap+2)^0,w,c
  1911  000618  E107               	bnz	u4971
  1912  00061A  501E               	movf	(??_updateMap+1)^0,w,c
  1913  00061C  1820               	xorwf	(??_updateMap+3)^0,w,c
  1914  00061E  A4D8               	btfss	status,2,c
  1915  000620  EF14  F003         	goto	u4971
  1916  000624  EF16  F003         	goto	u4970
  1917  000628                     u4971:
  1918  000628  EFE0  F003         	goto	l4245
  1919  00062C                     u4970:
  1920  00062C  0EC0               	movlw	low _car
  1921  00062E  6E1D               	movwf	??_updateMap^0,c
  1922  000630  0E00               	movlw	high _car
  1923  000632  6E1E               	movwf	(??_updateMap+1)^0,c
  1924  000634  90D8               	bcf	status,0,c
  1925  000636  3427               	rlcf	updateMap@j^0,w,c
  1926  000638  6ED9               	movwf	fsr2l,c
  1927  00063A  3428               	rlcf	(updateMap@j+1)^0,w,c
  1928  00063C  6EDA               	movwf	fsr2h,c
  1929  00063E  90D8               	bcf	status,0,c
  1930  000640  36D9               	rlcf	fsr2l,f,c
  1931  000642  36DA               	rlcf	fsr2h,f,c
  1932  000644  501D               	movf	??_updateMap^0,w,c
  1933  000646  26D9               	addwf	fsr2l,f,c
  1934  000648  501E               	movf	(??_updateMap+1)^0,w,c
  1935  00064A  22DA               	addwfc	fsr2h,f,c
  1936  00064C  CFDE F01F          	movff	postinc2,??_updateMap+2
  1937  000650  CFDD F020          	movff	postdec2,??_updateMap+3
  1938  000654  5025               	movf	updateMap@i^0,w,c
  1939  000656  5E1F               	subwf	(??_updateMap+2)^0,f,c
  1940  000658  5026               	movf	(updateMap@i+1)^0,w,c
  1941  00065A  5A20               	subwfb	(??_updateMap+3)^0,f,c
  1942  00065C  5060               	movf	_player^0,w,c
  1943  00065E  6E21               	movwf	(??_updateMap+4)^0,c
  1944  000660  6A22               	clrf	(??_updateMap+5)^0,c
  1945  000662  501F               	movf	(??_updateMap+2)^0,w,c
  1946  000664  1821               	xorwf	(??_updateMap+4)^0,w,c
  1947  000666  E107               	bnz	u4981
  1948  000668  5020               	movf	(??_updateMap+3)^0,w,c
  1949  00066A  1822               	xorwf	(??_updateMap+5)^0,w,c
  1950  00066C  A4D8               	btfss	status,2,c
  1951  00066E  EF3B  F003         	goto	u4981
  1952  000672  EF3D  F003         	goto	u4980
  1953  000676                     u4981:
  1954  000676  EFE0  F003         	goto	l4245
  1955  00067A                     u4980:
  1956  00067A                     l4233:
  1957                           
  1958                           ;snake.c: 103:       error=1;
  1959  00067A  0E01               	movlw	1
  1960  00067C  6E56               	movwf	_error^0,c
  1961  00067E  EFE0  F003         	goto	l4245
  1962  000682                     l4235:
  1963                           
  1964                           ;snake.c: 107:     if(car[j][0]+i>=0){
  1965  000682  0EC0               	movlw	low _car
  1966  000684  6E1D               	movwf	??_updateMap^0,c
  1967  000686  0E00               	movlw	high _car
  1968  000688  6E1E               	movwf	(??_updateMap+1)^0,c
  1969  00068A  90D8               	bcf	status,0,c
  1970  00068C  3427               	rlcf	updateMap@j^0,w,c
  1971  00068E  6ED9               	movwf	fsr2l,c
  1972  000690  3428               	rlcf	(updateMap@j+1)^0,w,c
  1973  000692  6EDA               	movwf	fsr2h,c
  1974  000694  90D8               	bcf	status,0,c
  1975  000696  36D9               	rlcf	fsr2l,f,c
  1976  000698  36DA               	rlcf	fsr2h,f,c
  1977  00069A  501D               	movf	??_updateMap^0,w,c
  1978  00069C  26D9               	addwf	fsr2l,f,c
  1979  00069E  501E               	movf	(??_updateMap+1)^0,w,c
  1980  0006A0  22DA               	addwfc	fsr2h,f,c
  1981  0006A2  CFDE F01F          	movff	postinc2,??_updateMap+2
  1982  0006A6  CFDD F020          	movff	postdec2,??_updateMap+3
  1983  0006AA  5025               	movf	updateMap@i^0,w,c
  1984  0006AC  241F               	addwf	(??_updateMap+2)^0,w,c
  1985  0006AE  5026               	movf	(updateMap@i+1)^0,w,c
  1986  0006B0  2020               	addwfc	(??_updateMap+3)^0,w,c
  1987  0006B2  0B80               	andlw	128
  1988  0006B4  A4D8               	btfss	status,2,c
  1989  0006B6  EF5F  F003         	goto	u4991
  1990  0006BA  EF61  F003         	goto	u4990
  1991  0006BE                     u4991:
  1992  0006BE  EFE0  F003         	goto	l4245
  1993  0006C2                     u4990:
  1994  0006C2                     
  1995                           ;snake.c: 108:      map[2+2*j][car[j][0]+i]=1;
  1996  0006C2  0EC0               	movlw	low _car
  1997  0006C4  6E1D               	movwf	??_updateMap^0,c
  1998  0006C6  0E00               	movlw	high _car
  1999  0006C8  6E1E               	movwf	(??_updateMap+1)^0,c
  2000  0006CA  90D8               	bcf	status,0,c
  2001  0006CC  3427               	rlcf	updateMap@j^0,w,c
  2002  0006CE  6ED9               	movwf	fsr2l,c
  2003  0006D0  3428               	rlcf	(updateMap@j+1)^0,w,c
  2004  0006D2  6EDA               	movwf	fsr2h,c
  2005  0006D4  90D8               	bcf	status,0,c
  2006  0006D6  36D9               	rlcf	fsr2l,f,c
  2007  0006D8  36DA               	rlcf	fsr2h,f,c
  2008  0006DA  501D               	movf	??_updateMap^0,w,c
  2009  0006DC  26D9               	addwf	fsr2l,f,c
  2010  0006DE  501E               	movf	(??_updateMap+1)^0,w,c
  2011  0006E0  22DA               	addwfc	fsr2h,f,c
  2012  0006E2  CFDE F01F          	movff	postinc2,??_updateMap+2
  2013  0006E6  CFDD F020          	movff	postdec2,??_updateMap+3
  2014  0006EA  C027  F021         	movff	updateMap@j,??_updateMap+4
  2015  0006EE  C028  F022         	movff	updateMap@j+1,??_updateMap+5
  2016  0006F2  90D8               	bcf	status,0,c
  2017  0006F4  3621               	rlcf	(??_updateMap+4)^0,f,c
  2018  0006F6  3622               	rlcf	(??_updateMap+5)^0,f,c
  2019  0006F8  3A21               	swapf	(??_updateMap+4)^0,f,c
  2020  0006FA  3A22               	swapf	(??_updateMap+5)^0,f,c
  2021  0006FC  0EF0               	movlw	240
  2022  0006FE  1622               	andwf	(??_updateMap+5)^0,f,c
  2023  000700  5021               	movf	(??_updateMap+4)^0,w,c
  2024  000702  0B0F               	andlw	15
  2025  000704  1222               	iorwf	(??_updateMap+5)^0,f,c
  2026  000706  0EF0               	movlw	240
  2027  000708  1621               	andwf	(??_updateMap+4)^0,f,c
  2028  00070A  0E00               	movlw	low _map
  2029  00070C  6E23               	movwf	(??_updateMap+6)^0,c
  2030  00070E  0E02               	movlw	high _map
  2031  000710  6E24               	movwf	(??_updateMap+7)^0,c
  2032  000712  0E20               	movlw	32
  2033  000714  2623               	addwf	(??_updateMap+6)^0,f,c
  2034  000716  0E00               	movlw	0
  2035  000718  2224               	addwfc	(??_updateMap+7)^0,f,c
  2036  00071A  5021               	movf	(??_updateMap+4)^0,w,c
  2037  00071C  2623               	addwf	(??_updateMap+6)^0,f,c
  2038  00071E  5022               	movf	(??_updateMap+5)^0,w,c
  2039  000720  2224               	addwfc	(??_updateMap+7)^0,f,c
  2040  000722  501F               	movf	(??_updateMap+2)^0,w,c
  2041  000724  2623               	addwf	(??_updateMap+6)^0,f,c
  2042  000726  5020               	movf	(??_updateMap+3)^0,w,c
  2043  000728  2224               	addwfc	(??_updateMap+7)^0,f,c
  2044  00072A  5025               	movf	updateMap@i^0,w,c
  2045  00072C  2423               	addwf	(??_updateMap+6)^0,w,c
  2046  00072E  6ED9               	movwf	fsr2l,c
  2047  000730  5026               	movf	(updateMap@i+1)^0,w,c
  2048  000732  2024               	addwfc	(??_updateMap+7)^0,w,c
  2049  000734  6EDA               	movwf	fsr2h,c
  2050  000736  0E01               	movlw	1
  2051  000738  6EDF               	movwf	indf2,c
  2052  00073A                     
  2053                           ;snake.c: 109:      if(player[1]==2+2*j && player[0]==car[j][0]+i)
  2054  00073A  5061               	movf	(_player+1)^0,w,c
  2055  00073C  6E1D               	movwf	??_updateMap^0,c
  2056  00073E  6A1E               	clrf	(??_updateMap+1)^0,c
  2057  000740  C027  F01F         	movff	updateMap@j,??_updateMap+2
  2058  000744  C028  F020         	movff	updateMap@j+1,??_updateMap+3
  2059  000748  90D8               	bcf	status,0,c
  2060  00074A  361F               	rlcf	(??_updateMap+2)^0,f,c
  2061  00074C  3620               	rlcf	(??_updateMap+3)^0,f,c
  2062  00074E  0E02               	movlw	2
  2063  000750  261F               	addwf	(??_updateMap+2)^0,f,c
  2064  000752  0E00               	movlw	0
  2065  000754  2220               	addwfc	(??_updateMap+3)^0,f,c
  2066  000756  501D               	movf	??_updateMap^0,w,c
  2067  000758  181F               	xorwf	(??_updateMap+2)^0,w,c
  2068  00075A  E107               	bnz	u5001
  2069  00075C  501E               	movf	(??_updateMap+1)^0,w,c
  2070  00075E  1820               	xorwf	(??_updateMap+3)^0,w,c
  2071  000760  A4D8               	btfss	status,2,c
  2072  000762  EFB5  F003         	goto	u5001
  2073  000766  EFB7  F003         	goto	u5000
  2074  00076A                     u5001:
  2075  00076A  EFE0  F003         	goto	l4245
  2076  00076E                     u5000:
  2077  00076E  5060               	movf	_player^0,w,c
  2078  000770  6E1D               	movwf	??_updateMap^0,c
  2079  000772  6A1E               	clrf	(??_updateMap+1)^0,c
  2080  000774  0EC0               	movlw	low _car
  2081  000776  6E1F               	movwf	(??_updateMap+2)^0,c
  2082  000778  0E00               	movlw	high _car
  2083  00077A  6E20               	movwf	(??_updateMap+3)^0,c
  2084  00077C  90D8               	bcf	status,0,c
  2085  00077E  3427               	rlcf	updateMap@j^0,w,c
  2086  000780  6ED9               	movwf	fsr2l,c
  2087  000782  3428               	rlcf	(updateMap@j+1)^0,w,c
  2088  000784  6EDA               	movwf	fsr2h,c
  2089  000786  90D8               	bcf	status,0,c
  2090  000788  36D9               	rlcf	fsr2l,f,c
  2091  00078A  36DA               	rlcf	fsr2h,f,c
  2092  00078C  501F               	movf	(??_updateMap+2)^0,w,c
  2093  00078E  26D9               	addwf	fsr2l,f,c
  2094  000790  5020               	movf	(??_updateMap+3)^0,w,c
  2095  000792  22DA               	addwfc	fsr2h,f,c
  2096  000794  CFDE F021          	movff	postinc2,??_updateMap+4
  2097  000798  CFDD F022          	movff	postdec2,??_updateMap+5
  2098  00079C  5025               	movf	updateMap@i^0,w,c
  2099  00079E  2621               	addwf	(??_updateMap+4)^0,f,c
  2100  0007A0  5026               	movf	(updateMap@i+1)^0,w,c
  2101  0007A2  2222               	addwfc	(??_updateMap+5)^0,f,c
  2102  0007A4  501D               	movf	??_updateMap^0,w,c
  2103  0007A6  1821               	xorwf	(??_updateMap+4)^0,w,c
  2104  0007A8  E107               	bnz	u5011
  2105  0007AA  501E               	movf	(??_updateMap+1)^0,w,c
  2106  0007AC  1822               	xorwf	(??_updateMap+5)^0,w,c
  2107  0007AE  A4D8               	btfss	status,2,c
  2108  0007B0  EFDC  F003         	goto	u5011
  2109  0007B4  EFDE  F003         	goto	u5010
  2110  0007B8                     u5011:
  2111  0007B8  EFE0  F003         	goto	l4245
  2112  0007BC                     u5010:
  2113  0007BC  EF3D  F003         	goto	l4233
  2114  0007C0                     l4245:
  2115                           
  2116                           ;snake.c: 113:   }
  2117  0007C0  4A25               	infsnz	updateMap@i^0,f,c
  2118  0007C2  2A26               	incf	(updateMap@i+1)^0,f,c
  2119  0007C4  BE26               	btfsc	(updateMap@i+1)^0,7,c
  2120  0007C6  EFEE  F003         	goto	u5021
  2121  0007CA  5026               	movf	(updateMap@i+1)^0,w,c
  2122  0007CC  E109               	bnz	u5020
  2123  0007CE  0E03               	movlw	3
  2124  0007D0  5C25               	subwf	updateMap@i^0,w,c
  2125  0007D2  A0D8               	btfss	status,0,c
  2126  0007D4  EFEE  F003         	goto	u5021
  2127  0007D8  EFF0  F003         	goto	u5020
  2128  0007DC                     u5021:
  2129  0007DC  EF93  F002         	goto	l315
  2130  0007E0                     u5020:
  2131  0007E0                     
  2132                           ;snake.c: 115:  }
  2133  0007E0  4A27               	infsnz	updateMap@j^0,f,c
  2134  0007E2  2A28               	incf	(updateMap@j+1)^0,f,c
  2135  0007E4  BE28               	btfsc	(updateMap@j+1)^0,7,c
  2136  0007E6  EFFE  F003         	goto	u5031
  2137  0007EA  5028               	movf	(updateMap@j+1)^0,w,c
  2138  0007EC  E109               	bnz	u5030
  2139  0007EE  0E06               	movlw	6
  2140  0007F0  5C27               	subwf	updateMap@j^0,w,c
  2141  0007F2  A0D8               	btfss	status,0,c
  2142  0007F4  EFFE  F003         	goto	u5031
  2143  0007F8  EF00  F004         	goto	u5030
  2144  0007FC                     u5031:
  2145  0007FC  EF8F  F002         	goto	l4219
  2146  000800                     u5030:
  2147  000800                     
  2148                           ;snake.c: 116:  map[player[1]][player[0]]=1;
  2149  000800  5061               	movf	(_player+1)^0,w,c
  2150  000802  0D10               	mullw	16
  2151  000804  0E00               	movlw	low _map
  2152  000806  6E1D               	movwf	??_updateMap^0,c
  2153  000808  0E02               	movlw	high _map
  2154  00080A  6E1E               	movwf	(??_updateMap+1)^0,c
  2155  00080C  50F3               	movf	243,w,c
  2156  00080E  261D               	addwf	??_updateMap^0,f,c
  2157  000810  50F4               	movf	244,w,c
  2158  000812  221E               	addwfc	(??_updateMap+1)^0,f,c
  2159  000814  5060               	movf	_player^0,w,c
  2160  000816  241D               	addwf	??_updateMap^0,w,c
  2161  000818  6ED9               	movwf	fsr2l,c
  2162  00081A  0E00               	movlw	0
  2163  00081C  201E               	addwfc	(??_updateMap+1)^0,w,c
  2164  00081E  6EDA               	movwf	fsr2h,c
  2165  000820  0E01               	movlw	1
  2166  000822  6EDF               	movwf	indf2,c
  2167  000824                     l306:
  2168  000824  0012               	return		;funcret
  2169  000826                     __end_of_updateMap:
  2170                           	opt callstack 0
  2171                           
  2172 ;; *************** function _updateCar *****************
  2173 ;; Defined at:
  2174 ;;		line 59 in file "snake.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  num             2   24[COMRAM] int 
  2179 ;;  j               2   26[COMRAM] int 
  2180 ;;  i               2    0        int 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2190 ;;      Params:         0       0       0       0       0       0       0
  2191 ;;      Locals:         4       0       0       0       0       0       0
  2192 ;;      Temps:          4       0       0       0       0       0       0
  2193 ;;      Totals:         8       0       0       0       0       0       0
  2194 ;;Total ram usage:        8 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    2
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_updateMap
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text2
  2205  001D66                     __ptext2:
  2206                           	opt callstack 0
  2207  001D66                     _updateCar:
  2208                           	opt callstack 27
  2209  001D66                     
  2210                           ;snake.c: 60:  int i,j;;snake.c: 61:  for(j=0;j<6;++j){
  2211  001D66  0E00               	movlw	0
  2212  001D68  6E1C               	movwf	(updateCar@j+1)^0,c
  2213  001D6A  0E00               	movlw	0
  2214  001D6C  6E1B               	movwf	updateCar@j^0,c
  2215  001D6E                     l292:
  2216                           
  2217                           ;snake.c: 62:   int num=(j%2==0)?1:-1;
  2218  001D6E  A01B               	btfss	updateCar@j^0,0,c
  2219  001D70  EFBC  F00E         	goto	u4371
  2220  001D74  EFBE  F00E         	goto	u4370
  2221  001D78                     u4371:
  2222  001D78  EFC2  F00E         	goto	l3833
  2223  001D7C                     u4370:
  2224  001D7C  6819               	setf	updateCar@num^0,c
  2225  001D7E  681A               	setf	(updateCar@num+1)^0,c
  2226  001D80  EFC6  F00E         	goto	l3835
  2227  001D84                     l3833:
  2228  001D84  0E00               	movlw	0
  2229  001D86  6E1A               	movwf	(updateCar@num+1)^0,c
  2230  001D88  0E01               	movlw	1
  2231  001D8A  6E19               	movwf	updateCar@num^0,c
  2232  001D8C                     l3835:
  2233                           
  2234                           ;snake.c: 63:   car[j][0]+=num;
  2235  001D8C  0EC0               	movlw	low _car
  2236  001D8E  6E15               	movwf	??_updateCar^0,c
  2237  001D90  0E00               	movlw	high _car
  2238  001D92  6E16               	movwf	(??_updateCar+1)^0,c
  2239  001D94  90D8               	bcf	status,0,c
  2240  001D96  341B               	rlcf	updateCar@j^0,w,c
  2241  001D98  6ED9               	movwf	fsr2l,c
  2242  001D9A  341C               	rlcf	(updateCar@j+1)^0,w,c
  2243  001D9C  6EDA               	movwf	fsr2h,c
  2244  001D9E  90D8               	bcf	status,0,c
  2245  001DA0  36D9               	rlcf	fsr2l,f,c
  2246  001DA2  36DA               	rlcf	fsr2h,f,c
  2247  001DA4  5015               	movf	??_updateCar^0,w,c
  2248  001DA6  26D9               	addwf	fsr2l,f,c
  2249  001DA8  5016               	movf	(??_updateCar+1)^0,w,c
  2250  001DAA  22DA               	addwfc	fsr2h,f,c
  2251  001DAC  5019               	movf	updateCar@num^0,w,c
  2252  001DAE  26DE               	addwf	postinc2,f,c
  2253  001DB0  501A               	movf	(updateCar@num+1)^0,w,c
  2254  001DB2  22DD               	addwfc	postdec2,f,c
  2255  001DB4                     
  2256                           ;snake.c: 64:   car[j][1]+=num;
  2257  001DB4  0EC0               	movlw	low _car
  2258  001DB6  6E15               	movwf	??_updateCar^0,c
  2259  001DB8  0E00               	movlw	high _car
  2260  001DBA  6E16               	movwf	(??_updateCar+1)^0,c
  2261  001DBC  0E02               	movlw	2
  2262  001DBE  2615               	addwf	??_updateCar^0,f,c
  2263  001DC0  0E00               	movlw	0
  2264  001DC2  2216               	addwfc	(??_updateCar+1)^0,f,c
  2265  001DC4  90D8               	bcf	status,0,c
  2266  001DC6  341B               	rlcf	updateCar@j^0,w,c
  2267  001DC8  6ED9               	movwf	fsr2l,c
  2268  001DCA  341C               	rlcf	(updateCar@j+1)^0,w,c
  2269  001DCC  6EDA               	movwf	fsr2h,c
  2270  001DCE  90D8               	bcf	status,0,c
  2271  001DD0  36D9               	rlcf	fsr2l,f,c
  2272  001DD2  36DA               	rlcf	fsr2h,f,c
  2273  001DD4  5015               	movf	??_updateCar^0,w,c
  2274  001DD6  26D9               	addwf	fsr2l,f,c
  2275  001DD8  5016               	movf	(??_updateCar+1)^0,w,c
  2276  001DDA  22DA               	addwfc	fsr2h,f,c
  2277  001DDC  5019               	movf	updateCar@num^0,w,c
  2278  001DDE  26DE               	addwf	postinc2,f,c
  2279  001DE0  501A               	movf	(updateCar@num+1)^0,w,c
  2280  001DE2  22DD               	addwfc	postdec2,f,c
  2281  001DE4                     
  2282                           ;snake.c: 65:   if(j%2==0){
  2283  001DE4  B01B               	btfsc	updateCar@j^0,0,c
  2284  001DE6  EFF7  F00E         	goto	u4381
  2285  001DEA  EFF9  F00E         	goto	u4380
  2286  001DEE                     u4381:
  2287  001DEE  EF4B  F00F         	goto	l3845
  2288  001DF2                     u4380:
  2289  001DF2                     
  2290                           ;snake.c: 66:    if(car[j][1]>15){
  2291  001DF2  0EC0               	movlw	low _car
  2292  001DF4  6E15               	movwf	??_updateCar^0,c
  2293  001DF6  0E00               	movlw	high _car
  2294  001DF8  6E16               	movwf	(??_updateCar+1)^0,c
  2295  001DFA  0E02               	movlw	2
  2296  001DFC  2615               	addwf	??_updateCar^0,f,c
  2297  001DFE  0E00               	movlw	0
  2298  001E00  2216               	addwfc	(??_updateCar+1)^0,f,c
  2299  001E02  90D8               	bcf	status,0,c
  2300  001E04  341B               	rlcf	updateCar@j^0,w,c
  2301  001E06  6ED9               	movwf	fsr2l,c
  2302  001E08  341C               	rlcf	(updateCar@j+1)^0,w,c
  2303  001E0A  6EDA               	movwf	fsr2h,c
  2304  001E0C  90D8               	bcf	status,0,c
  2305  001E0E  36D9               	rlcf	fsr2l,f,c
  2306  001E10  36DA               	rlcf	fsr2h,f,c
  2307  001E12  5015               	movf	??_updateCar^0,w,c
  2308  001E14  26D9               	addwf	fsr2l,f,c
  2309  001E16  5016               	movf	(??_updateCar+1)^0,w,c
  2310  001E18  22DA               	addwfc	fsr2h,f,c
  2311  001E1A  0E01               	movlw	1
  2312  001E1C  BEDB               	btfsc	plusw2,7,c
  2313  001E1E  EF1B  F00F         	goto	u4391
  2314  001E22  0E01               	movlw	1
  2315  001E24  50DB               	movf	plusw2,w,c
  2316  001E26  E109               	bnz	u4390
  2317  001E28  0E10               	movlw	16
  2318  001E2A  5CDE               	subwf	postinc2,w,c
  2319  001E2C  A0D8               	btfss	status,0,c
  2320  001E2E  EF1B  F00F         	goto	u4391
  2321  001E32  EF1D  F00F         	goto	u4390
  2322  001E36                     u4391:
  2323  001E36  EF93  F00F         	goto	l3849
  2324  001E3A                     u4390:
  2325  001E3A                     
  2326                           ;snake.c: 67:     car[j][0]=0;
  2327  001E3A  0EC0               	movlw	low _car
  2328  001E3C  6E15               	movwf	??_updateCar^0,c
  2329  001E3E  0E00               	movlw	high _car
  2330  001E40  6E16               	movwf	(??_updateCar+1)^0,c
  2331  001E42  90D8               	bcf	status,0,c
  2332  001E44  341B               	rlcf	updateCar@j^0,w,c
  2333  001E46  6ED9               	movwf	fsr2l,c
  2334  001E48  341C               	rlcf	(updateCar@j+1)^0,w,c
  2335  001E4A  6EDA               	movwf	fsr2h,c
  2336  001E4C  90D8               	bcf	status,0,c
  2337  001E4E  36D9               	rlcf	fsr2l,f,c
  2338  001E50  36DA               	rlcf	fsr2h,f,c
  2339  001E52  5015               	movf	??_updateCar^0,w,c
  2340  001E54  26D9               	addwf	fsr2l,f,c
  2341  001E56  5016               	movf	(??_updateCar+1)^0,w,c
  2342  001E58  22DA               	addwfc	fsr2h,f,c
  2343  001E5A  0E00               	movlw	0
  2344  001E5C  6EDE               	movwf	postinc2,c
  2345  001E5E  0E00               	movlw	0
  2346  001E60  6EDD               	movwf	postdec2,c
  2347                           
  2348                           ;snake.c: 68:     car[j][1]=-2;
  2349  001E62  0EC0               	movlw	low _car
  2350  001E64  6E15               	movwf	??_updateCar^0,c
  2351  001E66  0E00               	movlw	high _car
  2352  001E68  6E16               	movwf	(??_updateCar+1)^0,c
  2353  001E6A  0E02               	movlw	2
  2354  001E6C  2615               	addwf	??_updateCar^0,f,c
  2355  001E6E  0E00               	movlw	0
  2356  001E70  2216               	addwfc	(??_updateCar+1)^0,f,c
  2357  001E72  90D8               	bcf	status,0,c
  2358  001E74  341B               	rlcf	updateCar@j^0,w,c
  2359  001E76  6ED9               	movwf	fsr2l,c
  2360  001E78  341C               	rlcf	(updateCar@j+1)^0,w,c
  2361  001E7A  6EDA               	movwf	fsr2h,c
  2362  001E7C  90D8               	bcf	status,0,c
  2363  001E7E  36D9               	rlcf	fsr2l,f,c
  2364  001E80  36DA               	rlcf	fsr2h,f,c
  2365  001E82  5015               	movf	??_updateCar^0,w,c
  2366  001E84  26D9               	addwf	fsr2l,f,c
  2367  001E86  5016               	movf	(??_updateCar+1)^0,w,c
  2368  001E88  22DA               	addwfc	fsr2h,f,c
  2369  001E8A  0EFE               	movlw	254
  2370  001E8C  6EDE               	movwf	postinc2,c
  2371  001E8E  0EFF               	movlw	255
  2372  001E90  6EDD               	movwf	postdec2,c
  2373  001E92  EF93  F00F         	goto	l3849
  2374  001E96                     l3845:
  2375                           
  2376                           ;snake.c: 72:    if(car[j][1]<0){
  2377  001E96  0EC0               	movlw	low _car
  2378  001E98  6E15               	movwf	??_updateCar^0,c
  2379  001E9A  0E00               	movlw	high _car
  2380  001E9C  6E16               	movwf	(??_updateCar+1)^0,c
  2381  001E9E  0E02               	movlw	2
  2382  001EA0  2615               	addwf	??_updateCar^0,f,c
  2383  001EA2  0E00               	movlw	0
  2384  001EA4  2216               	addwfc	(??_updateCar+1)^0,f,c
  2385  001EA6  90D8               	bcf	status,0,c
  2386  001EA8  341B               	rlcf	updateCar@j^0,w,c
  2387  001EAA  6ED9               	movwf	fsr2l,c
  2388  001EAC  341C               	rlcf	(updateCar@j+1)^0,w,c
  2389  001EAE  6EDA               	movwf	fsr2h,c
  2390  001EB0  90D8               	bcf	status,0,c
  2391  001EB2  36D9               	rlcf	fsr2l,f,c
  2392  001EB4  36DA               	rlcf	fsr2h,f,c
  2393  001EB6  5015               	movf	??_updateCar^0,w,c
  2394  001EB8  26D9               	addwf	fsr2l,f,c
  2395  001EBA  5016               	movf	(??_updateCar+1)^0,w,c
  2396  001EBC  22DA               	addwfc	fsr2h,f,c
  2397  001EBE  0E01               	movlw	1
  2398  001EC0  BEDB               	btfsc	plusw2,7,c
  2399  001EC2  EF67  F00F         	goto	u4400
  2400  001EC6  EF65  F00F         	goto	u4401
  2401  001ECA                     u4401:
  2402  001ECA  EF93  F00F         	goto	l3849
  2403  001ECE                     u4400:
  2404  001ECE                     
  2405                           ;snake.c: 73:     car[j][0]=15;
  2406  001ECE  0EC0               	movlw	low _car
  2407  001ED0  6E15               	movwf	??_updateCar^0,c
  2408  001ED2  0E00               	movlw	high _car
  2409  001ED4  6E16               	movwf	(??_updateCar+1)^0,c
  2410  001ED6  90D8               	bcf	status,0,c
  2411  001ED8  341B               	rlcf	updateCar@j^0,w,c
  2412  001EDA  6ED9               	movwf	fsr2l,c
  2413  001EDC  341C               	rlcf	(updateCar@j+1)^0,w,c
  2414  001EDE  6EDA               	movwf	fsr2h,c
  2415  001EE0  90D8               	bcf	status,0,c
  2416  001EE2  36D9               	rlcf	fsr2l,f,c
  2417  001EE4  36DA               	rlcf	fsr2h,f,c
  2418  001EE6  5015               	movf	??_updateCar^0,w,c
  2419  001EE8  26D9               	addwf	fsr2l,f,c
  2420  001EEA  5016               	movf	(??_updateCar+1)^0,w,c
  2421  001EEC  22DA               	addwfc	fsr2h,f,c
  2422  001EEE  0E0F               	movlw	15
  2423  001EF0  6EDE               	movwf	postinc2,c
  2424  001EF2  0E00               	movlw	0
  2425  001EF4  6EDD               	movwf	postdec2,c
  2426                           
  2427                           ;snake.c: 74:     car[j][1]=17;
  2428  001EF6  0EC0               	movlw	low _car
  2429  001EF8  6E15               	movwf	??_updateCar^0,c
  2430  001EFA  0E00               	movlw	high _car
  2431  001EFC  6E16               	movwf	(??_updateCar+1)^0,c
  2432  001EFE  0E02               	movlw	2
  2433  001F00  2615               	addwf	??_updateCar^0,f,c
  2434  001F02  0E00               	movlw	0
  2435  001F04  2216               	addwfc	(??_updateCar+1)^0,f,c
  2436  001F06  90D8               	bcf	status,0,c
  2437  001F08  341B               	rlcf	updateCar@j^0,w,c
  2438  001F0A  6ED9               	movwf	fsr2l,c
  2439  001F0C  341C               	rlcf	(updateCar@j+1)^0,w,c
  2440  001F0E  6EDA               	movwf	fsr2h,c
  2441  001F10  90D8               	bcf	status,0,c
  2442  001F12  36D9               	rlcf	fsr2l,f,c
  2443  001F14  36DA               	rlcf	fsr2h,f,c
  2444  001F16  5015               	movf	??_updateCar^0,w,c
  2445  001F18  26D9               	addwf	fsr2l,f,c
  2446  001F1A  5016               	movf	(??_updateCar+1)^0,w,c
  2447  001F1C  22DA               	addwfc	fsr2h,f,c
  2448  001F1E  0E11               	movlw	17
  2449  001F20  6EDE               	movwf	postinc2,c
  2450  001F22  0E00               	movlw	0
  2451  001F24  6EDD               	movwf	postdec2,c
  2452  001F26                     l3849:
  2453                           
  2454                           ;snake.c: 77:  }
  2455  001F26  4A1B               	infsnz	updateCar@j^0,f,c
  2456  001F28  2A1C               	incf	(updateCar@j+1)^0,f,c
  2457  001F2A  BE1C               	btfsc	(updateCar@j+1)^0,7,c
  2458  001F2C  EFA1  F00F         	goto	u4411
  2459  001F30  501C               	movf	(updateCar@j+1)^0,w,c
  2460  001F32  E109               	bnz	u4410
  2461  001F34  0E06               	movlw	6
  2462  001F36  5C1B               	subwf	updateCar@j^0,w,c
  2463  001F38  A0D8               	btfss	status,0,c
  2464  001F3A  EFA1  F00F         	goto	u4411
  2465  001F3E  EFA3  F00F         	goto	u4410
  2466  001F42                     u4411:
  2467  001F42  EFB7  F00E         	goto	l292
  2468  001F46                     u4410:
  2469  001F46  0012               	return		;funcret
  2470  001F48                     __end_of_updateCar:
  2471                           	opt callstack 0
  2472                           
  2473 ;; *************** function _printWin *****************
  2474 ;; Defined at:
  2475 ;;		line 44 in file "snake.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  j               2   26[COMRAM] int 
  2480 ;;  i               2   24[COMRAM] int 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2490 ;;      Params:         0       0       0       0       0       0       0
  2491 ;;      Locals:         4       0       0       0       0       0       0
  2492 ;;      Temps:          4       0       0       0       0       0       0
  2493 ;;      Totals:         8       0       0       0       0       0       0
  2494 ;;Total ram usage:        8 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    2
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_updateMap
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text3
  2505  00224C                     __ptext3:
  2506                           	opt callstack 0
  2507  00224C                     _printWin:
  2508                           	opt callstack 27
  2509  00224C                     
  2510                           ;snake.c: 45:  int i,j=0;
  2511  00224C  0E00               	movlw	0
  2512  00224E  6E1C               	movwf	(printWin@j+1)^0,c
  2513  002250  0E00               	movlw	0
  2514  002252  6E1B               	movwf	printWin@j^0,c
  2515                           
  2516                           ;snake.c: 47:  for(j=0;j<16;++j){
  2517  002254  0E00               	movlw	0
  2518  002256  6E1C               	movwf	(printWin@j+1)^0,c
  2519  002258  0E00               	movlw	0
  2520  00225A  6E1B               	movwf	printWin@j^0,c
  2521  00225C                     l3797:
  2522                           
  2523                           ;snake.c: 48:   for(i=0;i<16;++i){
  2524  00225C  0E00               	movlw	0
  2525  00225E  6E1A               	movwf	(printWin@i+1)^0,c
  2526  002260  0E00               	movlw	0
  2527  002262  6E19               	movwf	printWin@i^0,c
  2528  002264                     l3803:
  2529                           
  2530                           ;snake.c: 49:    if(i==0||i==15||j==0||j==15)
  2531  002264  5019               	movf	printWin@i^0,w,c
  2532  002266  101A               	iorwf	(printWin@i+1)^0,w,c
  2533  002268  B4D8               	btfsc	status,2,c
  2534  00226A  EF39  F011         	goto	u4311
  2535  00226E  EF3B  F011         	goto	u4310
  2536  002272                     u4311:
  2537  002272  EF58  F011         	goto	l3811
  2538  002276                     u4310:
  2539  002276  0E0F               	movlw	15
  2540  002278  1819               	xorwf	printWin@i^0,w,c
  2541  00227A  101A               	iorwf	(printWin@i+1)^0,w,c
  2542  00227C  B4D8               	btfsc	status,2,c
  2543  00227E  EF43  F011         	goto	u4321
  2544  002282  EF45  F011         	goto	u4320
  2545  002286                     u4321:
  2546  002286  EF58  F011         	goto	l3811
  2547  00228A                     u4320:
  2548  00228A  501B               	movf	printWin@j^0,w,c
  2549  00228C  101C               	iorwf	(printWin@j+1)^0,w,c
  2550  00228E  B4D8               	btfsc	status,2,c
  2551  002290  EF4C  F011         	goto	u4331
  2552  002294  EF4E  F011         	goto	u4330
  2553  002298                     u4331:
  2554  002298  EF58  F011         	goto	l3811
  2555  00229C                     u4330:
  2556  00229C  0E0F               	movlw	15
  2557  00229E  181B               	xorwf	printWin@j^0,w,c
  2558  0022A0  101C               	iorwf	(printWin@j+1)^0,w,c
  2559  0022A2  A4D8               	btfss	status,2,c
  2560  0022A4  EF56  F011         	goto	u4341
  2561  0022A8  EF58  F011         	goto	u4340
  2562  0022AC                     u4341:
  2563  0022AC  EF77  F011         	goto	l3813
  2564  0022B0                     u4340:
  2565  0022B0                     l3811:
  2566                           
  2567                           ;snake.c: 50:     map[j][i]=1;
  2568  0022B0  C01B  F015         	movff	printWin@j,??_printWin
  2569  0022B4  C01C  F016         	movff	printWin@j+1,??_printWin+1
  2570  0022B8  3A15               	swapf	??_printWin^0,f,c
  2571  0022BA  3A16               	swapf	(??_printWin+1)^0,f,c
  2572  0022BC  0EF0               	movlw	240
  2573  0022BE  1616               	andwf	(??_printWin+1)^0,f,c
  2574  0022C0  5015               	movf	??_printWin^0,w,c
  2575  0022C2  0B0F               	andlw	15
  2576  0022C4  1216               	iorwf	(??_printWin+1)^0,f,c
  2577  0022C6  0EF0               	movlw	240
  2578  0022C8  1615               	andwf	??_printWin^0,f,c
  2579  0022CA  0E00               	movlw	low _map
  2580  0022CC  6E17               	movwf	(??_printWin+2)^0,c
  2581  0022CE  0E02               	movlw	high _map
  2582  0022D0  6E18               	movwf	(??_printWin+3)^0,c
  2583  0022D2  5015               	movf	??_printWin^0,w,c
  2584  0022D4  2617               	addwf	(??_printWin+2)^0,f,c
  2585  0022D6  5016               	movf	(??_printWin+1)^0,w,c
  2586  0022D8  2218               	addwfc	(??_printWin+3)^0,f,c
  2587  0022DA  5019               	movf	printWin@i^0,w,c
  2588  0022DC  2417               	addwf	(??_printWin+2)^0,w,c
  2589  0022DE  6ED9               	movwf	fsr2l,c
  2590  0022E0  501A               	movf	(printWin@i+1)^0,w,c
  2591  0022E2  2018               	addwfc	(??_printWin+3)^0,w,c
  2592  0022E4  6EDA               	movwf	fsr2h,c
  2593  0022E6  0E01               	movlw	1
  2594  0022E8  6EDF               	movwf	indf2,c
  2595  0022EA  EF94  F011         	goto	l3815
  2596  0022EE                     l3813:
  2597                           
  2598                           ;snake.c: 52:     map[j][i]=0;
  2599  0022EE  C01B  F015         	movff	printWin@j,??_printWin
  2600  0022F2  C01C  F016         	movff	printWin@j+1,??_printWin+1
  2601  0022F6  3A15               	swapf	??_printWin^0,f,c
  2602  0022F8  3A16               	swapf	(??_printWin+1)^0,f,c
  2603  0022FA  0EF0               	movlw	240
  2604  0022FC  1616               	andwf	(??_printWin+1)^0,f,c
  2605  0022FE  5015               	movf	??_printWin^0,w,c
  2606  002300  0B0F               	andlw	15
  2607  002302  1216               	iorwf	(??_printWin+1)^0,f,c
  2608  002304  0EF0               	movlw	240
  2609  002306  1615               	andwf	??_printWin^0,f,c
  2610  002308  0E00               	movlw	low _map
  2611  00230A  6E17               	movwf	(??_printWin+2)^0,c
  2612  00230C  0E02               	movlw	high _map
  2613  00230E  6E18               	movwf	(??_printWin+3)^0,c
  2614  002310  5015               	movf	??_printWin^0,w,c
  2615  002312  2617               	addwf	(??_printWin+2)^0,f,c
  2616  002314  5016               	movf	(??_printWin+1)^0,w,c
  2617  002316  2218               	addwfc	(??_printWin+3)^0,f,c
  2618  002318  5019               	movf	printWin@i^0,w,c
  2619  00231A  2417               	addwf	(??_printWin+2)^0,w,c
  2620  00231C  6ED9               	movwf	fsr2l,c
  2621  00231E  501A               	movf	(printWin@i+1)^0,w,c
  2622  002320  2018               	addwfc	(??_printWin+3)^0,w,c
  2623  002322  6EDA               	movwf	fsr2h,c
  2624  002324  0E00               	movlw	0
  2625  002326  6EDF               	movwf	indf2,c
  2626  002328                     l3815:
  2627                           
  2628                           ;snake.c: 53:   }
  2629  002328  4A19               	infsnz	printWin@i^0,f,c
  2630  00232A  2A1A               	incf	(printWin@i+1)^0,f,c
  2631  00232C  BE1A               	btfsc	(printWin@i+1)^0,7,c
  2632  00232E  EFA2  F011         	goto	u4351
  2633  002332  501A               	movf	(printWin@i+1)^0,w,c
  2634  002334  E109               	bnz	u4350
  2635  002336  0E10               	movlw	16
  2636  002338  5C19               	subwf	printWin@i^0,w,c
  2637  00233A  A0D8               	btfss	status,0,c
  2638  00233C  EFA2  F011         	goto	u4351
  2639  002340  EFA4  F011         	goto	u4350
  2640  002344                     u4351:
  2641  002344  EF32  F011         	goto	l3803
  2642  002348                     u4350:
  2643  002348                     
  2644                           ;snake.c: 54:  }
  2645  002348  4A1B               	infsnz	printWin@j^0,f,c
  2646  00234A  2A1C               	incf	(printWin@j+1)^0,f,c
  2647  00234C  BE1C               	btfsc	(printWin@j+1)^0,7,c
  2648  00234E  EFB2  F011         	goto	u4361
  2649  002352  501C               	movf	(printWin@j+1)^0,w,c
  2650  002354  E109               	bnz	u4360
  2651  002356  0E10               	movlw	16
  2652  002358  5C1B               	subwf	printWin@j^0,w,c
  2653  00235A  A0D8               	btfss	status,0,c
  2654  00235C  EFB2  F011         	goto	u4361
  2655  002360  EFB4  F011         	goto	u4360
  2656  002364                     u4361:
  2657  002364  EF2E  F011         	goto	l3797
  2658  002368                     u4360:
  2659  002368                     
  2660                           ;snake.c: 55:     error=1;
  2661  002368  0E01               	movlw	1
  2662  00236A  6E56               	movwf	_error^0,c
  2663  00236C  0012               	return		;funcret
  2664  00236E                     __end_of_printWin:
  2665                           	opt callstack 0
  2666                           
  2667 ;; *************** function _printError *****************
  2668 ;; Defined at:
  2669 ;;		line 31 in file "snake.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  j               2   26[COMRAM] int 
  2674 ;;  i               2   24[COMRAM] int 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2684 ;;      Params:         0       0       0       0       0       0       0
  2685 ;;      Locals:         4       0       0       0       0       0       0
  2686 ;;      Temps:          4       0       0       0       0       0       0
  2687 ;;      Totals:         8       0       0       0       0       0       0
  2688 ;;Total ram usage:        8 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    2
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_updateMap
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text4
  2699  00236E                     __ptext4:
  2700                           	opt callstack 0
  2701  00236E                     _printError:
  2702                           	opt callstack 27
  2703  00236E                     
  2704                           ;snake.c: 32:  int i,j=0;
  2705  00236E  0E00               	movlw	0
  2706  002370  6E1C               	movwf	(printError@j+1)^0,c
  2707  002372  0E00               	movlw	0
  2708  002374  6E1B               	movwf	printError@j^0,c
  2709                           
  2710                           ;snake.c: 34:  for(j=0;j<16;++j){
  2711  002376  0E00               	movlw	0
  2712  002378  6E1C               	movwf	(printError@j+1)^0,c
  2713  00237A  0E00               	movlw	0
  2714  00237C  6E1B               	movwf	printError@j^0,c
  2715  00237E                     l3769:
  2716                           
  2717                           ;snake.c: 35:   for(i=0;i<16;++i){
  2718  00237E  0E00               	movlw	0
  2719  002380  6E1A               	movwf	(printError@i+1)^0,c
  2720  002382  0E00               	movlw	0
  2721  002384  6E19               	movwf	printError@i^0,c
  2722  002386                     l3775:
  2723                           
  2724                           ;snake.c: 36:    if(i==j||i==15-j)
  2725  002386  501B               	movf	printError@j^0,w,c
  2726  002388  1819               	xorwf	printError@i^0,w,c
  2727  00238A  E109               	bnz	u4270
  2728  00238C  501C               	movf	(printError@j+1)^0,w,c
  2729  00238E  181A               	xorwf	(printError@i+1)^0,w,c
  2730  002390  B4D8               	btfsc	status,2,c
  2731  002392  EFCD  F011         	goto	u4271
  2732  002396  EFCF  F011         	goto	u4270
  2733  00239A                     u4271:
  2734  00239A  EFE3  F011         	goto	l3779
  2735  00239E                     u4270:
  2736  00239E  0E0F               	movlw	15
  2737  0023A0  6E15               	movwf	??_printError^0,c
  2738  0023A2  0E00               	movlw	0
  2739  0023A4  6E16               	movwf	(??_printError+1)^0,c
  2740  0023A6  501B               	movf	printError@j^0,w,c
  2741  0023A8  5E15               	subwf	??_printError^0,f,c
  2742  0023AA  501C               	movf	(printError@j+1)^0,w,c
  2743  0023AC  5A16               	subwfb	(??_printError+1)^0,f,c
  2744  0023AE  5019               	movf	printError@i^0,w,c
  2745  0023B0  1815               	xorwf	??_printError^0,w,c
  2746  0023B2  E107               	bnz	u4281
  2747  0023B4  501A               	movf	(printError@i+1)^0,w,c
  2748  0023B6  1816               	xorwf	(??_printError+1)^0,w,c
  2749  0023B8  A4D8               	btfss	status,2,c
  2750  0023BA  EFE1  F011         	goto	u4281
  2751  0023BE  EFE3  F011         	goto	u4280
  2752  0023C2                     u4281:
  2753  0023C2  EF02  F012         	goto	l3781
  2754  0023C6                     u4280:
  2755  0023C6                     l3779:
  2756                           
  2757                           ;snake.c: 37:     map[j][i]=1;
  2758  0023C6  C01B  F015         	movff	printError@j,??_printError
  2759  0023CA  C01C  F016         	movff	printError@j+1,??_printError+1
  2760  0023CE  3A15               	swapf	??_printError^0,f,c
  2761  0023D0  3A16               	swapf	(??_printError+1)^0,f,c
  2762  0023D2  0EF0               	movlw	240
  2763  0023D4  1616               	andwf	(??_printError+1)^0,f,c
  2764  0023D6  5015               	movf	??_printError^0,w,c
  2765  0023D8  0B0F               	andlw	15
  2766  0023DA  1216               	iorwf	(??_printError+1)^0,f,c
  2767  0023DC  0EF0               	movlw	240
  2768  0023DE  1615               	andwf	??_printError^0,f,c
  2769  0023E0  0E00               	movlw	low _map
  2770  0023E2  6E17               	movwf	(??_printError+2)^0,c
  2771  0023E4  0E02               	movlw	high _map
  2772  0023E6  6E18               	movwf	(??_printError+3)^0,c
  2773  0023E8  5015               	movf	??_printError^0,w,c
  2774  0023EA  2617               	addwf	(??_printError+2)^0,f,c
  2775  0023EC  5016               	movf	(??_printError+1)^0,w,c
  2776  0023EE  2218               	addwfc	(??_printError+3)^0,f,c
  2777  0023F0  5019               	movf	printError@i^0,w,c
  2778  0023F2  2417               	addwf	(??_printError+2)^0,w,c
  2779  0023F4  6ED9               	movwf	fsr2l,c
  2780  0023F6  501A               	movf	(printError@i+1)^0,w,c
  2781  0023F8  2018               	addwfc	(??_printError+3)^0,w,c
  2782  0023FA  6EDA               	movwf	fsr2h,c
  2783  0023FC  0E01               	movlw	1
  2784  0023FE  6EDF               	movwf	indf2,c
  2785  002400  EF1F  F012         	goto	l3783
  2786  002404                     l3781:
  2787                           
  2788                           ;snake.c: 39:     map[j][i]=0;
  2789  002404  C01B  F015         	movff	printError@j,??_printError
  2790  002408  C01C  F016         	movff	printError@j+1,??_printError+1
  2791  00240C  3A15               	swapf	??_printError^0,f,c
  2792  00240E  3A16               	swapf	(??_printError+1)^0,f,c
  2793  002410  0EF0               	movlw	240
  2794  002412  1616               	andwf	(??_printError+1)^0,f,c
  2795  002414  5015               	movf	??_printError^0,w,c
  2796  002416  0B0F               	andlw	15
  2797  002418  1216               	iorwf	(??_printError+1)^0,f,c
  2798  00241A  0EF0               	movlw	240
  2799  00241C  1615               	andwf	??_printError^0,f,c
  2800  00241E  0E00               	movlw	low _map
  2801  002420  6E17               	movwf	(??_printError+2)^0,c
  2802  002422  0E02               	movlw	high _map
  2803  002424  6E18               	movwf	(??_printError+3)^0,c
  2804  002426  5015               	movf	??_printError^0,w,c
  2805  002428  2617               	addwf	(??_printError+2)^0,f,c
  2806  00242A  5016               	movf	(??_printError+1)^0,w,c
  2807  00242C  2218               	addwfc	(??_printError+3)^0,f,c
  2808  00242E  5019               	movf	printError@i^0,w,c
  2809  002430  2417               	addwf	(??_printError+2)^0,w,c
  2810  002432  6ED9               	movwf	fsr2l,c
  2811  002434  501A               	movf	(printError@i+1)^0,w,c
  2812  002436  2018               	addwfc	(??_printError+3)^0,w,c
  2813  002438  6EDA               	movwf	fsr2h,c
  2814  00243A  0E00               	movlw	0
  2815  00243C  6EDF               	movwf	indf2,c
  2816  00243E                     l3783:
  2817                           
  2818                           ;snake.c: 40:   }
  2819  00243E  4A19               	infsnz	printError@i^0,f,c
  2820  002440  2A1A               	incf	(printError@i+1)^0,f,c
  2821  002442  BE1A               	btfsc	(printError@i+1)^0,7,c
  2822  002444  EF2D  F012         	goto	u4291
  2823  002448  501A               	movf	(printError@i+1)^0,w,c
  2824  00244A  E109               	bnz	u4290
  2825  00244C  0E10               	movlw	16
  2826  00244E  5C19               	subwf	printError@i^0,w,c
  2827  002450  A0D8               	btfss	status,0,c
  2828  002452  EF2D  F012         	goto	u4291
  2829  002456  EF2F  F012         	goto	u4290
  2830  00245A                     u4291:
  2831  00245A  EFC3  F011         	goto	l3775
  2832  00245E                     u4290:
  2833  00245E                     
  2834                           ;snake.c: 41:  }
  2835  00245E  4A1B               	infsnz	printError@j^0,f,c
  2836  002460  2A1C               	incf	(printError@j+1)^0,f,c
  2837  002462  BE1C               	btfsc	(printError@j+1)^0,7,c
  2838  002464  EF3D  F012         	goto	u4301
  2839  002468  501C               	movf	(printError@j+1)^0,w,c
  2840  00246A  E109               	bnz	u4300
  2841  00246C  0E10               	movlw	16
  2842  00246E  5C1B               	subwf	printError@j^0,w,c
  2843  002470  A0D8               	btfss	status,0,c
  2844  002472  EF3D  F012         	goto	u4301
  2845  002476  EF3F  F012         	goto	u4300
  2846  00247A                     u4301:
  2847  00247A  EFBF  F011         	goto	l3769
  2848  00247E                     u4300:
  2849  00247E  0012               	return		;funcret
  2850  002480                     __end_of_printError:
  2851                           	opt callstack 0
  2852                           
  2853 ;; *************** function _plot *****************
  2854 ;; Defined at:
  2855 ;;		line 182 in file "led-metrix.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  pattern         2   26[COMRAM] PTR unsigned char [16]
  2858 ;;		 -> LED(256), map(256), outputMap1(256), 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  char_pattern    8   24[BANK4 ] unsigned char [8]
  2861 ;;  char_pattern    8   16[BANK4 ] unsigned char [8]
  2862 ;;  char_pattern    8    8[BANK4 ] unsigned char [8]
  2863 ;;  char_pattern    8    0[BANK4 ] unsigned char [8]
  2864 ;;  i               2   34[BANK4 ] int 
  2865 ;;  j               2   32[BANK4 ] int 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2875 ;;      Params:         2       0       0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0      36       0
  2877 ;;      Temps:          5       0       0       0       0       0       0
  2878 ;;      Totals:         7       0       0       0       0      36       0
  2879 ;;Total ram usage:       43 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    4
  2882 ;; This function calls:
  2883 ;;		_set_register1
  2884 ;;		_set_register2
  2885 ;;		_set_register3
  2886 ;;		_set_register4
  2887 ;; This function is called by:
  2888 ;;		_main
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text5
  2893  000012                     __ptext5:
  2894                           	opt callstack 0
  2895  000012                     _plot:
  2896                           	opt callstack 26
  2897  000012                     
  2898                           ;led-metrix.c: 182: void plot(unsigned char pattern[16][16]);led-metrix.c: 183: {;led-me
      +                          trix.c: 184:     int i,j;;led-metrix.c: 185:     unsigned char char_pattern1[8]={0};
  2899  000012  EE24  F000         	lfsr	2,plot@char_pattern1
  2900  000016  0E07               	movlw	7
  2901  000018                     u4731:
  2902  000018  6ADE               	clrf	postinc2,c
  2903  00001A  06E8               	decf	wreg,f,c
  2904  00001C  E2FD               	bc	u4731
  2905                           
  2906                           ;led-metrix.c: 186:     unsigned char char_pattern2[8]={0};
  2907  00001E  EE24  F008         	lfsr	2,plot@char_pattern2
  2908  000022  0E07               	movlw	7
  2909  000024                     u4741:
  2910  000024  6ADE               	clrf	postinc2,c
  2911  000026  06E8               	decf	wreg,f,c
  2912  000028  E2FD               	bc	u4741
  2913                           
  2914                           ;led-metrix.c: 187:     unsigned char char_pattern3[8]={0};
  2915  00002A  EE24  F010         	lfsr	2,plot@char_pattern3
  2916  00002E  0E07               	movlw	7
  2917  000030                     u4751:
  2918  000030  6ADE               	clrf	postinc2,c
  2919  000032  06E8               	decf	wreg,f,c
  2920  000034  E2FD               	bc	u4751
  2921                           
  2922                           ;led-metrix.c: 188:     unsigned char char_pattern4[8]={0};
  2923  000036  EE24  F018         	lfsr	2,plot@char_pattern4
  2924  00003A  0E07               	movlw	7
  2925  00003C                     u4761:
  2926  00003C  6ADE               	clrf	postinc2,c
  2927  00003E  06E8               	decf	wreg,f,c
  2928  000040  E2FD               	bc	u4761
  2929  000042                     
  2930                           ;led-metrix.c: 190:     for(i=0;i<8;++i)
  2931  000042  0E00               	movlw	0
  2932  000044  0104               	movlb	4	; () banked
  2933  000046  6F23               	movwf	(plot@i+1)& (0+255),b
  2934  000048  0E00               	movlw	0
  2935  00004A  6F22               	movwf	plot@i& (0+255),b
  2936  00004C                     l4069:
  2937                           
  2938                           ; BSR set to: 4
  2939                           ;led-metrix.c: 191:     {;led-metrix.c: 192:         for(j=0;j<8;++j)
  2940  00004C  0E00               	movlw	0
  2941  00004E  6F21               	movwf	(plot@j+1)& (0+255),b
  2942  000050  0E00               	movlw	0
  2943  000052  6F20               	movwf	plot@j& (0+255),b
  2944  000054                     l4075:
  2945                           
  2946                           ; BSR set to: 4
  2947                           ;led-metrix.c: 193:         {;led-metrix.c: 194:             char_pattern1[i] <<= 1;
  2948  000054  0E00               	movlw	low plot@char_pattern1
  2949  000056  2522               	addwf	plot@i& (0+255),w,b
  2950  000058  6ED9               	movwf	fsr2l,c
  2951  00005A  0E04               	movlw	high plot@char_pattern1
  2952  00005C  2123               	addwfc	(plot@i+1)& (0+255),w,b
  2953  00005E  6EDA               	movwf	fsr2h,c
  2954  000060  90D8               	bcf	status,0,c
  2955  000062  36DF               	rlcf	indf2,f,c
  2956                           
  2957                           ;led-metrix.c: 195:             if(pattern[i][j]==1)
  2958  000064  C422  F01D         	movff	plot@i,??_plot
  2959  000068  C423  F01E         	movff	plot@i+1,??_plot+1
  2960  00006C  3A1D               	swapf	??_plot^0,f,c
  2961  00006E  3A1E               	swapf	(??_plot+1)^0,f,c
  2962  000070  0EF0               	movlw	240
  2963  000072  161E               	andwf	(??_plot+1)^0,f,c
  2964  000074  501D               	movf	??_plot^0,w,c
  2965  000076  0B0F               	andlw	15
  2966  000078  121E               	iorwf	(??_plot+1)^0,f,c
  2967  00007A  0EF0               	movlw	240
  2968  00007C  161D               	andwf	??_plot^0,f,c
  2969  00007E  C01B  F01F         	movff	plot@pattern,??_plot+2
  2970  000082  C01C  F020         	movff	plot@pattern+1,??_plot+3
  2971  000086  501D               	movf	??_plot^0,w,c
  2972  000088  261F               	addwf	(??_plot+2)^0,f,c
  2973  00008A  501E               	movf	(??_plot+1)^0,w,c
  2974  00008C  2220               	addwfc	(??_plot+3)^0,f,c
  2975  00008E  5120               	movf	plot@j& (0+255),w,b
  2976  000090  241F               	addwf	(??_plot+2)^0,w,c
  2977  000092  6ED9               	movwf	fsr2l,c
  2978  000094  5121               	movf	(plot@j+1)& (0+255),w,b
  2979  000096  2020               	addwfc	(??_plot+3)^0,w,c
  2980  000098  6EDA               	movwf	fsr2h,c
  2981  00009A  04DE               	decf	postinc2,w,c
  2982  00009C  A4D8               	btfss	status,2,c
  2983  00009E  EF53  F000         	goto	u4771
  2984  0000A2  EF55  F000         	goto	u4770
  2985  0000A6                     u4771:
  2986  0000A6  EF5C  F000         	goto	l4079
  2987  0000AA                     u4770:
  2988  0000AA                     
  2989                           ; BSR set to: 4
  2990                           ;led-metrix.c: 196:             {;led-metrix.c: 197:                 char_pattern1[i] +=
      +                           1;
  2991  0000AA  0E00               	movlw	low plot@char_pattern1
  2992  0000AC  2522               	addwf	plot@i& (0+255),w,b
  2993  0000AE  6ED9               	movwf	fsr2l,c
  2994  0000B0  0E04               	movlw	high plot@char_pattern1
  2995  0000B2  2123               	addwfc	(plot@i+1)& (0+255),w,b
  2996  0000B4  6EDA               	movwf	fsr2h,c
  2997  0000B6  2ADF               	incf	indf2,f,c
  2998  0000B8                     l4079:
  2999                           
  3000                           ; BSR set to: 4
  3001                           ;led-metrix.c: 199:         }
  3002  0000B8  4B20               	infsnz	plot@j& (0+255),f,b
  3003  0000BA  2B21               	incf	(plot@j+1)& (0+255),f,b
  3004  0000BC                     
  3005                           ; BSR set to: 4
  3006  0000BC  BF21               	btfsc	(plot@j+1)& (0+255),7,b
  3007  0000BE  EF6A  F000         	goto	u4781
  3008  0000C2  5121               	movf	(plot@j+1)& (0+255),w,b
  3009  0000C4  E109               	bnz	u4780
  3010  0000C6  0E08               	movlw	8
  3011  0000C8  5D20               	subwf	plot@j& (0+255),w,b
  3012  0000CA  A0D8               	btfss	status,0,c
  3013  0000CC  EF6A  F000         	goto	u4781
  3014  0000D0  EF6C  F000         	goto	u4780
  3015  0000D4                     u4781:
  3016  0000D4  EF2A  F000         	goto	l4075
  3017  0000D8                     u4780:
  3018  0000D8                     
  3019                           ; BSR set to: 4
  3020                           ;led-metrix.c: 200:     }
  3021  0000D8  4B22               	infsnz	plot@i& (0+255),f,b
  3022  0000DA  2B23               	incf	(plot@i+1)& (0+255),f,b
  3023  0000DC                     
  3024                           ; BSR set to: 4
  3025  0000DC  BF23               	btfsc	(plot@i+1)& (0+255),7,b
  3026  0000DE  EF7A  F000         	goto	u4791
  3027  0000E2  5123               	movf	(plot@i+1)& (0+255),w,b
  3028  0000E4  E109               	bnz	u4790
  3029  0000E6  0E08               	movlw	8
  3030  0000E8  5D22               	subwf	plot@i& (0+255),w,b
  3031  0000EA  A0D8               	btfss	status,0,c
  3032  0000EC  EF7A  F000         	goto	u4791
  3033  0000F0  EF7C  F000         	goto	u4790
  3034  0000F4                     u4791:
  3035  0000F4  EF26  F000         	goto	l4069
  3036  0000F8                     u4790:
  3037  0000F8                     
  3038                           ; BSR set to: 4
  3039                           ;led-metrix.c: 201:     for(i=0;i<8;i++)
  3040  0000F8  0E00               	movlw	0
  3041  0000FA  6F23               	movwf	(plot@i+1)& (0+255),b
  3042  0000FC  0E00               	movlw	0
  3043  0000FE  6F22               	movwf	plot@i& (0+255),b
  3044  000100                     l4093:
  3045                           
  3046                           ; BSR set to: 4
  3047                           ;led-metrix.c: 202:     {;led-metrix.c: 203:         for(j=0;j<8;j++)
  3048  000100  0E00               	movlw	0
  3049  000102  6F21               	movwf	(plot@j+1)& (0+255),b
  3050  000104  0E00               	movlw	0
  3051  000106  6F20               	movwf	plot@j& (0+255),b
  3052  000108                     l4099:
  3053                           
  3054                           ; BSR set to: 4
  3055                           ;led-metrix.c: 204:         {;led-metrix.c: 205:             char_pattern2[7-i] <<= 1;
  3056  000108  0E07               	movlw	7
  3057  00010A  6E1D               	movwf	??_plot^0,c
  3058  00010C  0E00               	movlw	0
  3059  00010E  6E1E               	movwf	(??_plot+1)^0,c
  3060  000110  5122               	movf	plot@i& (0+255),w,b
  3061  000112  5E1D               	subwf	??_plot^0,f,c
  3062  000114  5123               	movf	(plot@i+1)& (0+255),w,b
  3063  000116  5A1E               	subwfb	(??_plot+1)^0,f,c
  3064  000118  0E08               	movlw	low plot@char_pattern2
  3065  00011A  241D               	addwf	??_plot^0,w,c
  3066  00011C  6ED9               	movwf	fsr2l,c
  3067  00011E  0E04               	movlw	high plot@char_pattern2
  3068  000120  201E               	addwfc	(??_plot+1)^0,w,c
  3069  000122  6EDA               	movwf	fsr2h,c
  3070  000124  90D8               	bcf	status,0,c
  3071  000126  36DF               	rlcf	indf2,f,c
  3072                           
  3073                           ;led-metrix.c: 206:             if(pattern[i][7-j+8]==1)
  3074  000128  C422  F01D         	movff	plot@i,??_plot
  3075  00012C  C423  F01E         	movff	plot@i+1,??_plot+1
  3076  000130  3A1D               	swapf	??_plot^0,f,c
  3077  000132  3A1E               	swapf	(??_plot+1)^0,f,c
  3078  000134  0EF0               	movlw	240
  3079  000136  161E               	andwf	(??_plot+1)^0,f,c
  3080  000138  501D               	movf	??_plot^0,w,c
  3081  00013A  0B0F               	andlw	15
  3082  00013C  121E               	iorwf	(??_plot+1)^0,f,c
  3083  00013E  0EF0               	movlw	240
  3084  000140  161D               	andwf	??_plot^0,f,c
  3085  000142  C01B  F01F         	movff	plot@pattern,??_plot+2
  3086  000146  C01C  F020         	movff	plot@pattern+1,??_plot+3
  3087  00014A  501D               	movf	??_plot^0,w,c
  3088  00014C  261F               	addwf	(??_plot+2)^0,f,c
  3089  00014E  501E               	movf	(??_plot+1)^0,w,c
  3090  000150  2220               	addwfc	(??_plot+3)^0,f,c
  3091  000152  5120               	movf	plot@j& (0+255),w,b
  3092  000154  5E1F               	subwf	(??_plot+2)^0,f,c
  3093  000156  5121               	movf	(plot@j+1)& (0+255),w,b
  3094  000158  5A20               	subwfb	(??_plot+3)^0,f,c
  3095  00015A  0E0F               	movlw	15
  3096  00015C  241F               	addwf	(??_plot+2)^0,w,c
  3097  00015E  6ED9               	movwf	fsr2l,c
  3098  000160  0E00               	movlw	0
  3099  000162  2020               	addwfc	(??_plot+3)^0,w,c
  3100  000164  6EDA               	movwf	fsr2h,c
  3101  000166  04DE               	decf	postinc2,w,c
  3102  000168  A4D8               	btfss	status,2,c
  3103  00016A  EFB9  F000         	goto	u4801
  3104  00016E  EFBB  F000         	goto	u4800
  3105  000172                     u4801:
  3106  000172  EFCA  F000         	goto	l4103
  3107  000176                     u4800:
  3108  000176                     
  3109                           ; BSR set to: 4
  3110                           ;led-metrix.c: 207:             {;led-metrix.c: 208:                 char_pattern2[7-i] 
      +                          += 1;
  3111  000176  0E07               	movlw	7
  3112  000178  6E1D               	movwf	??_plot^0,c
  3113  00017A  0E00               	movlw	0
  3114  00017C  6E1E               	movwf	(??_plot+1)^0,c
  3115  00017E  5122               	movf	plot@i& (0+255),w,b
  3116  000180  5E1D               	subwf	??_plot^0,f,c
  3117  000182  5123               	movf	(plot@i+1)& (0+255),w,b
  3118  000184  5A1E               	subwfb	(??_plot+1)^0,f,c
  3119  000186  0E08               	movlw	low plot@char_pattern2
  3120  000188  241D               	addwf	??_plot^0,w,c
  3121  00018A  6ED9               	movwf	fsr2l,c
  3122  00018C  0E04               	movlw	high plot@char_pattern2
  3123  00018E  201E               	addwfc	(??_plot+1)^0,w,c
  3124  000190  6EDA               	movwf	fsr2h,c
  3125  000192  2ADF               	incf	indf2,f,c
  3126  000194                     l4103:
  3127                           
  3128                           ; BSR set to: 4
  3129                           ;led-metrix.c: 210:         }
  3130  000194  4B20               	infsnz	plot@j& (0+255),f,b
  3131  000196  2B21               	incf	(plot@j+1)& (0+255),f,b
  3132  000198                     
  3133                           ; BSR set to: 4
  3134  000198  BF21               	btfsc	(plot@j+1)& (0+255),7,b
  3135  00019A  EFD8  F000         	goto	u4811
  3136  00019E  5121               	movf	(plot@j+1)& (0+255),w,b
  3137  0001A0  E109               	bnz	u4810
  3138  0001A2  0E08               	movlw	8
  3139  0001A4  5D20               	subwf	plot@j& (0+255),w,b
  3140  0001A6  A0D8               	btfss	status,0,c
  3141  0001A8  EFD8  F000         	goto	u4811
  3142  0001AC  EFDA  F000         	goto	u4810
  3143  0001B0                     u4811:
  3144  0001B0  EF84  F000         	goto	l4099
  3145  0001B4                     u4810:
  3146  0001B4                     
  3147                           ; BSR set to: 4
  3148                           ;led-metrix.c: 211:     }
  3149  0001B4  4B22               	infsnz	plot@i& (0+255),f,b
  3150  0001B6  2B23               	incf	(plot@i+1)& (0+255),f,b
  3151  0001B8                     
  3152                           ; BSR set to: 4
  3153  0001B8  BF23               	btfsc	(plot@i+1)& (0+255),7,b
  3154  0001BA  EFE8  F000         	goto	u4821
  3155  0001BE  5123               	movf	(plot@i+1)& (0+255),w,b
  3156  0001C0  E109               	bnz	u4820
  3157  0001C2  0E08               	movlw	8
  3158  0001C4  5D22               	subwf	plot@i& (0+255),w,b
  3159  0001C6  A0D8               	btfss	status,0,c
  3160  0001C8  EFE8  F000         	goto	u4821
  3161  0001CC  EFEA  F000         	goto	u4820
  3162  0001D0                     u4821:
  3163  0001D0  EF80  F000         	goto	l4093
  3164  0001D4                     u4820:
  3165  0001D4                     
  3166                           ; BSR set to: 4
  3167                           ;led-metrix.c: 212:     for(i=0;i<8;++i)
  3168  0001D4  0E00               	movlw	0
  3169  0001D6  6F23               	movwf	(plot@i+1)& (0+255),b
  3170  0001D8  0E00               	movlw	0
  3171  0001DA  6F22               	movwf	plot@i& (0+255),b
  3172  0001DC                     l4117:
  3173                           
  3174                           ; BSR set to: 4
  3175                           ;led-metrix.c: 213:     {;led-metrix.c: 214:         for(j=0;j<8;++j)
  3176  0001DC  0E00               	movlw	0
  3177  0001DE  6F21               	movwf	(plot@j+1)& (0+255),b
  3178  0001E0  0E00               	movlw	0
  3179  0001E2  6F20               	movwf	plot@j& (0+255),b
  3180  0001E4                     l4123:
  3181                           
  3182                           ; BSR set to: 4
  3183                           ;led-metrix.c: 215:         {;led-metrix.c: 216:             char_pattern3[i] <<= 1;
  3184  0001E4  0E10               	movlw	low plot@char_pattern3
  3185  0001E6  2522               	addwf	plot@i& (0+255),w,b
  3186  0001E8  6ED9               	movwf	fsr2l,c
  3187  0001EA  0E04               	movlw	high plot@char_pattern3
  3188  0001EC  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3189  0001EE  6EDA               	movwf	fsr2h,c
  3190  0001F0  90D8               	bcf	status,0,c
  3191  0001F2  36DF               	rlcf	indf2,f,c
  3192                           
  3193                           ;led-metrix.c: 217:             if(pattern[i+8][j]==1)
  3194  0001F4  C422  F01D         	movff	plot@i,??_plot
  3195  0001F8  C423  F01E         	movff	plot@i+1,??_plot+1
  3196  0001FC  3A1D               	swapf	??_plot^0,f,c
  3197  0001FE  3A1E               	swapf	(??_plot+1)^0,f,c
  3198  000200  0EF0               	movlw	240
  3199  000202  161E               	andwf	(??_plot+1)^0,f,c
  3200  000204  501D               	movf	??_plot^0,w,c
  3201  000206  0B0F               	andlw	15
  3202  000208  121E               	iorwf	(??_plot+1)^0,f,c
  3203  00020A  0EF0               	movlw	240
  3204  00020C  161D               	andwf	??_plot^0,f,c
  3205  00020E  C01B  F01F         	movff	plot@pattern,??_plot+2
  3206  000212  C01C  F020         	movff	plot@pattern+1,??_plot+3
  3207  000216  501D               	movf	??_plot^0,w,c
  3208  000218  261F               	addwf	(??_plot+2)^0,f,c
  3209  00021A  501E               	movf	(??_plot+1)^0,w,c
  3210  00021C  2220               	addwfc	(??_plot+3)^0,f,c
  3211  00021E  5120               	movf	plot@j& (0+255),w,b
  3212  000220  261F               	addwf	(??_plot+2)^0,f,c
  3213  000222  5121               	movf	(plot@j+1)& (0+255),w,b
  3214  000224  2220               	addwfc	(??_plot+3)^0,f,c
  3215  000226  0E80               	movlw	128
  3216  000228  241F               	addwf	(??_plot+2)^0,w,c
  3217  00022A  6ED9               	movwf	fsr2l,c
  3218  00022C  0E00               	movlw	0
  3219  00022E  2020               	addwfc	(??_plot+3)^0,w,c
  3220  000230  6EDA               	movwf	fsr2h,c
  3221  000232  04DE               	decf	postinc2,w,c
  3222  000234  A4D8               	btfss	status,2,c
  3223  000236  EF1F  F001         	goto	u4831
  3224  00023A  EF21  F001         	goto	u4830
  3225  00023E                     u4831:
  3226  00023E  EF28  F001         	goto	l4127
  3227  000242                     u4830:
  3228  000242                     
  3229                           ; BSR set to: 4
  3230                           ;led-metrix.c: 218:             {;led-metrix.c: 219:                 char_pattern3[i] +=
      +                           1;
  3231  000242  0E10               	movlw	low plot@char_pattern3
  3232  000244  2522               	addwf	plot@i& (0+255),w,b
  3233  000246  6ED9               	movwf	fsr2l,c
  3234  000248  0E04               	movlw	high plot@char_pattern3
  3235  00024A  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3236  00024C  6EDA               	movwf	fsr2h,c
  3237  00024E  2ADF               	incf	indf2,f,c
  3238  000250                     l4127:
  3239                           
  3240                           ; BSR set to: 4
  3241                           ;led-metrix.c: 221:         }
  3242  000250  4B20               	infsnz	plot@j& (0+255),f,b
  3243  000252  2B21               	incf	(plot@j+1)& (0+255),f,b
  3244  000254                     
  3245                           ; BSR set to: 4
  3246  000254  BF21               	btfsc	(plot@j+1)& (0+255),7,b
  3247  000256  EF36  F001         	goto	u4841
  3248  00025A  5121               	movf	(plot@j+1)& (0+255),w,b
  3249  00025C  E109               	bnz	u4840
  3250  00025E  0E08               	movlw	8
  3251  000260  5D20               	subwf	plot@j& (0+255),w,b
  3252  000262  A0D8               	btfss	status,0,c
  3253  000264  EF36  F001         	goto	u4841
  3254  000268  EF38  F001         	goto	u4840
  3255  00026C                     u4841:
  3256  00026C  EFF2  F000         	goto	l4123
  3257  000270                     u4840:
  3258  000270                     
  3259                           ; BSR set to: 4
  3260                           ;led-metrix.c: 222:     }
  3261  000270  4B22               	infsnz	plot@i& (0+255),f,b
  3262  000272  2B23               	incf	(plot@i+1)& (0+255),f,b
  3263  000274                     
  3264                           ; BSR set to: 4
  3265  000274  BF23               	btfsc	(plot@i+1)& (0+255),7,b
  3266  000276  EF46  F001         	goto	u4851
  3267  00027A  5123               	movf	(plot@i+1)& (0+255),w,b
  3268  00027C  E109               	bnz	u4850
  3269  00027E  0E08               	movlw	8
  3270  000280  5D22               	subwf	plot@i& (0+255),w,b
  3271  000282  A0D8               	btfss	status,0,c
  3272  000284  EF46  F001         	goto	u4851
  3273  000288  EF48  F001         	goto	u4850
  3274  00028C                     u4851:
  3275  00028C  EFEE  F000         	goto	l4117
  3276  000290                     u4850:
  3277  000290                     
  3278                           ; BSR set to: 4
  3279                           ;led-metrix.c: 223:     for(i=0;i<8;i++)
  3280  000290  0E00               	movlw	0
  3281  000292  6F23               	movwf	(plot@i+1)& (0+255),b
  3282  000294  0E00               	movlw	0
  3283  000296  6F22               	movwf	plot@i& (0+255),b
  3284  000298                     l4141:
  3285                           
  3286                           ; BSR set to: 4
  3287                           ;led-metrix.c: 224:     {;led-metrix.c: 225:         for(j=0;j<8;j++)
  3288  000298  0E00               	movlw	0
  3289  00029A  6F21               	movwf	(plot@j+1)& (0+255),b
  3290  00029C  0E00               	movlw	0
  3291  00029E  6F20               	movwf	plot@j& (0+255),b
  3292  0002A0                     l4147:
  3293                           
  3294                           ; BSR set to: 4
  3295                           ;led-metrix.c: 226:         {;led-metrix.c: 227:             char_pattern4[7-i] <<= 1;
  3296  0002A0  0E07               	movlw	7
  3297  0002A2  6E1D               	movwf	??_plot^0,c
  3298  0002A4  0E00               	movlw	0
  3299  0002A6  6E1E               	movwf	(??_plot+1)^0,c
  3300  0002A8  5122               	movf	plot@i& (0+255),w,b
  3301  0002AA  5E1D               	subwf	??_plot^0,f,c
  3302  0002AC  5123               	movf	(plot@i+1)& (0+255),w,b
  3303  0002AE  5A1E               	subwfb	(??_plot+1)^0,f,c
  3304  0002B0  0E18               	movlw	low plot@char_pattern4
  3305  0002B2  241D               	addwf	??_plot^0,w,c
  3306  0002B4  6ED9               	movwf	fsr2l,c
  3307  0002B6  0E04               	movlw	high plot@char_pattern4
  3308  0002B8  201E               	addwfc	(??_plot+1)^0,w,c
  3309  0002BA  6EDA               	movwf	fsr2h,c
  3310  0002BC  90D8               	bcf	status,0,c
  3311  0002BE  36DF               	rlcf	indf2,f,c
  3312                           
  3313                           ;led-metrix.c: 228:             if(pattern[i+8][7-j+8]==1)
  3314  0002C0  C422  F01D         	movff	plot@i,??_plot
  3315  0002C4  C423  F01E         	movff	plot@i+1,??_plot+1
  3316  0002C8  3A1D               	swapf	??_plot^0,f,c
  3317  0002CA  3A1E               	swapf	(??_plot+1)^0,f,c
  3318  0002CC  0EF0               	movlw	240
  3319  0002CE  161E               	andwf	(??_plot+1)^0,f,c
  3320  0002D0  501D               	movf	??_plot^0,w,c
  3321  0002D2  0B0F               	andlw	15
  3322  0002D4  121E               	iorwf	(??_plot+1)^0,f,c
  3323  0002D6  0EF0               	movlw	240
  3324  0002D8  161D               	andwf	??_plot^0,f,c
  3325  0002DA  C01B  F01F         	movff	plot@pattern,??_plot+2
  3326  0002DE  C01C  F020         	movff	plot@pattern+1,??_plot+3
  3327  0002E2  501D               	movf	??_plot^0,w,c
  3328  0002E4  261F               	addwf	(??_plot+2)^0,f,c
  3329  0002E6  501E               	movf	(??_plot+1)^0,w,c
  3330  0002E8  2220               	addwfc	(??_plot+3)^0,f,c
  3331  0002EA  5120               	movf	plot@j& (0+255),w,b
  3332  0002EC  5E1F               	subwf	(??_plot+2)^0,f,c
  3333  0002EE  5121               	movf	(plot@j+1)& (0+255),w,b
  3334  0002F0  5A20               	subwfb	(??_plot+3)^0,f,c
  3335  0002F2  0E8F               	movlw	143
  3336  0002F4  241F               	addwf	(??_plot+2)^0,w,c
  3337  0002F6  6ED9               	movwf	fsr2l,c
  3338  0002F8  0E00               	movlw	0
  3339  0002FA  2020               	addwfc	(??_plot+3)^0,w,c
  3340  0002FC  6EDA               	movwf	fsr2h,c
  3341  0002FE  04DE               	decf	postinc2,w,c
  3342  000300  A4D8               	btfss	status,2,c
  3343  000302  EF85  F001         	goto	u4861
  3344  000306  EF87  F001         	goto	u4860
  3345  00030A                     u4861:
  3346  00030A  EF96  F001         	goto	l4151
  3347  00030E                     u4860:
  3348  00030E                     
  3349                           ; BSR set to: 4
  3350                           ;led-metrix.c: 229:             {;led-metrix.c: 230:                 char_pattern4[7-i] 
      +                          += 1;
  3351  00030E  0E07               	movlw	7
  3352  000310  6E1D               	movwf	??_plot^0,c
  3353  000312  0E00               	movlw	0
  3354  000314  6E1E               	movwf	(??_plot+1)^0,c
  3355  000316  5122               	movf	plot@i& (0+255),w,b
  3356  000318  5E1D               	subwf	??_plot^0,f,c
  3357  00031A  5123               	movf	(plot@i+1)& (0+255),w,b
  3358  00031C  5A1E               	subwfb	(??_plot+1)^0,f,c
  3359  00031E  0E18               	movlw	low plot@char_pattern4
  3360  000320  241D               	addwf	??_plot^0,w,c
  3361  000322  6ED9               	movwf	fsr2l,c
  3362  000324  0E04               	movlw	high plot@char_pattern4
  3363  000326  201E               	addwfc	(??_plot+1)^0,w,c
  3364  000328  6EDA               	movwf	fsr2h,c
  3365  00032A  2ADF               	incf	indf2,f,c
  3366  00032C                     l4151:
  3367                           
  3368                           ; BSR set to: 4
  3369                           ;led-metrix.c: 232:         }
  3370  00032C  4B20               	infsnz	plot@j& (0+255),f,b
  3371  00032E  2B21               	incf	(plot@j+1)& (0+255),f,b
  3372  000330                     
  3373                           ; BSR set to: 4
  3374  000330  BF21               	btfsc	(plot@j+1)& (0+255),7,b
  3375  000332  EFA4  F001         	goto	u4871
  3376  000336  5121               	movf	(plot@j+1)& (0+255),w,b
  3377  000338  E109               	bnz	u4870
  3378  00033A  0E08               	movlw	8
  3379  00033C  5D20               	subwf	plot@j& (0+255),w,b
  3380  00033E  A0D8               	btfss	status,0,c
  3381  000340  EFA4  F001         	goto	u4871
  3382  000344  EFA6  F001         	goto	u4870
  3383  000348                     u4871:
  3384  000348  EF50  F001         	goto	l4147
  3385  00034C                     u4870:
  3386  00034C                     
  3387                           ; BSR set to: 4
  3388                           ;led-metrix.c: 233:     }
  3389  00034C  4B22               	infsnz	plot@i& (0+255),f,b
  3390  00034E  2B23               	incf	(plot@i+1)& (0+255),f,b
  3391  000350                     
  3392                           ; BSR set to: 4
  3393  000350  BF23               	btfsc	(plot@i+1)& (0+255),7,b
  3394  000352  EFB4  F001         	goto	u4881
  3395  000356  5123               	movf	(plot@i+1)& (0+255),w,b
  3396  000358  E109               	bnz	u4880
  3397  00035A  0E08               	movlw	8
  3398  00035C  5D22               	subwf	plot@i& (0+255),w,b
  3399  00035E  A0D8               	btfss	status,0,c
  3400  000360  EFB4  F001         	goto	u4881
  3401  000364  EFB6  F001         	goto	u4880
  3402  000368                     u4881:
  3403  000368  EF4C  F001         	goto	l4141
  3404  00036C                     u4880:
  3405  00036C                     
  3406                           ; BSR set to: 4
  3407                           ;led-metrix.c: 236:     set_register1((0X0C), (0x0));
  3408  00036C  0E00               	movlw	0
  3409  00036E  6E19               	movwf	set_register1@value^0,c
  3410  000370  0E0C               	movlw	12
  3411  000372  EC50  F017         	call	_set_register1
  3412                           
  3413                           ;led-metrix.c: 237:     set_register2((0X0C), (0x0));
  3414  000376  0E00               	movlw	0
  3415  000378  6E19               	movwf	set_register2@value^0,c
  3416  00037A  0E0C               	movlw	12
  3417  00037C  EC41  F017         	call	_set_register2
  3418                           
  3419                           ;led-metrix.c: 238:     set_register3((0X0C), (0x0));
  3420  000380  0E00               	movlw	0
  3421  000382  6E19               	movwf	set_register3@value^0,c
  3422  000384  0E0C               	movlw	12
  3423  000386  EC32  F017         	call	_set_register3
  3424                           
  3425                           ;led-metrix.c: 239:     set_register4((0X0C), (0x0));
  3426  00038A  0E00               	movlw	0
  3427  00038C  6E19               	movwf	set_register4@value^0,c
  3428  00038E  0E0C               	movlw	12
  3429  000390  EC23  F017         	call	_set_register4
  3430  000394                     
  3431                           ;led-metrix.c: 242:     for (i = 0; i < 8; i++)
  3432  000394  0E00               	movlw	0
  3433  000396  0104               	movlb	4	; () banked
  3434  000398  6F23               	movwf	(plot@i+1)& (0+255),b
  3435  00039A  0E00               	movlw	0
  3436  00039C  6F22               	movwf	plot@i& (0+255),b
  3437  00039E                     l4167:
  3438                           
  3439                           ; BSR set to: 4
  3440                           ;led-metrix.c: 243:     {;led-metrix.c: 245:       set_register1(((i) + 1), char_pattern
      +                          1[i]);
  3441  00039E  0E00               	movlw	low plot@char_pattern1
  3442  0003A0  2522               	addwf	plot@i& (0+255),w,b
  3443  0003A2  6ED9               	movwf	fsr2l,c
  3444  0003A4  0E04               	movlw	high plot@char_pattern1
  3445  0003A6  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3446  0003A8  6EDA               	movwf	fsr2h,c
  3447  0003AA  50DF               	movf	indf2,w,c
  3448  0003AC  6E19               	movwf	set_register1@value^0,c
  3449  0003AE  2922               	incf	plot@i& (0+255),w,b
  3450  0003B0  EC50  F017         	call	_set_register1
  3451                           
  3452                           ;led-metrix.c: 246:       set_register2(((i) + 1), char_pattern2[i]);
  3453  0003B4  0E08               	movlw	low plot@char_pattern2
  3454  0003B6  0104               	movlb	4	; () banked
  3455  0003B8  2522               	addwf	plot@i& (0+255),w,b
  3456  0003BA  6ED9               	movwf	fsr2l,c
  3457  0003BC  0E04               	movlw	high plot@char_pattern2
  3458  0003BE  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3459  0003C0  6EDA               	movwf	fsr2h,c
  3460  0003C2  50DF               	movf	indf2,w,c
  3461  0003C4  6E19               	movwf	set_register2@value^0,c
  3462  0003C6  2922               	incf	plot@i& (0+255),w,b
  3463  0003C8  EC41  F017         	call	_set_register2
  3464                           
  3465                           ;led-metrix.c: 247:       set_register3(((i) + 1), char_pattern3[i]);
  3466  0003CC  0E10               	movlw	low plot@char_pattern3
  3467  0003CE  0104               	movlb	4	; () banked
  3468  0003D0  2522               	addwf	plot@i& (0+255),w,b
  3469  0003D2  6ED9               	movwf	fsr2l,c
  3470  0003D4  0E04               	movlw	high plot@char_pattern3
  3471  0003D6  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3472  0003D8  6EDA               	movwf	fsr2h,c
  3473  0003DA  50DF               	movf	indf2,w,c
  3474  0003DC  6E19               	movwf	set_register3@value^0,c
  3475  0003DE  2922               	incf	plot@i& (0+255),w,b
  3476  0003E0  EC32  F017         	call	_set_register3
  3477                           
  3478                           ;led-metrix.c: 248:       set_register4(((i) + 1), char_pattern4[i]);
  3479  0003E4  0E18               	movlw	low plot@char_pattern4
  3480  0003E6  0104               	movlb	4	; () banked
  3481  0003E8  2522               	addwf	plot@i& (0+255),w,b
  3482  0003EA  6ED9               	movwf	fsr2l,c
  3483  0003EC  0E04               	movlw	high plot@char_pattern4
  3484  0003EE  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3485  0003F0  6EDA               	movwf	fsr2h,c
  3486  0003F2  50DF               	movf	indf2,w,c
  3487  0003F4  6E19               	movwf	set_register4@value^0,c
  3488  0003F6  2922               	incf	plot@i& (0+255),w,b
  3489  0003F8  EC23  F017         	call	_set_register4
  3490  0003FC                     
  3491                           ;led-metrix.c: 249:     }
  3492  0003FC  0104               	movlb	4	; () banked
  3493  0003FE  4B22               	infsnz	plot@i& (0+255),f,b
  3494  000400  2B23               	incf	(plot@i+1)& (0+255),f,b
  3495  000402                     
  3496                           ; BSR set to: 4
  3497  000402  BF23               	btfsc	(plot@i+1)& (0+255),7,b
  3498  000404  EF0D  F002         	goto	u4891
  3499  000408  5123               	movf	(plot@i+1)& (0+255),w,b
  3500  00040A  E109               	bnz	u4890
  3501  00040C  0E08               	movlw	8
  3502  00040E  5D22               	subwf	plot@i& (0+255),w,b
  3503  000410  A0D8               	btfss	status,0,c
  3504  000412  EF0D  F002         	goto	u4891
  3505  000416  EF0F  F002         	goto	u4890
  3506  00041A                     u4891:
  3507  00041A  EFCF  F001         	goto	l4167
  3508  00041E                     u4890:
  3509  00041E                     
  3510                           ; BSR set to: 4
  3511                           ;led-metrix.c: 252:     set_register1((0X0C), (0x1));
  3512  00041E  0E01               	movlw	1
  3513  000420  6E19               	movwf	set_register1@value^0,c
  3514  000422  0E0C               	movlw	12
  3515  000424  EC50  F017         	call	_set_register1
  3516                           
  3517                           ;led-metrix.c: 253:     set_register2((0X0C), (0x1));
  3518  000428  0E01               	movlw	1
  3519  00042A  6E19               	movwf	set_register2@value^0,c
  3520  00042C  0E0C               	movlw	12
  3521  00042E  EC41  F017         	call	_set_register2
  3522                           
  3523                           ;led-metrix.c: 254:     set_register3((0X0C), (0x1));
  3524  000432  0E01               	movlw	1
  3525  000434  6E19               	movwf	set_register3@value^0,c
  3526  000436  0E0C               	movlw	12
  3527  000438  EC32  F017         	call	_set_register3
  3528                           
  3529                           ;led-metrix.c: 255:     set_register4((0X0C), (0x1));
  3530  00043C  0E01               	movlw	1
  3531  00043E  6E19               	movwf	set_register4@value^0,c
  3532  000440  0E0C               	movlw	12
  3533  000442  EC23  F017         	call	_set_register4
  3534  000446  0012               	return		;funcret
  3535  000448                     __end_of_plot:
  3536                           	opt callstack 0
  3537                           
  3538 ;; *************** function _initial *****************
  3539 ;; Defined at:
  3540 ;;		line 79 in file "ball.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  k               2   24[COMRAM] int 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3554 ;;      Params:         0       0       0       0       0       0       0
  3555 ;;      Locals:         2       0       0       0       0       0       0
  3556 ;;      Temps:          4       0       0       0       0       0       0
  3557 ;;      Totals:         6       0       0       0       0       0       0
  3558 ;;Total ram usage:        6 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    2
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text6
  3569  0018D8                     __ptext6:
  3570                           	opt callstack 0
  3571  0018D8                     _initial:
  3572                           	opt callstack 28
  3573  0018D8                     
  3574                           ;ball.c: 81:     int k;;ball.c: 82:     left_board[0] = 0;
  3575  0018D8  0E00               	movlw	0
  3576  0018DA  0100               	movlb	0	; () banked
  3577  0018DC  6FA1               	movwf	(_left_board+1)& (0+255),b
  3578  0018DE  0E00               	movlw	0
  3579  0018E0  6FA0               	movwf	_left_board& (0+255),b
  3580                           
  3581                           ;ball.c: 83:     left_board[1] = 0;
  3582  0018E2  0E00               	movlw	0
  3583  0018E4  6FA3               	movwf	(_left_board+3)& (0+255),b
  3584  0018E6  0E00               	movlw	0
  3585  0018E8  6FA2               	movwf	(_left_board+2)& (0+255),b
  3586                           
  3587                           ;ball.c: 84:     left_board[2] = 0;
  3588  0018EA  0E00               	movlw	0
  3589  0018EC  6FA5               	movwf	(_left_board+5)& (0+255),b
  3590  0018EE  0E00               	movlw	0
  3591  0018F0  6FA4               	movwf	(_left_board+4)& (0+255),b
  3592                           
  3593                           ;ball.c: 85:     left_board[3] = 0;
  3594  0018F2  0E00               	movlw	0
  3595  0018F4  6FA7               	movwf	(_left_board+7)& (0+255),b
  3596  0018F6  0E00               	movlw	0
  3597  0018F8  6FA6               	movwf	(_left_board+6)& (0+255),b
  3598                           
  3599                           ;ball.c: 86:     left_board[4] = 1;
  3600  0018FA  0E00               	movlw	0
  3601  0018FC  6FA9               	movwf	(_left_board+9)& (0+255),b
  3602  0018FE  0E01               	movlw	1
  3603  001900  6FA8               	movwf	(_left_board+8)& (0+255),b
  3604                           
  3605                           ;ball.c: 87:     left_board[5] = 1;
  3606  001902  0E00               	movlw	0
  3607  001904  6FAB               	movwf	(_left_board+11)& (0+255),b
  3608  001906  0E01               	movlw	1
  3609  001908  6FAA               	movwf	(_left_board+10)& (0+255),b
  3610                           
  3611                           ;ball.c: 88:     left_board[6] = 1;
  3612  00190A  0E00               	movlw	0
  3613  00190C  6FAD               	movwf	(_left_board+13)& (0+255),b
  3614  00190E  0E01               	movlw	1
  3615  001910  6FAC               	movwf	(_left_board+12)& (0+255),b
  3616                           
  3617                           ;ball.c: 89:     left_board[7] = 1;
  3618  001912  0E00               	movlw	0
  3619  001914  6FAF               	movwf	(_left_board+15)& (0+255),b
  3620  001916  0E01               	movlw	1
  3621  001918  6FAE               	movwf	(_left_board+14)& (0+255),b
  3622                           
  3623                           ;ball.c: 90:     left_board[8] = 1;
  3624  00191A  0E00               	movlw	0
  3625  00191C  6FB1               	movwf	(_left_board+17)& (0+255),b
  3626  00191E  0E01               	movlw	1
  3627  001920  6FB0               	movwf	(_left_board+16)& (0+255),b
  3628                           
  3629                           ;ball.c: 91:     left_board[9] = 1;
  3630  001922  0E00               	movlw	0
  3631  001924  6FB3               	movwf	(_left_board+19)& (0+255),b
  3632  001926  0E01               	movlw	1
  3633  001928  6FB2               	movwf	(_left_board+18)& (0+255),b
  3634                           
  3635                           ;ball.c: 92:     left_board[10] = 1;
  3636  00192A  0E00               	movlw	0
  3637  00192C  6FB5               	movwf	(_left_board+21)& (0+255),b
  3638  00192E  0E01               	movlw	1
  3639  001930  6FB4               	movwf	(_left_board+20)& (0+255),b
  3640                           
  3641                           ;ball.c: 93:     left_board[11] = 1;
  3642  001932  0E00               	movlw	0
  3643  001934  6FB7               	movwf	(_left_board+23)& (0+255),b
  3644  001936  0E01               	movlw	1
  3645  001938  6FB6               	movwf	(_left_board+22)& (0+255),b
  3646                           
  3647                           ;ball.c: 94:     left_board[12] = 0;
  3648  00193A  0E00               	movlw	0
  3649  00193C  6FB9               	movwf	(_left_board+25)& (0+255),b
  3650  00193E  0E00               	movlw	0
  3651  001940  6FB8               	movwf	(_left_board+24)& (0+255),b
  3652                           
  3653                           ;ball.c: 95:     left_board[13] = 0;
  3654  001942  0E00               	movlw	0
  3655  001944  6FBB               	movwf	(_left_board+27)& (0+255),b
  3656  001946  0E00               	movlw	0
  3657  001948  6FBA               	movwf	(_left_board+26)& (0+255),b
  3658                           
  3659                           ;ball.c: 96:     left_board[14] = 0;
  3660  00194A  0E00               	movlw	0
  3661  00194C  6FBD               	movwf	(_left_board+29)& (0+255),b
  3662  00194E  0E00               	movlw	0
  3663  001950  6FBC               	movwf	(_left_board+28)& (0+255),b
  3664                           
  3665                           ;ball.c: 97:     left_board[15] = 0;
  3666  001952  0E00               	movlw	0
  3667  001954  6FBF               	movwf	(_left_board+31)& (0+255),b
  3668  001956  0E00               	movlw	0
  3669  001958  6FBE               	movwf	(_left_board+30)& (0+255),b
  3670                           
  3671                           ;ball.c: 99:     right_board[0] = 0;
  3672  00195A  0E00               	movlw	0
  3673  00195C  6F81               	movwf	(_right_board+1)& (0+255),b
  3674  00195E  0E00               	movlw	0
  3675  001960  6F80               	movwf	_right_board& (0+255),b
  3676                           
  3677                           ;ball.c: 100:     right_board[1] = 0;
  3678  001962  0E00               	movlw	0
  3679  001964  6F83               	movwf	(_right_board+3)& (0+255),b
  3680  001966  0E00               	movlw	0
  3681  001968  6F82               	movwf	(_right_board+2)& (0+255),b
  3682                           
  3683                           ;ball.c: 101:     right_board[2] = 0;
  3684  00196A  0E00               	movlw	0
  3685  00196C  6F85               	movwf	(_right_board+5)& (0+255),b
  3686  00196E  0E00               	movlw	0
  3687  001970  6F84               	movwf	(_right_board+4)& (0+255),b
  3688                           
  3689                           ;ball.c: 102:     right_board[3] = 0;
  3690  001972  0E00               	movlw	0
  3691  001974  6F87               	movwf	(_right_board+7)& (0+255),b
  3692  001976  0E00               	movlw	0
  3693  001978  6F86               	movwf	(_right_board+6)& (0+255),b
  3694                           
  3695                           ;ball.c: 103:     right_board[4] = 1;
  3696  00197A  0E00               	movlw	0
  3697  00197C  6F89               	movwf	(_right_board+9)& (0+255),b
  3698  00197E  0E01               	movlw	1
  3699  001980  6F88               	movwf	(_right_board+8)& (0+255),b
  3700                           
  3701                           ;ball.c: 104:     right_board[5] = 1;
  3702  001982  0E00               	movlw	0
  3703  001984  6F8B               	movwf	(_right_board+11)& (0+255),b
  3704  001986  0E01               	movlw	1
  3705  001988  6F8A               	movwf	(_right_board+10)& (0+255),b
  3706                           
  3707                           ;ball.c: 105:     right_board[6] = 1;
  3708  00198A  0E00               	movlw	0
  3709  00198C  6F8D               	movwf	(_right_board+13)& (0+255),b
  3710  00198E  0E01               	movlw	1
  3711  001990  6F8C               	movwf	(_right_board+12)& (0+255),b
  3712                           
  3713                           ;ball.c: 106:     right_board[7] = 1;
  3714  001992  0E00               	movlw	0
  3715  001994  6F8F               	movwf	(_right_board+15)& (0+255),b
  3716  001996  0E01               	movlw	1
  3717  001998  6F8E               	movwf	(_right_board+14)& (0+255),b
  3718                           
  3719                           ;ball.c: 107:     right_board[8] = 1;
  3720  00199A  0E00               	movlw	0
  3721  00199C  6F91               	movwf	(_right_board+17)& (0+255),b
  3722  00199E  0E01               	movlw	1
  3723  0019A0  6F90               	movwf	(_right_board+16)& (0+255),b
  3724                           
  3725                           ;ball.c: 108:     right_board[9] = 1;
  3726  0019A2  0E00               	movlw	0
  3727  0019A4  6F93               	movwf	(_right_board+19)& (0+255),b
  3728  0019A6  0E01               	movlw	1
  3729  0019A8  6F92               	movwf	(_right_board+18)& (0+255),b
  3730                           
  3731                           ;ball.c: 109:     right_board[10] = 1;
  3732  0019AA  0E00               	movlw	0
  3733  0019AC  6F95               	movwf	(_right_board+21)& (0+255),b
  3734  0019AE  0E01               	movlw	1
  3735  0019B0  6F94               	movwf	(_right_board+20)& (0+255),b
  3736                           
  3737                           ;ball.c: 110:     right_board[11] = 1;
  3738  0019B2  0E00               	movlw	0
  3739  0019B4  6F97               	movwf	(_right_board+23)& (0+255),b
  3740  0019B6  0E01               	movlw	1
  3741  0019B8  6F96               	movwf	(_right_board+22)& (0+255),b
  3742                           
  3743                           ;ball.c: 111:     right_board[12] = 0;
  3744  0019BA  0E00               	movlw	0
  3745  0019BC  6F99               	movwf	(_right_board+25)& (0+255),b
  3746  0019BE  0E00               	movlw	0
  3747  0019C0  6F98               	movwf	(_right_board+24)& (0+255),b
  3748                           
  3749                           ;ball.c: 112:     right_board[13] = 0;
  3750  0019C2  0E00               	movlw	0
  3751  0019C4  6F9B               	movwf	(_right_board+27)& (0+255),b
  3752  0019C6  0E00               	movlw	0
  3753  0019C8  6F9A               	movwf	(_right_board+26)& (0+255),b
  3754                           
  3755                           ;ball.c: 113:     right_board[14] = 0;
  3756  0019CA  0E00               	movlw	0
  3757  0019CC  6F9D               	movwf	(_right_board+29)& (0+255),b
  3758  0019CE  0E00               	movlw	0
  3759  0019D0  6F9C               	movwf	(_right_board+28)& (0+255),b
  3760                           
  3761                           ;ball.c: 114:     right_board[15] = 0;
  3762  0019D2  0E00               	movlw	0
  3763  0019D4  6F9F               	movwf	(_right_board+31)& (0+255),b
  3764  0019D6  0E00               	movlw	0
  3765  0019D8  6F9E               	movwf	(_right_board+30)& (0+255),b
  3766                           
  3767                           ;ball.c: 116:     ball_x = 4;
  3768  0019DA  0E00               	movlw	0
  3769  0019DC  6E69               	movwf	(_ball_x+1)^0,c
  3770  0019DE  0E04               	movlw	4
  3771  0019E0  6E68               	movwf	_ball_x^0,c
  3772                           
  3773                           ;ball.c: 117:     ball_y = 6;
  3774  0019E2  0E00               	movlw	0
  3775  0019E4  6E67               	movwf	(_ball_y+1)^0,c
  3776  0019E6  0E06               	movlw	6
  3777  0019E8  6E66               	movwf	_ball_y^0,c
  3778                           
  3779                           ;ball.c: 118:     ball_last_x=3;
  3780  0019EA  0E00               	movlw	0
  3781  0019EC  6E65               	movwf	(_ball_last_x+1)^0,c
  3782  0019EE  0E03               	movlw	3
  3783  0019F0  6E64               	movwf	_ball_last_x^0,c
  3784                           
  3785                           ;ball.c: 119:     ball_last_y=5;
  3786  0019F2  0E00               	movlw	0
  3787  0019F4  6E63               	movwf	(_ball_last_y+1)^0,c
  3788  0019F6  0E05               	movlw	5
  3789  0019F8  6E62               	movwf	_ball_last_y^0,c
  3790                           
  3791                           ;ball.c: 121:  for(k=0;k<16;k++)
  3792  0019FA  0E00               	movlw	0
  3793  0019FC  6E1A               	movwf	(initial@k+1)^0,c
  3794  0019FE  0E00               	movlw	0
  3795  001A00  6E19               	movwf	initial@k^0,c
  3796  001A02                     l4041:
  3797                           
  3798                           ;ball.c: 122:  {;ball.c: 123:   LED[k][0] = 0;
  3799  001A02  C019  F015         	movff	initial@k,??_initial
  3800  001A06  C01A  F016         	movff	initial@k+1,??_initial+1
  3801  001A0A  3A15               	swapf	??_initial^0,f,c
  3802  001A0C  3A16               	swapf	(??_initial+1)^0,f,c
  3803  001A0E  0EF0               	movlw	240
  3804  001A10  1616               	andwf	(??_initial+1)^0,f,c
  3805  001A12  5015               	movf	??_initial^0,w,c
  3806  001A14  0B0F               	andlw	15
  3807  001A16  1216               	iorwf	(??_initial+1)^0,f,c
  3808  001A18  0EF0               	movlw	240
  3809  001A1A  1615               	andwf	??_initial^0,f,c
  3810  001A1C  0E00               	movlw	low _LED
  3811  001A1E  2415               	addwf	??_initial^0,w,c
  3812  001A20  6ED9               	movwf	fsr2l,c
  3813  001A22  0E03               	movlw	high _LED
  3814  001A24  2016               	addwfc	(??_initial+1)^0,w,c
  3815  001A26  6EDA               	movwf	fsr2h,c
  3816  001A28  0E00               	movlw	0
  3817  001A2A  6EDF               	movwf	indf2,c
  3818                           
  3819                           ;ball.c: 124:   LED[k][15] = 0;
  3820  001A2C  C019  F015         	movff	initial@k,??_initial
  3821  001A30  C01A  F016         	movff	initial@k+1,??_initial+1
  3822  001A34  3A15               	swapf	??_initial^0,f,c
  3823  001A36  3A16               	swapf	(??_initial+1)^0,f,c
  3824  001A38  0EF0               	movlw	240
  3825  001A3A  1616               	andwf	(??_initial+1)^0,f,c
  3826  001A3C  5015               	movf	??_initial^0,w,c
  3827  001A3E  0B0F               	andlw	15
  3828  001A40  1216               	iorwf	(??_initial+1)^0,f,c
  3829  001A42  0EF0               	movlw	240
  3830  001A44  1615               	andwf	??_initial^0,f,c
  3831  001A46  0E0F               	movlw	low (_LED+15)
  3832  001A48  2415               	addwf	??_initial^0,w,c
  3833  001A4A  6ED9               	movwf	fsr2l,c
  3834  001A4C  0E03               	movlw	high (_LED+15)
  3835  001A4E  2016               	addwfc	(??_initial+1)^0,w,c
  3836  001A50  6EDA               	movwf	fsr2h,c
  3837  001A52  0E00               	movlw	0
  3838  001A54  6EDF               	movwf	indf2,c
  3839  001A56                     
  3840                           ;ball.c: 126:  }
  3841  001A56  4A19               	infsnz	initial@k^0,f,c
  3842  001A58  2A1A               	incf	(initial@k+1)^0,f,c
  3843  001A5A  BE1A               	btfsc	(initial@k+1)^0,7,c
  3844  001A5C  EF39  F00D         	goto	u4711
  3845  001A60  501A               	movf	(initial@k+1)^0,w,c
  3846  001A62  E109               	bnz	u4710
  3847  001A64  0E10               	movlw	16
  3848  001A66  5C19               	subwf	initial@k^0,w,c
  3849  001A68  A0D8               	btfss	status,0,c
  3850  001A6A  EF39  F00D         	goto	u4711
  3851  001A6E  EF3B  F00D         	goto	u4710
  3852  001A72                     u4711:
  3853  001A72  EF01  F00D         	goto	l4041
  3854  001A76                     u4710:
  3855  001A76                     
  3856                           ;ball.c: 127:  for(k=0;k<16;k++)
  3857  001A76  0E00               	movlw	0
  3858  001A78  6E1A               	movwf	(initial@k+1)^0,c
  3859  001A7A  0E00               	movlw	0
  3860  001A7C  6E19               	movwf	initial@k^0,c
  3861  001A7E                     l4053:
  3862                           
  3863                           ;ball.c: 128:  {;ball.c: 129:   LED[k][0] = left_board[k];
  3864  001A7E  90D8               	bcf	status,0,c
  3865  001A80  3419               	rlcf	initial@k^0,w,c
  3866  001A82  6ED9               	movwf	fsr2l,c
  3867  001A84  341A               	rlcf	(initial@k+1)^0,w,c
  3868  001A86  6EDA               	movwf	fsr2h,c
  3869  001A88  0EA0               	movlw	low _left_board
  3870  001A8A  26D9               	addwf	fsr2l,f,c
  3871  001A8C  0E00               	movlw	high _left_board
  3872  001A8E  22DA               	addwfc	fsr2h,f,c
  3873  001A90  C019  F015         	movff	initial@k,??_initial
  3874  001A94  C01A  F016         	movff	initial@k+1,??_initial+1
  3875  001A98  3A15               	swapf	??_initial^0,f,c
  3876  001A9A  3A16               	swapf	(??_initial+1)^0,f,c
  3877  001A9C  0EF0               	movlw	240
  3878  001A9E  1616               	andwf	(??_initial+1)^0,f,c
  3879  001AA0  5015               	movf	??_initial^0,w,c
  3880  001AA2  0B0F               	andlw	15
  3881  001AA4  1216               	iorwf	(??_initial+1)^0,f,c
  3882  001AA6  0EF0               	movlw	240
  3883  001AA8  1615               	andwf	??_initial^0,f,c
  3884  001AAA  0E00               	movlw	low _LED
  3885  001AAC  2415               	addwf	??_initial^0,w,c
  3886  001AAE  6EE1               	movwf	fsr1l,c
  3887  001AB0  0E03               	movlw	high _LED
  3888  001AB2  2016               	addwfc	(??_initial+1)^0,w,c
  3889  001AB4  6EE2               	movwf	fsr1h,c
  3890  001AB6  CFDF FFE7          	movff	indf2,indf1
  3891                           
  3892                           ;ball.c: 130:   LED[k][15] = right_board[k];
  3893  001ABA  90D8               	bcf	status,0,c
  3894  001ABC  3419               	rlcf	initial@k^0,w,c
  3895  001ABE  6ED9               	movwf	fsr2l,c
  3896  001AC0  341A               	rlcf	(initial@k+1)^0,w,c
  3897  001AC2  6EDA               	movwf	fsr2h,c
  3898  001AC4  0E80               	movlw	low _right_board
  3899  001AC6  26D9               	addwf	fsr2l,f,c
  3900  001AC8  0E00               	movlw	high _right_board
  3901  001ACA  22DA               	addwfc	fsr2h,f,c
  3902  001ACC  C019  F015         	movff	initial@k,??_initial
  3903  001AD0  C01A  F016         	movff	initial@k+1,??_initial+1
  3904  001AD4  3A15               	swapf	??_initial^0,f,c
  3905  001AD6  3A16               	swapf	(??_initial+1)^0,f,c
  3906  001AD8  0EF0               	movlw	240
  3907  001ADA  1616               	andwf	(??_initial+1)^0,f,c
  3908  001ADC  5015               	movf	??_initial^0,w,c
  3909  001ADE  0B0F               	andlw	15
  3910  001AE0  1216               	iorwf	(??_initial+1)^0,f,c
  3911  001AE2  0EF0               	movlw	240
  3912  001AE4  1615               	andwf	??_initial^0,f,c
  3913  001AE6  0E0F               	movlw	low (_LED+15)
  3914  001AE8  2415               	addwf	??_initial^0,w,c
  3915  001AEA  6EE1               	movwf	fsr1l,c
  3916  001AEC  0E03               	movlw	high (_LED+15)
  3917  001AEE  2016               	addwfc	(??_initial+1)^0,w,c
  3918  001AF0  6EE2               	movwf	fsr1h,c
  3919  001AF2  CFDF FFE7          	movff	indf2,indf1
  3920  001AF6                     
  3921                           ;ball.c: 131:   LED[ball_y][ball_x]=1;
  3922  001AF6  C066  F015         	movff	_ball_y,??_initial
  3923  001AFA  C067  F016         	movff	_ball_y+1,??_initial+1
  3924  001AFE  3A15               	swapf	??_initial^0,f,c
  3925  001B00  3A16               	swapf	(??_initial+1)^0,f,c
  3926  001B02  0EF0               	movlw	240
  3927  001B04  1616               	andwf	(??_initial+1)^0,f,c
  3928  001B06  5015               	movf	??_initial^0,w,c
  3929  001B08  0B0F               	andlw	15
  3930  001B0A  1216               	iorwf	(??_initial+1)^0,f,c
  3931  001B0C  0EF0               	movlw	240
  3932  001B0E  1615               	andwf	??_initial^0,f,c
  3933  001B10  0E00               	movlw	low _LED
  3934  001B12  6E17               	movwf	(??_initial+2)^0,c
  3935  001B14  0E03               	movlw	high _LED
  3936  001B16  6E18               	movwf	(??_initial+3)^0,c
  3937  001B18  5015               	movf	??_initial^0,w,c
  3938  001B1A  2617               	addwf	(??_initial+2)^0,f,c
  3939  001B1C  5016               	movf	(??_initial+1)^0,w,c
  3940  001B1E  2218               	addwfc	(??_initial+3)^0,f,c
  3941  001B20  5068               	movf	_ball_x^0,w,c
  3942  001B22  2417               	addwf	(??_initial+2)^0,w,c
  3943  001B24  6ED9               	movwf	fsr2l,c
  3944  001B26  5069               	movf	(_ball_x+1)^0,w,c
  3945  001B28  2018               	addwfc	(??_initial+3)^0,w,c
  3946  001B2A  6EDA               	movwf	fsr2h,c
  3947  001B2C  0E01               	movlw	1
  3948  001B2E  6EDF               	movwf	indf2,c
  3949  001B30                     
  3950                           ;ball.c: 132:  }
  3951  001B30  4A19               	infsnz	initial@k^0,f,c
  3952  001B32  2A1A               	incf	(initial@k+1)^0,f,c
  3953  001B34  BE1A               	btfsc	(initial@k+1)^0,7,c
  3954  001B36  EFA6  F00D         	goto	u4721
  3955  001B3A  501A               	movf	(initial@k+1)^0,w,c
  3956  001B3C  E109               	bnz	u4720
  3957  001B3E  0E10               	movlw	16
  3958  001B40  5C19               	subwf	initial@k^0,w,c
  3959  001B42  A0D8               	btfss	status,0,c
  3960  001B44  EFA6  F00D         	goto	u4721
  3961  001B48  EFA8  F00D         	goto	u4720
  3962  001B4C                     u4721:
  3963  001B4C  EF3F  F00D         	goto	l4053
  3964  001B50                     u4720:
  3965  001B50  0012               	return		;funcret
  3966  001B52                     __end_of_initial:
  3967                           	opt callstack 0
  3968                           
  3969 ;; *************** function _init_max7219 *****************
  3970 ;; Defined at:
  3971 ;;		line 134 in file "led-metrix.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3985 ;;      Params:         0       0       0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0       0       0
  3988 ;;      Totals:         0       0       0       0       0       0       0
  3989 ;;Total ram usage:        0 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    5
  3992 ;; This function calls:
  3993 ;;		_clear_matrix
  3994 ;;		_set_register1
  3995 ;;		_set_register2
  3996 ;;		_set_register3
  3997 ;;		_set_register4
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text7
  4004  002762                     __ptext7:
  4005                           	opt callstack 0
  4006  002762                     _init_max7219:
  4007                           	opt callstack 25
  4008  002762                     
  4009                           ;led-metrix.c: 137:   set_register1((0x0F), (0x0));
  4010  002762  0E00               	movlw	0
  4011  002764  6E19               	movwf	set_register1@value^0,c
  4012  002766  0E0F               	movlw	15
  4013  002768  EC50  F017         	call	_set_register1
  4014                           
  4015                           ;led-metrix.c: 139:   set_register1((0x0A), 0x1);
  4016  00276C  0E01               	movlw	1
  4017  00276E  6E19               	movwf	set_register1@value^0,c
  4018  002770  0E0A               	movlw	10
  4019  002772  EC50  F017         	call	_set_register1
  4020                           
  4021                           ;led-metrix.c: 141:   set_register1((0X0C), (0x0));
  4022  002776  0E00               	movlw	0
  4023  002778  6E19               	movwf	set_register1@value^0,c
  4024  00277A  0E0C               	movlw	12
  4025  00277C  EC50  F017         	call	_set_register1
  4026                           
  4027                           ;led-metrix.c: 143:   set_register1((0x0B), 7);
  4028  002780  0E07               	movlw	7
  4029  002782  6E19               	movwf	set_register1@value^0,c
  4030  002784  0E0B               	movlw	11
  4031  002786  EC50  F017         	call	_set_register1
  4032                           
  4033                           ;led-metrix.c: 145:   set_register1((0x09), 0B00000000);
  4034  00278A  0E00               	movlw	0
  4035  00278C  6E19               	movwf	set_register1@value^0,c
  4036  00278E  0E09               	movlw	9
  4037  002790  EC50  F017         	call	_set_register1
  4038                           
  4039                           ;led-metrix.c: 147:   set_register2((0x0F), (0x0));
  4040  002794  0E00               	movlw	0
  4041  002796  6E19               	movwf	set_register2@value^0,c
  4042  002798  0E0F               	movlw	15
  4043  00279A  EC41  F017         	call	_set_register2
  4044                           
  4045                           ;led-metrix.c: 149:   set_register2((0x0A), 0x1);
  4046  00279E  0E01               	movlw	1
  4047  0027A0  6E19               	movwf	set_register2@value^0,c
  4048  0027A2  0E0A               	movlw	10
  4049  0027A4  EC41  F017         	call	_set_register2
  4050                           
  4051                           ;led-metrix.c: 151:   set_register2((0X0C), (0x0));
  4052  0027A8  0E00               	movlw	0
  4053  0027AA  6E19               	movwf	set_register2@value^0,c
  4054  0027AC  0E0C               	movlw	12
  4055  0027AE  EC41  F017         	call	_set_register2
  4056                           
  4057                           ;led-metrix.c: 153:   set_register2((0x0B), 7);
  4058  0027B2  0E07               	movlw	7
  4059  0027B4  6E19               	movwf	set_register2@value^0,c
  4060  0027B6  0E0B               	movlw	11
  4061  0027B8  EC41  F017         	call	_set_register2
  4062                           
  4063                           ;led-metrix.c: 155:   set_register2((0x09), 0B00000000);
  4064  0027BC  0E00               	movlw	0
  4065  0027BE  6E19               	movwf	set_register2@value^0,c
  4066  0027C0  0E09               	movlw	9
  4067  0027C2  EC41  F017         	call	_set_register2
  4068                           
  4069                           ;led-metrix.c: 157:   set_register3((0x0F), (0x0));
  4070  0027C6  0E00               	movlw	0
  4071  0027C8  6E19               	movwf	set_register3@value^0,c
  4072  0027CA  0E0F               	movlw	15
  4073  0027CC  EC32  F017         	call	_set_register3
  4074                           
  4075                           ;led-metrix.c: 159:   set_register3((0x0A), 0x1);
  4076  0027D0  0E01               	movlw	1
  4077  0027D2  6E19               	movwf	set_register3@value^0,c
  4078  0027D4  0E0A               	movlw	10
  4079  0027D6  EC32  F017         	call	_set_register3
  4080                           
  4081                           ;led-metrix.c: 161:   set_register3((0X0C), (0x0));
  4082  0027DA  0E00               	movlw	0
  4083  0027DC  6E19               	movwf	set_register3@value^0,c
  4084  0027DE  0E0C               	movlw	12
  4085  0027E0  EC32  F017         	call	_set_register3
  4086                           
  4087                           ;led-metrix.c: 163:   set_register3((0x0B), 7);
  4088  0027E4  0E07               	movlw	7
  4089  0027E6  6E19               	movwf	set_register3@value^0,c
  4090  0027E8  0E0B               	movlw	11
  4091  0027EA  EC32  F017         	call	_set_register3
  4092                           
  4093                           ;led-metrix.c: 165:   set_register3((0x09), 0B00000000);
  4094  0027EE  0E00               	movlw	0
  4095  0027F0  6E19               	movwf	set_register3@value^0,c
  4096  0027F2  0E09               	movlw	9
  4097  0027F4  EC32  F017         	call	_set_register3
  4098                           
  4099                           ;led-metrix.c: 167:   set_register4((0x0F), (0x0));
  4100  0027F8  0E00               	movlw	0
  4101  0027FA  6E19               	movwf	set_register4@value^0,c
  4102  0027FC  0E0F               	movlw	15
  4103  0027FE  EC23  F017         	call	_set_register4
  4104                           
  4105                           ;led-metrix.c: 169:   set_register4((0x0A), 0x1);
  4106  002802  0E01               	movlw	1
  4107  002804  6E19               	movwf	set_register4@value^0,c
  4108  002806  0E0A               	movlw	10
  4109  002808  EC23  F017         	call	_set_register4
  4110                           
  4111                           ;led-metrix.c: 171:   set_register4((0X0C), (0x0));
  4112  00280C  0E00               	movlw	0
  4113  00280E  6E19               	movwf	set_register4@value^0,c
  4114  002810  0E0C               	movlw	12
  4115  002812  EC23  F017         	call	_set_register4
  4116                           
  4117                           ;led-metrix.c: 173:   set_register4((0x0B), 7);
  4118  002816  0E07               	movlw	7
  4119  002818  6E19               	movwf	set_register4@value^0,c
  4120  00281A  0E0B               	movlw	11
  4121  00281C  EC23  F017         	call	_set_register4
  4122                           
  4123                           ;led-metrix.c: 175:   set_register4((0x09), 0B00000000);
  4124  002820  0E00               	movlw	0
  4125  002822  6E19               	movwf	set_register4@value^0,c
  4126  002824  0E09               	movlw	9
  4127  002826  EC23  F017         	call	_set_register4
  4128                           
  4129                           ;led-metrix.c: 179:   clear_matrix();
  4130  00282A  EC8A  F016         	call	_clear_matrix	;wreg free
  4131  00282E  0012               	return		;funcret
  4132  002830                     __end_of_init_max7219:
  4133                           	opt callstack 0
  4134                           
  4135 ;; *************** function _clear_matrix *****************
  4136 ;; Defined at:
  4137 ;;		line 122 in file "led-metrix.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  i               2   26[COMRAM] int 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4151 ;;      Params:         0       0       0       0       0       0       0
  4152 ;;      Locals:         2       0       0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0
  4154 ;;      Totals:         2       0       0       0       0       0       0
  4155 ;;Total ram usage:        2 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    4
  4158 ;; This function calls:
  4159 ;;		_set_register1
  4160 ;;		_set_register2
  4161 ;;		_set_register3
  4162 ;;		_set_register4
  4163 ;; This function is called by:
  4164 ;;		_init_max7219
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text8
  4169  002D14                     __ptext8:
  4170                           	opt callstack 0
  4171  002D14                     _clear_matrix:
  4172                           	opt callstack 25
  4173  002D14                     
  4174                           ;led-metrix.c: 125:   for (int i = 0; i < (8); i++)
  4175  002D14  0E00               	movlw	0
  4176  002D16  6E1C               	movwf	(clear_matrix@i+1)^0,c
  4177  002D18  0E00               	movlw	0
  4178  002D1A  6E1B               	movwf	clear_matrix@i^0,c
  4179  002D1C                     l3757:
  4180                           
  4181                           ;led-metrix.c: 126:   {;led-metrix.c: 127:     set_register1(((i) + 1), 0b0000000);
  4182  002D1C  0E00               	movlw	0
  4183  002D1E  6E19               	movwf	set_register1@value^0,c
  4184  002D20  281B               	incf	clear_matrix@i^0,w,c
  4185  002D22  EC50  F017         	call	_set_register1
  4186                           
  4187                           ;led-metrix.c: 128:     set_register2(((i) + 1), 0b0000000);
  4188  002D26  0E00               	movlw	0
  4189  002D28  6E19               	movwf	set_register2@value^0,c
  4190  002D2A  281B               	incf	clear_matrix@i^0,w,c
  4191  002D2C  EC41  F017         	call	_set_register2
  4192                           
  4193                           ;led-metrix.c: 129:     set_register3(((i) + 1), 0b0000000);
  4194  002D30  0E00               	movlw	0
  4195  002D32  6E19               	movwf	set_register3@value^0,c
  4196  002D34  281B               	incf	clear_matrix@i^0,w,c
  4197  002D36  EC32  F017         	call	_set_register3
  4198                           
  4199                           ;led-metrix.c: 130:     set_register4(((i) + 1), 0b0000000);
  4200  002D3A  0E00               	movlw	0
  4201  002D3C  6E19               	movwf	set_register4@value^0,c
  4202  002D3E  281B               	incf	clear_matrix@i^0,w,c
  4203  002D40  EC23  F017         	call	_set_register4
  4204  002D44                     
  4205                           ;led-metrix.c: 131:   }
  4206  002D44  4A1B               	infsnz	clear_matrix@i^0,f,c
  4207  002D46  2A1C               	incf	(clear_matrix@i+1)^0,f,c
  4208  002D48  BE1C               	btfsc	(clear_matrix@i+1)^0,7,c
  4209  002D4A  EFB0  F016         	goto	u4261
  4210  002D4E  501C               	movf	(clear_matrix@i+1)^0,w,c
  4211  002D50  E109               	bnz	u4260
  4212  002D52  0E08               	movlw	8
  4213  002D54  5C1B               	subwf	clear_matrix@i^0,w,c
  4214  002D56  A0D8               	btfss	status,0,c
  4215  002D58  EFB0  F016         	goto	u4261
  4216  002D5C  EFB2  F016         	goto	u4260
  4217  002D60                     u4261:
  4218  002D60  EF8E  F016         	goto	l3757
  4219  002D64                     u4260:
  4220  002D64  0012               	return		;funcret
  4221  002D66                     __end_of_clear_matrix:
  4222                           	opt callstack 0
  4223                           
  4224 ;; *************** function _set_register4 *****************
  4225 ;; Defined at:
  4226 ;;		line 114 in file "led-metrix.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  address         1    wreg     unsigned char 
  4229 ;;  value           1   24[COMRAM] unsigned char 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  address         1   25[COMRAM] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2, status,0, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4241 ;;      Params:         1       0       0       0       0       0       0
  4242 ;;      Locals:         1       0       0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0
  4244 ;;      Totals:         2       0       0       0       0       0       0
  4245 ;;Total ram usage:        2 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    3
  4248 ;; This function calls:
  4249 ;;		_shiftOut4
  4250 ;; This function is called by:
  4251 ;;		_clear_matrix
  4252 ;;		_init_max7219
  4253 ;;		_plot
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text9
  4258  002E46                     __ptext9:
  4259                           	opt callstack 0
  4260  002E46                     _set_register4:
  4261                           	opt callstack 26
  4262                           
  4263                           ;incstack = 0
  4264                           ;set_register4@address stored from wreg
  4265  002E46  6E1A               	movwf	set_register4@address^0,c
  4266  002E48                     
  4267                           ;led-metrix.c: 114: void set_register4(unsigned char address, unsigned char value);led-m
      +                          etrix.c: 115: {;led-metrix.c: 116:   LATCbits.LATC4 = 0x00;
  4268  002E48  988B               	bcf	139,4,c	;volatile
  4269                           
  4270                           ;led-metrix.c: 117:   LATCbits.LATC5 = 0x00;
  4271  002E4A  9A8B               	bcf	139,5,c	;volatile
  4272  002E4C                     
  4273                           ;led-metrix.c: 118:   shiftOut4(1, address);
  4274  002E4C  C01A  F015         	movff	set_register4@address,shiftOut4@val
  4275  002E50  0E01               	movlw	1
  4276  002E52  EC7E  F015         	call	_shiftOut4
  4277                           
  4278                           ;led-metrix.c: 119:   shiftOut4(1, value);
  4279  002E56  C019  F015         	movff	set_register4@value,shiftOut4@val
  4280  002E5A  0E01               	movlw	1
  4281  002E5C  EC7E  F015         	call	_shiftOut4
  4282  002E60                     
  4283                           ;led-metrix.c: 120:   LATCbits.LATC5 = 0x01;
  4284  002E60  8A8B               	bsf	139,5,c	;volatile
  4285  002E62  0012               	return		;funcret
  4286  002E64                     __end_of_set_register4:
  4287                           	opt callstack 0
  4288                           
  4289 ;; *************** function _shiftOut4 *****************
  4290 ;; Defined at:
  4291 ;;		line 66 in file "led-metrix.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  bitOrder        1    wreg     unsigned char 
  4294 ;;  val             1   20[COMRAM] unsigned char 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  bitOrder        1   22[COMRAM] unsigned char 
  4297 ;;  i               1   23[COMRAM] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4307 ;;      Params:         1       0       0       0       0       0       0
  4308 ;;      Locals:         2       0       0       0       0       0       0
  4309 ;;      Temps:          1       0       0       0       0       0       0
  4310 ;;      Totals:         4       0       0       0       0       0       0
  4311 ;;Total ram usage:        4 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    2
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_set_register4
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text10
  4322  002AFC                     __ptext10:
  4323                           	opt callstack 0
  4324  002AFC                     _shiftOut4:
  4325                           	opt callstack 26
  4326                           
  4327                           ;incstack = 0
  4328                           ;shiftOut4@bitOrder stored from wreg
  4329  002AFC  6E17               	movwf	shiftOut4@bitOrder^0,c
  4330  002AFE                     
  4331                           ;led-metrix.c: 66: void shiftOut4(uint8_t bitOrder, uint8_t val);led-metrix.c: 67: {;led
      +                          -metrix.c: 68:     uint8_t i;;led-metrix.c: 70:     for (i = 0; i < 8; i++) {
  4332  002AFE  0E00               	movlw	0
  4333  002B00  6E18               	movwf	shiftOut4@i^0,c
  4334  002B02                     l3701:
  4335                           
  4336                           ;led-metrix.c: 71:         if (bitOrder == 0)
  4337  002B02  5017               	movf	shiftOut4@bitOrder^0,w,c
  4338  002B04  A4D8               	btfss	status,2,c
  4339  002B06  EF87  F015         	goto	u4171
  4340  002B0A  EF89  F015         	goto	u4170
  4341  002B0E                     u4171:
  4342  002B0E  EF9F  F015         	goto	l3705
  4343  002B12                     u4170:
  4344  002B12                     
  4345                           ;led-metrix.c: 72:         {;led-metrix.c: 73:             LATCbits.LATC6 = (val & 1)==1
      +                           ;
  4346  002B12  B015               	btfsc	shiftOut4@val^0,0,c
  4347  002B14  EF8E  F015         	goto	u4181
  4348  002B18  EF92  F015         	goto	u4180
  4349  002B1C                     u4181:
  4350  002B1C  6A16               	clrf	??_shiftOut4^0,c
  4351  002B1E  2A16               	incf	??_shiftOut4^0,f,c
  4352  002B20  EF93  F015         	goto	u4198
  4353  002B24                     u4180:
  4354  002B24  6A16               	clrf	??_shiftOut4^0,c
  4355  002B26                     u4198:
  4356  002B26  3A16               	swapf	??_shiftOut4^0,f,c
  4357  002B28  4616               	rlncf	??_shiftOut4^0,f,c
  4358  002B2A  4616               	rlncf	??_shiftOut4^0,f,c
  4359  002B2C  508B               	movf	139,w,c	;volatile
  4360  002B2E  1816               	xorwf	??_shiftOut4^0,w,c
  4361  002B30  0BBF               	andlw	-65
  4362  002B32  1816               	xorwf	??_shiftOut4^0,w,c
  4363  002B34  6E8B               	movwf	139,c	;volatile
  4364                           
  4365                           ;led-metrix.c: 74:             val >>= 1;
  4366  002B36  90D8               	bcf	status,0,c
  4367  002B38  3215               	rrcf	shiftOut4@val^0,f,c
  4368                           
  4369                           ;led-metrix.c: 75:         }
  4370  002B3A  EFB3  F015         	goto	l3707
  4371  002B3E                     l3705:
  4372                           
  4373                           ;led-metrix.c: 77:         {;led-metrix.c: 78:             LATCbits.LATC6 = (val & 128) 
      +                          != 0;
  4374  002B3E  BE15               	btfsc	shiftOut4@val^0,7,c
  4375  002B40  EFA4  F015         	goto	u4201
  4376  002B44  EFA8  F015         	goto	u4200
  4377  002B48                     u4201:
  4378  002B48  6A16               	clrf	??_shiftOut4^0,c
  4379  002B4A  2A16               	incf	??_shiftOut4^0,f,c
  4380  002B4C  EFA9  F015         	goto	u4218
  4381  002B50                     u4200:
  4382  002B50  6A16               	clrf	??_shiftOut4^0,c
  4383  002B52                     u4218:
  4384  002B52  3A16               	swapf	??_shiftOut4^0,f,c
  4385  002B54  4616               	rlncf	??_shiftOut4^0,f,c
  4386  002B56  4616               	rlncf	??_shiftOut4^0,f,c
  4387  002B58  508B               	movf	139,w,c	;volatile
  4388  002B5A  1816               	xorwf	??_shiftOut4^0,w,c
  4389  002B5C  0BBF               	andlw	-65
  4390  002B5E  1816               	xorwf	??_shiftOut4^0,w,c
  4391  002B60  6E8B               	movwf	139,c	;volatile
  4392                           
  4393                           ;led-metrix.c: 79:             val <<= 1;
  4394  002B62  90D8               	bcf	status,0,c
  4395  002B64  3615               	rlcf	shiftOut4@val^0,f,c
  4396  002B66                     l3707:
  4397                           
  4398                           ;led-metrix.c: 82:         LATCbits.LATC4 = 0x01;
  4399  002B66  888B               	bsf	139,4,c	;volatile
  4400  002B68                     
  4401                           ;led-metrix.c: 83:         _delay(5);
  4402  002B68  D000               	nop2		;2 cycle nop
  4403  002B6A  D000               	nop2		;2 cycle nop
  4404  002B6C  F000               	nop	
  4405  002B6E                     
  4406                           ;led-metrix.c: 84:         LATCbits.LATC4 = 0x00;
  4407  002B6E  988B               	bcf	139,4,c	;volatile
  4408  002B70                     
  4409                           ;led-metrix.c: 85:     }
  4410  002B70  2A18               	incf	shiftOut4@i^0,f,c
  4411  002B72  0E07               	movlw	7
  4412  002B74  6418               	cpfsgt	shiftOut4@i^0,c
  4413  002B76  EFBF  F015         	goto	u4221
  4414  002B7A  EFC1  F015         	goto	u4220
  4415  002B7E                     u4221:
  4416  002B7E  EF81  F015         	goto	l3701
  4417  002B82                     u4220:
  4418  002B82  0012               	return		;funcret
  4419  002B84                     __end_of_shiftOut4:
  4420                           	opt callstack 0
  4421                           
  4422 ;; *************** function _set_register3 *****************
  4423 ;; Defined at:
  4424 ;;		line 106 in file "led-metrix.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  address         1    wreg     unsigned char 
  4427 ;;  value           1   24[COMRAM] unsigned char 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  address         1   25[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4439 ;;      Params:         1       0       0       0       0       0       0
  4440 ;;      Locals:         1       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0
  4442 ;;      Totals:         2       0       0       0       0       0       0
  4443 ;;Total ram usage:        2 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    3
  4446 ;; This function calls:
  4447 ;;		_shiftOut3
  4448 ;; This function is called by:
  4449 ;;		_clear_matrix
  4450 ;;		_init_max7219
  4451 ;;		_plot
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text11
  4456  002E64                     __ptext11:
  4457                           	opt callstack 0
  4458  002E64                     _set_register3:
  4459                           	opt callstack 26
  4460                           
  4461                           ;incstack = 0
  4462                           ;set_register3@address stored from wreg
  4463  002E64  6E1A               	movwf	set_register3@address^0,c
  4464  002E66                     
  4465                           ;led-metrix.c: 106: void set_register3(unsigned char address, unsigned char value);led-m
      +                          etrix.c: 107: {;led-metrix.c: 108:   LATDbits.LATD4 = 0x00;
  4466  002E66  988C               	bcf	140,4,c	;volatile
  4467                           
  4468                           ;led-metrix.c: 109:   LATDbits.LATD5 = 0x00;
  4469  002E68  9A8C               	bcf	140,5,c	;volatile
  4470  002E6A                     
  4471                           ;led-metrix.c: 110:   shiftOut3(1, address);
  4472  002E6A  C01A  F015         	movff	set_register3@address,shiftOut3@val
  4473  002E6E  0E01               	movlw	1
  4474  002E70  ECC2  F015         	call	_shiftOut3
  4475                           
  4476                           ;led-metrix.c: 111:   shiftOut3(1, value);
  4477  002E74  C019  F015         	movff	set_register3@value,shiftOut3@val
  4478  002E78  0E01               	movlw	1
  4479  002E7A  ECC2  F015         	call	_shiftOut3
  4480  002E7E                     
  4481                           ;led-metrix.c: 112:   LATDbits.LATD5 = 0x01;
  4482  002E7E  8A8C               	bsf	140,5,c	;volatile
  4483  002E80  0012               	return		;funcret
  4484  002E82                     __end_of_set_register3:
  4485                           	opt callstack 0
  4486                           
  4487 ;; *************** function _shiftOut3 *****************
  4488 ;; Defined at:
  4489 ;;		line 45 in file "led-metrix.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  bitOrder        1    wreg     unsigned char 
  4492 ;;  val             1   20[COMRAM] unsigned char 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  bitOrder        1   22[COMRAM] unsigned char 
  4495 ;;  i               1   23[COMRAM] unsigned char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4505 ;;      Params:         1       0       0       0       0       0       0
  4506 ;;      Locals:         2       0       0       0       0       0       0
  4507 ;;      Temps:          1       0       0       0       0       0       0
  4508 ;;      Totals:         4       0       0       0       0       0       0
  4509 ;;Total ram usage:        4 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    2
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_set_register3
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text12
  4520  002B84                     __ptext12:
  4521                           	opt callstack 0
  4522  002B84                     _shiftOut3:
  4523                           	opt callstack 26
  4524                           
  4525                           ;incstack = 0
  4526                           ;shiftOut3@bitOrder stored from wreg
  4527  002B84  6E17               	movwf	shiftOut3@bitOrder^0,c
  4528  002B86                     
  4529                           ;led-metrix.c: 45: void shiftOut3(uint8_t bitOrder, uint8_t val);led-metrix.c: 46: {;led
      +                          -metrix.c: 47:     uint8_t i;;led-metrix.c: 49:     for (i = 0; i < 8; i++) {
  4530  002B86  0E00               	movlw	0
  4531  002B88  6E18               	movwf	shiftOut3@i^0,c
  4532  002B8A                     l3679:
  4533                           
  4534                           ;led-metrix.c: 50:         if (bitOrder == 0)
  4535  002B8A  5017               	movf	shiftOut3@bitOrder^0,w,c
  4536  002B8C  A4D8               	btfss	status,2,c
  4537  002B8E  EFCB  F015         	goto	u4111
  4538  002B92  EFCD  F015         	goto	u4110
  4539  002B96                     u4111:
  4540  002B96  EFE3  F015         	goto	l3683
  4541  002B9A                     u4110:
  4542  002B9A                     
  4543                           ;led-metrix.c: 51:         {;led-metrix.c: 52:             LATDbits.LATD6 = (val & 1)==1
      +                           ;
  4544  002B9A  B015               	btfsc	shiftOut3@val^0,0,c
  4545  002B9C  EFD2  F015         	goto	u4121
  4546  002BA0  EFD6  F015         	goto	u4120
  4547  002BA4                     u4121:
  4548  002BA4  6A16               	clrf	??_shiftOut3^0,c
  4549  002BA6  2A16               	incf	??_shiftOut3^0,f,c
  4550  002BA8  EFD7  F015         	goto	u4138
  4551  002BAC                     u4120:
  4552  002BAC  6A16               	clrf	??_shiftOut3^0,c
  4553  002BAE                     u4138:
  4554  002BAE  3A16               	swapf	??_shiftOut3^0,f,c
  4555  002BB0  4616               	rlncf	??_shiftOut3^0,f,c
  4556  002BB2  4616               	rlncf	??_shiftOut3^0,f,c
  4557  002BB4  508C               	movf	140,w,c	;volatile
  4558  002BB6  1816               	xorwf	??_shiftOut3^0,w,c
  4559  002BB8  0BBF               	andlw	-65
  4560  002BBA  1816               	xorwf	??_shiftOut3^0,w,c
  4561  002BBC  6E8C               	movwf	140,c	;volatile
  4562                           
  4563                           ;led-metrix.c: 53:             val >>= 1;
  4564  002BBE  90D8               	bcf	status,0,c
  4565  002BC0  3215               	rrcf	shiftOut3@val^0,f,c
  4566                           
  4567                           ;led-metrix.c: 54:         }
  4568  002BC2  EFF7  F015         	goto	l3685
  4569  002BC6                     l3683:
  4570                           
  4571                           ;led-metrix.c: 56:         {;led-metrix.c: 57:             LATDbits.LATD6 = (val & 128) 
      +                          != 0;
  4572  002BC6  BE15               	btfsc	shiftOut3@val^0,7,c
  4573  002BC8  EFE8  F015         	goto	u4141
  4574  002BCC  EFEC  F015         	goto	u4140
  4575  002BD0                     u4141:
  4576  002BD0  6A16               	clrf	??_shiftOut3^0,c
  4577  002BD2  2A16               	incf	??_shiftOut3^0,f,c
  4578  002BD4  EFED  F015         	goto	u4158
  4579  002BD8                     u4140:
  4580  002BD8  6A16               	clrf	??_shiftOut3^0,c
  4581  002BDA                     u4158:
  4582  002BDA  3A16               	swapf	??_shiftOut3^0,f,c
  4583  002BDC  4616               	rlncf	??_shiftOut3^0,f,c
  4584  002BDE  4616               	rlncf	??_shiftOut3^0,f,c
  4585  002BE0  508C               	movf	140,w,c	;volatile
  4586  002BE2  1816               	xorwf	??_shiftOut3^0,w,c
  4587  002BE4  0BBF               	andlw	-65
  4588  002BE6  1816               	xorwf	??_shiftOut3^0,w,c
  4589  002BE8  6E8C               	movwf	140,c	;volatile
  4590                           
  4591                           ;led-metrix.c: 58:             val <<= 1;
  4592  002BEA  90D8               	bcf	status,0,c
  4593  002BEC  3615               	rlcf	shiftOut3@val^0,f,c
  4594  002BEE                     l3685:
  4595                           
  4596                           ;led-metrix.c: 61:         LATDbits.LATD4 = 0x01;
  4597  002BEE  888C               	bsf	140,4,c	;volatile
  4598  002BF0                     
  4599                           ;led-metrix.c: 62:         _delay(5);
  4600  002BF0  D000               	nop2		;2 cycle nop
  4601  002BF2  D000               	nop2		;2 cycle nop
  4602  002BF4  F000               	nop	
  4603  002BF6                     
  4604                           ;led-metrix.c: 63:         LATDbits.LATD4 = 0x00;
  4605  002BF6  988C               	bcf	140,4,c	;volatile
  4606  002BF8                     
  4607                           ;led-metrix.c: 64:     }
  4608  002BF8  2A18               	incf	shiftOut3@i^0,f,c
  4609  002BFA  0E07               	movlw	7
  4610  002BFC  6418               	cpfsgt	shiftOut3@i^0,c
  4611  002BFE  EF03  F016         	goto	u4161
  4612  002C02  EF05  F016         	goto	u4160
  4613  002C06                     u4161:
  4614  002C06  EFC5  F015         	goto	l3679
  4615  002C0A                     u4160:
  4616  002C0A  0012               	return		;funcret
  4617  002C0C                     __end_of_shiftOut3:
  4618                           	opt callstack 0
  4619                           
  4620 ;; *************** function _set_register2 *****************
  4621 ;; Defined at:
  4622 ;;		line 98 in file "led-metrix.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  address         1    wreg     unsigned char 
  4625 ;;  value           1   24[COMRAM] unsigned char 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  address         1   25[COMRAM] unsigned char 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg, status,2, status,0, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4637 ;;      Params:         1       0       0       0       0       0       0
  4638 ;;      Locals:         1       0       0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0
  4640 ;;      Totals:         2       0       0       0       0       0       0
  4641 ;;Total ram usage:        2 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    3
  4644 ;; This function calls:
  4645 ;;		_shiftOut2
  4646 ;; This function is called by:
  4647 ;;		_clear_matrix
  4648 ;;		_init_max7219
  4649 ;;		_plot
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text13
  4654  002E82                     __ptext13:
  4655                           	opt callstack 0
  4656  002E82                     _set_register2:
  4657                           	opt callstack 26
  4658                           
  4659                           ;incstack = 0
  4660                           ;set_register2@address stored from wreg
  4661  002E82  6E1A               	movwf	set_register2@address^0,c
  4662  002E84                     
  4663                           ;led-metrix.c: 98: void set_register2(unsigned char address, unsigned char value);led-me
      +                          trix.c: 99: {;led-metrix.c: 100:   LATBbits.LATB0 = 0x00;
  4664  002E84  908A               	bcf	138,0,c	;volatile
  4665                           
  4666                           ;led-metrix.c: 101:   LATBbits.LATB1 = 0x00;
  4667  002E86  928A               	bcf	138,1,c	;volatile
  4668  002E88                     
  4669                           ;led-metrix.c: 102:   shiftOut2(1, address);
  4670  002E88  C01A  F015         	movff	set_register2@address,shiftOut2@val
  4671  002E8C  0E01               	movlw	1
  4672  002E8E  EC06  F016         	call	_shiftOut2
  4673                           
  4674                           ;led-metrix.c: 103:   shiftOut2(1, value);
  4675  002E92  C019  F015         	movff	set_register2@value,shiftOut2@val
  4676  002E96  0E01               	movlw	1
  4677  002E98  EC06  F016         	call	_shiftOut2
  4678  002E9C                     
  4679                           ;led-metrix.c: 104:   LATBbits.LATB1 = 0x01;
  4680  002E9C  828A               	bsf	138,1,c	;volatile
  4681  002E9E  0012               	return		;funcret
  4682  002EA0                     __end_of_set_register2:
  4683                           	opt callstack 0
  4684                           
  4685 ;; *************** function _shiftOut2 *****************
  4686 ;; Defined at:
  4687 ;;		line 24 in file "led-metrix.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  bitOrder        1    wreg     unsigned char 
  4690 ;;  val             1   20[COMRAM] unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  bitOrder        1   22[COMRAM] unsigned char 
  4693 ;;  i               1   23[COMRAM] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4703 ;;      Params:         1       0       0       0       0       0       0
  4704 ;;      Locals:         2       0       0       0       0       0       0
  4705 ;;      Temps:          1       0       0       0       0       0       0
  4706 ;;      Totals:         4       0       0       0       0       0       0
  4707 ;;Total ram usage:        4 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    2
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_set_register2
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text14
  4718  002C0C                     __ptext14:
  4719                           	opt callstack 0
  4720  002C0C                     _shiftOut2:
  4721                           	opt callstack 26
  4722                           
  4723                           ;incstack = 0
  4724                           ;shiftOut2@bitOrder stored from wreg
  4725  002C0C  6E17               	movwf	shiftOut2@bitOrder^0,c
  4726  002C0E                     
  4727                           ;led-metrix.c: 24: void shiftOut2(uint8_t bitOrder, uint8_t val);led-metrix.c: 25: {;led
      +                          -metrix.c: 26:     uint8_t i;;led-metrix.c: 28:     for (i = 0; i < 8; i++) {
  4728  002C0E  0E00               	movlw	0
  4729  002C10  6E18               	movwf	shiftOut2@i^0,c
  4730  002C12                     l3657:
  4731                           
  4732                           ;led-metrix.c: 29:         if (bitOrder == 0)
  4733  002C12  5017               	movf	shiftOut2@bitOrder^0,w,c
  4734  002C14  A4D8               	btfss	status,2,c
  4735  002C16  EF0F  F016         	goto	u4051
  4736  002C1A  EF11  F016         	goto	u4050
  4737  002C1E                     u4051:
  4738  002C1E  EF26  F016         	goto	l3661
  4739  002C22                     u4050:
  4740  002C22                     
  4741                           ;led-metrix.c: 30:         {;led-metrix.c: 31:             LATBbits.LATB2 = (val & 1)==1
      +                           ;
  4742  002C22  B015               	btfsc	shiftOut2@val^0,0,c
  4743  002C24  EF16  F016         	goto	u4061
  4744  002C28  EF1A  F016         	goto	u4060
  4745  002C2C                     u4061:
  4746  002C2C  6A16               	clrf	??_shiftOut2^0,c
  4747  002C2E  2A16               	incf	??_shiftOut2^0,f,c
  4748  002C30  EF1B  F016         	goto	u4078
  4749  002C34                     u4060:
  4750  002C34  6A16               	clrf	??_shiftOut2^0,c
  4751  002C36                     u4078:
  4752  002C36  4616               	rlncf	??_shiftOut2^0,f,c
  4753  002C38  4616               	rlncf	??_shiftOut2^0,f,c
  4754  002C3A  508A               	movf	138,w,c	;volatile
  4755  002C3C  1816               	xorwf	??_shiftOut2^0,w,c
  4756  002C3E  0BFB               	andlw	-5
  4757  002C40  1816               	xorwf	??_shiftOut2^0,w,c
  4758  002C42  6E8A               	movwf	138,c	;volatile
  4759                           
  4760                           ;led-metrix.c: 32:             val >>= 1;
  4761  002C44  90D8               	bcf	status,0,c
  4762  002C46  3215               	rrcf	shiftOut2@val^0,f,c
  4763                           
  4764                           ;led-metrix.c: 33:         }
  4765  002C48  EF39  F016         	goto	l3663
  4766  002C4C                     l3661:
  4767                           
  4768                           ;led-metrix.c: 35:         {;led-metrix.c: 36:             LATBbits.LATB2 = (val & 128) 
      +                          != 0;
  4769  002C4C  BE15               	btfsc	shiftOut2@val^0,7,c
  4770  002C4E  EF2B  F016         	goto	u4081
  4771  002C52  EF2F  F016         	goto	u4080
  4772  002C56                     u4081:
  4773  002C56  6A16               	clrf	??_shiftOut2^0,c
  4774  002C58  2A16               	incf	??_shiftOut2^0,f,c
  4775  002C5A  EF30  F016         	goto	u4098
  4776  002C5E                     u4080:
  4777  002C5E  6A16               	clrf	??_shiftOut2^0,c
  4778  002C60                     u4098:
  4779  002C60  4616               	rlncf	??_shiftOut2^0,f,c
  4780  002C62  4616               	rlncf	??_shiftOut2^0,f,c
  4781  002C64  508A               	movf	138,w,c	;volatile
  4782  002C66  1816               	xorwf	??_shiftOut2^0,w,c
  4783  002C68  0BFB               	andlw	-5
  4784  002C6A  1816               	xorwf	??_shiftOut2^0,w,c
  4785  002C6C  6E8A               	movwf	138,c	;volatile
  4786                           
  4787                           ;led-metrix.c: 37:             val <<= 1;
  4788  002C6E  90D8               	bcf	status,0,c
  4789  002C70  3615               	rlcf	shiftOut2@val^0,f,c
  4790  002C72                     l3663:
  4791                           
  4792                           ;led-metrix.c: 40:         LATBbits.LATB0 = 0x01;
  4793  002C72  808A               	bsf	138,0,c	;volatile
  4794  002C74                     
  4795                           ;led-metrix.c: 41:         _delay(5);
  4796  002C74  D000               	nop2		;2 cycle nop
  4797  002C76  D000               	nop2		;2 cycle nop
  4798  002C78  F000               	nop	
  4799  002C7A                     
  4800                           ;led-metrix.c: 42:         LATBbits.LATB0 = 0x00;
  4801  002C7A  908A               	bcf	138,0,c	;volatile
  4802  002C7C                     
  4803                           ;led-metrix.c: 43:     }
  4804  002C7C  2A18               	incf	shiftOut2@i^0,f,c
  4805  002C7E  0E07               	movlw	7
  4806  002C80  6418               	cpfsgt	shiftOut2@i^0,c
  4807  002C82  EF45  F016         	goto	u4101
  4808  002C86  EF47  F016         	goto	u4100
  4809  002C8A                     u4101:
  4810  002C8A  EF09  F016         	goto	l3657
  4811  002C8E                     u4100:
  4812  002C8E  0012               	return		;funcret
  4813  002C90                     __end_of_shiftOut2:
  4814                           	opt callstack 0
  4815                           
  4816 ;; *************** function _set_register1 *****************
  4817 ;; Defined at:
  4818 ;;		line 90 in file "led-metrix.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  address         1    wreg     unsigned char 
  4821 ;;  value           1   24[COMRAM] unsigned char 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  address         1   25[COMRAM] unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4833 ;;      Params:         1       0       0       0       0       0       0
  4834 ;;      Locals:         1       0       0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0
  4836 ;;      Totals:         2       0       0       0       0       0       0
  4837 ;;Total ram usage:        2 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    3
  4840 ;; This function calls:
  4841 ;;		_shiftOut1
  4842 ;; This function is called by:
  4843 ;;		_clear_matrix
  4844 ;;		_init_max7219
  4845 ;;		_plot
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text15
  4850  002EA0                     __ptext15:
  4851                           	opt callstack 0
  4852  002EA0                     _set_register1:
  4853                           	opt callstack 26
  4854                           
  4855                           ;incstack = 0
  4856                           ;set_register1@address stored from wreg
  4857  002EA0  6E1A               	movwf	set_register1@address^0,c
  4858  002EA2                     
  4859                           ;led-metrix.c: 90: void set_register1(unsigned char address, unsigned char value);led-me
      +                          trix.c: 91: {;led-metrix.c: 92:   LATBbits.LATB3 = 0x00;
  4860  002EA2  968A               	bcf	138,3,c	;volatile
  4861                           
  4862                           ;led-metrix.c: 93:   LATBbits.LATB4 = 0x00;
  4863  002EA4  988A               	bcf	138,4,c	;volatile
  4864  002EA6                     
  4865                           ;led-metrix.c: 94:   shiftOut1(1, address);
  4866  002EA6  C01A  F015         	movff	set_register1@address,shiftOut1@val
  4867  002EAA  0E01               	movlw	1
  4868  002EAC  EC48  F016         	call	_shiftOut1
  4869                           
  4870                           ;led-metrix.c: 95:   shiftOut1(1, value);
  4871  002EB0  C019  F015         	movff	set_register1@value,shiftOut1@val
  4872  002EB4  0E01               	movlw	1
  4873  002EB6  EC48  F016         	call	_shiftOut1
  4874  002EBA                     
  4875                           ;led-metrix.c: 96:   LATBbits.LATB4 = 0x01;
  4876  002EBA  888A               	bsf	138,4,c	;volatile
  4877  002EBC  0012               	return		;funcret
  4878  002EBE                     __end_of_set_register1:
  4879                           	opt callstack 0
  4880                           
  4881 ;; *************** function _shiftOut1 *****************
  4882 ;; Defined at:
  4883 ;;		line 3 in file "led-metrix.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  bitOrder        1    wreg     unsigned char 
  4886 ;;  val             1   20[COMRAM] unsigned char 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  bitOrder        1   22[COMRAM] unsigned char 
  4889 ;;  i               1   23[COMRAM] unsigned char 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4899 ;;      Params:         1       0       0       0       0       0       0
  4900 ;;      Locals:         2       0       0       0       0       0       0
  4901 ;;      Temps:          1       0       0       0       0       0       0
  4902 ;;      Totals:         4       0       0       0       0       0       0
  4903 ;;Total ram usage:        4 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    2
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_set_register1
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text16
  4914  002C90                     __ptext16:
  4915                           	opt callstack 0
  4916  002C90                     _shiftOut1:
  4917                           	opt callstack 26
  4918                           
  4919                           ;incstack = 0
  4920                           ;shiftOut1@bitOrder stored from wreg
  4921  002C90  6E17               	movwf	shiftOut1@bitOrder^0,c
  4922  002C92                     
  4923                           ;led-metrix.c: 3: void shiftOut1(uint8_t bitOrder, uint8_t val);led-metrix.c: 4: {;led-m
      +                          etrix.c: 5:     uint8_t i;;led-metrix.c: 7:     for (i = 0; i < 8; i++) {
  4924  002C92  0E00               	movlw	0
  4925  002C94  6E18               	movwf	shiftOut1@i^0,c
  4926  002C96                     l3635:
  4927                           
  4928                           ;led-metrix.c: 8:         if (bitOrder == 0)
  4929  002C96  5017               	movf	shiftOut1@bitOrder^0,w,c
  4930  002C98  A4D8               	btfss	status,2,c
  4931  002C9A  EF51  F016         	goto	u3991
  4932  002C9E  EF53  F016         	goto	u3990
  4933  002CA2                     u3991:
  4934  002CA2  EF68  F016         	goto	l3639
  4935  002CA6                     u3990:
  4936  002CA6                     
  4937                           ;led-metrix.c: 9:         {;led-metrix.c: 10:             LATBbits.LATB5 = (val & 1)==1 
      +                          ;
  4938  002CA6  B015               	btfsc	shiftOut1@val^0,0,c
  4939  002CA8  EF58  F016         	goto	u4001
  4940  002CAC  EF5C  F016         	goto	u4000
  4941  002CB0                     u4001:
  4942  002CB0  6A16               	clrf	??_shiftOut1^0,c
  4943  002CB2  2A16               	incf	??_shiftOut1^0,f,c
  4944  002CB4  EF5D  F016         	goto	u4018
  4945  002CB8                     u4000:
  4946  002CB8  6A16               	clrf	??_shiftOut1^0,c
  4947  002CBA                     u4018:
  4948  002CBA  3A16               	swapf	??_shiftOut1^0,f,c
  4949  002CBC  4616               	rlncf	??_shiftOut1^0,f,c
  4950  002CBE  508A               	movf	138,w,c	;volatile
  4951  002CC0  1816               	xorwf	??_shiftOut1^0,w,c
  4952  002CC2  0BDF               	andlw	-33
  4953  002CC4  1816               	xorwf	??_shiftOut1^0,w,c
  4954  002CC6  6E8A               	movwf	138,c	;volatile
  4955                           
  4956                           ;led-metrix.c: 11:             val >>= 1;
  4957  002CC8  90D8               	bcf	status,0,c
  4958  002CCA  3215               	rrcf	shiftOut1@val^0,f,c
  4959                           
  4960                           ;led-metrix.c: 12:         }
  4961  002CCC  EF7B  F016         	goto	l3641
  4962  002CD0                     l3639:
  4963                           
  4964                           ;led-metrix.c: 14:         {;led-metrix.c: 15:             LATBbits.LATB5 = (val & 128) 
      +                          != 0;
  4965  002CD0  BE15               	btfsc	shiftOut1@val^0,7,c
  4966  002CD2  EF6D  F016         	goto	u4021
  4967  002CD6  EF71  F016         	goto	u4020
  4968  002CDA                     u4021:
  4969  002CDA  6A16               	clrf	??_shiftOut1^0,c
  4970  002CDC  2A16               	incf	??_shiftOut1^0,f,c
  4971  002CDE  EF72  F016         	goto	u4038
  4972  002CE2                     u4020:
  4973  002CE2  6A16               	clrf	??_shiftOut1^0,c
  4974  002CE4                     u4038:
  4975  002CE4  3A16               	swapf	??_shiftOut1^0,f,c
  4976  002CE6  4616               	rlncf	??_shiftOut1^0,f,c
  4977  002CE8  508A               	movf	138,w,c	;volatile
  4978  002CEA  1816               	xorwf	??_shiftOut1^0,w,c
  4979  002CEC  0BDF               	andlw	-33
  4980  002CEE  1816               	xorwf	??_shiftOut1^0,w,c
  4981  002CF0  6E8A               	movwf	138,c	;volatile
  4982                           
  4983                           ;led-metrix.c: 16:             val <<= 1;
  4984  002CF2  90D8               	bcf	status,0,c
  4985  002CF4  3615               	rlcf	shiftOut1@val^0,f,c
  4986  002CF6                     l3641:
  4987                           
  4988                           ;led-metrix.c: 19:         LATBbits.LATB3 = 0x01;
  4989  002CF6  868A               	bsf	138,3,c	;volatile
  4990  002CF8                     
  4991                           ;led-metrix.c: 20:         _delay(5);
  4992  002CF8  D000               	nop2		;2 cycle nop
  4993  002CFA  D000               	nop2		;2 cycle nop
  4994  002CFC  F000               	nop	
  4995  002CFE                     
  4996                           ;led-metrix.c: 21:         LATBbits.LATB3 = 0x00;
  4997  002CFE  968A               	bcf	138,3,c	;volatile
  4998  002D00                     
  4999                           ;led-metrix.c: 22:     }
  5000  002D00  2A18               	incf	shiftOut1@i^0,f,c
  5001  002D02  0E07               	movlw	7
  5002  002D04  6418               	cpfsgt	shiftOut1@i^0,c
  5003  002D06  EF87  F016         	goto	u4041
  5004  002D0A  EF89  F016         	goto	u4040
  5005  002D0E                     u4041:
  5006  002D0E  EF4B  F016         	goto	l3635
  5007  002D12                     u4040:
  5008  002D12  0012               	return		;funcret
  5009  002D14                     __end_of_shiftOut1:
  5010                           	opt callstack 0
  5011                           
  5012 ;; *************** function _initMap *****************
  5013 ;; Defined at:
  5014 ;;		line 123 in file "snake.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;		None
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  num             2   10[BANK0 ] int 
  5019 ;;  j               2   14[BANK0 ] int 
  5020 ;;  i               2   12[BANK0 ] int 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5030 ;;      Params:         0       0       0       0       0       0       0
  5031 ;;      Locals:         0       6       0       0       0       0       0
  5032 ;;      Temps:          0       8       0       0       0       0       0
  5033 ;;      Totals:         0      14       0       0       0       0       0
  5034 ;;Total ram usage:       14 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    4
  5037 ;; This function calls:
  5038 ;;		___awmod
  5039 ;;		___wmul
  5040 ;;		_rand
  5041 ;;		_srand
  5042 ;;		_time
  5043 ;; This function is called by:
  5044 ;;		_main
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text17
  5049  00162A                     __ptext17:
  5050                           	opt callstack 0
  5051  00162A                     _initMap:
  5052                           	opt callstack 26
  5053  00162A                     
  5054                           ;snake.c: 124:  int i,j;;snake.c: 125:     error=0;
  5055  00162A  0E00               	movlw	0
  5056  00162C  6E56               	movwf	_error^0,c
  5057                           
  5058                           ;snake.c: 126:     win=0;
  5059  00162E  0E00               	movlw	0
  5060  001630  6E4F               	movwf	_win^0,c
  5061                           
  5062                           ;snake.c: 127:     player[1]=15;
  5063  001632  0E0F               	movlw	15
  5064  001634  6E61               	movwf	(_player+1)^0,c
  5065                           
  5066                           ;snake.c: 128:     player[0]=4;
  5067  001636  0E04               	movlw	4
  5068  001638  6E60               	movwf	_player^0,c
  5069  00163A                     
  5070                           ;snake.c: 129:  srand(time(((void*)0)));
  5071  00163A  0E00               	movlw	0
  5072  00163C  6E15               	movwf	time@t^0,c
  5073  00163E  0E00               	movlw	0
  5074  001640  6E16               	movwf	(time@t+1)^0,c
  5075  001642  ECB3  F016         	call	_time	;wreg free
  5076  001646  C015  F0EA         	movff	?_time,??_initMap
  5077  00164A  C016  F0EB         	movff	?_time+1,??_initMap+1
  5078  00164E  C017  F0EC         	movff	?_time+2,??_initMap+2
  5079  001652  C018  F0ED         	movff	?_time+3,??_initMap+3
  5080  001656  C019  F0EE         	movff	?_time+4,??_initMap+4
  5081  00165A  C01A  F0EF         	movff	?_time+5,??_initMap+5
  5082  00165E  C01B  F0F0         	movff	?_time+6,??_initMap+6
  5083  001662  C01C  F0F1         	movff	?_time+7,??_initMap+7
  5084  001666  C0EA  F01D         	movff	??_initMap,srand@s
  5085  00166A  C0EC  F01E         	movff	??_initMap+2,srand@s+1
  5086  00166E  ECF9  F016         	call	_srand	;wreg free
  5087  001672                     
  5088                           ;snake.c: 130:     for(j=0;j<16;++j)
  5089  001672  0E00               	movlw	0
  5090  001674  0100               	movlb	0	; () banked
  5091  001676  6FF7               	movwf	(initMap@j+1)& (0+255),b
  5092  001678  0E00               	movlw	0
  5093  00167A  6FF6               	movwf	initMap@j& (0+255),b
  5094  00167C                     l3987:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;snake.c: 131:         for(i=0;i<16;++i)
  5098  00167C  0E00               	movlw	0
  5099  00167E  6FF5               	movwf	(initMap@i+1)& (0+255),b
  5100  001680  0E00               	movlw	0
  5101  001682  6FF4               	movwf	initMap@i& (0+255),b
  5102  001684                     l3993:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;snake.c: 132:             map[j][i]=0;
  5106  001684  C0F6  F0EA         	movff	initMap@j,??_initMap
  5107  001688  C0F7  F0EB         	movff	initMap@j+1,??_initMap+1
  5108  00168C  3BEA               	swapf	??_initMap& (0+255),f,b
  5109  00168E  3BEB               	swapf	(??_initMap+1)& (0+255),f,b
  5110  001690  0EF0               	movlw	240
  5111  001692  17EB               	andwf	(??_initMap+1)& (0+255),f,b
  5112  001694  51EA               	movf	??_initMap& (0+255),w,b
  5113  001696  0B0F               	andlw	15
  5114  001698  13EB               	iorwf	(??_initMap+1)& (0+255),f,b
  5115  00169A  0EF0               	movlw	240
  5116  00169C  17EA               	andwf	??_initMap& (0+255),f,b
  5117  00169E  0E00               	movlw	low _map
  5118  0016A0  6FEC               	movwf	(??_initMap+2)& (0+255),b
  5119  0016A2  0E02               	movlw	high _map
  5120  0016A4  6FED               	movwf	(??_initMap+3)& (0+255),b
  5121  0016A6  51EA               	movf	??_initMap& (0+255),w,b
  5122  0016A8  27EC               	addwf	(??_initMap+2)& (0+255),f,b
  5123  0016AA  51EB               	movf	(??_initMap+1)& (0+255),w,b
  5124  0016AC  23ED               	addwfc	(??_initMap+3)& (0+255),f,b
  5125  0016AE  51F4               	movf	initMap@i& (0+255),w,b
  5126  0016B0  25EC               	addwf	(??_initMap+2)& (0+255),w,b
  5127  0016B2  6ED9               	movwf	fsr2l,c
  5128  0016B4  51F5               	movf	(initMap@i+1)& (0+255),w,b
  5129  0016B6  21ED               	addwfc	(??_initMap+3)& (0+255),w,b
  5130  0016B8  6EDA               	movwf	fsr2h,c
  5131  0016BA  0E00               	movlw	0
  5132  0016BC  6EDF               	movwf	indf2,c
  5133  0016BE                     
  5134                           ; BSR set to: 0
  5135  0016BE  4BF4               	infsnz	initMap@i& (0+255),f,b
  5136  0016C0  2BF5               	incf	(initMap@i+1)& (0+255),f,b
  5137  0016C2                     
  5138                           ; BSR set to: 0
  5139  0016C2  BFF5               	btfsc	(initMap@i+1)& (0+255),7,b
  5140  0016C4  EF6D  F00B         	goto	u4661
  5141  0016C8  51F5               	movf	(initMap@i+1)& (0+255),w,b
  5142  0016CA  E109               	bnz	u4660
  5143  0016CC  0E10               	movlw	16
  5144  0016CE  5DF4               	subwf	initMap@i& (0+255),w,b
  5145  0016D0  A0D8               	btfss	status,0,c
  5146  0016D2  EF6D  F00B         	goto	u4661
  5147  0016D6  EF6F  F00B         	goto	u4660
  5148  0016DA                     u4661:
  5149  0016DA  EF42  F00B         	goto	l3993
  5150  0016DE                     u4660:
  5151  0016DE                     
  5152                           ; BSR set to: 0
  5153  0016DE  4BF6               	infsnz	initMap@j& (0+255),f,b
  5154  0016E0  2BF7               	incf	(initMap@j+1)& (0+255),f,b
  5155  0016E2                     
  5156                           ; BSR set to: 0
  5157  0016E2  BFF7               	btfsc	(initMap@j+1)& (0+255),7,b
  5158  0016E4  EF7D  F00B         	goto	u4671
  5159  0016E8  51F7               	movf	(initMap@j+1)& (0+255),w,b
  5160  0016EA  E109               	bnz	u4670
  5161  0016EC  0E10               	movlw	16
  5162  0016EE  5DF6               	subwf	initMap@j& (0+255),w,b
  5163  0016F0  A0D8               	btfss	status,0,c
  5164  0016F2  EF7D  F00B         	goto	u4671
  5165  0016F6  EF7F  F00B         	goto	u4670
  5166  0016FA                     u4671:
  5167  0016FA  EF3E  F00B         	goto	l3987
  5168  0016FE                     u4670:
  5169  0016FE                     
  5170                           ; BSR set to: 0
  5171                           ;snake.c: 133:  map[player[1]][player[0]]=1;
  5172  0016FE  5061               	movf	(_player+1)^0,w,c
  5173  001700  0D10               	mullw	16
  5174  001702  0E00               	movlw	low _map
  5175  001704  6FEA               	movwf	??_initMap& (0+255),b
  5176  001706  0E02               	movlw	high _map
  5177  001708  6FEB               	movwf	(??_initMap+1)& (0+255),b
  5178  00170A  50F3               	movf	243,w,c
  5179  00170C  27EA               	addwf	??_initMap& (0+255),f,b
  5180  00170E  50F4               	movf	244,w,c
  5181  001710  23EB               	addwfc	(??_initMap+1)& (0+255),f,b
  5182  001712  5060               	movf	_player^0,w,c
  5183  001714  25EA               	addwf	??_initMap& (0+255),w,b
  5184  001716  6ED9               	movwf	fsr2l,c
  5185  001718  0E00               	movlw	0
  5186  00171A  21EB               	addwfc	(??_initMap+1)& (0+255),w,b
  5187  00171C  6EDA               	movwf	fsr2h,c
  5188  00171E  0E01               	movlw	1
  5189  001720  6EDF               	movwf	indf2,c
  5190  001722                     
  5191                           ; BSR set to: 0
  5192                           ;snake.c: 134:  for(j=0;j<6;++j){
  5193  001722  0E00               	movlw	0
  5194  001724  6FF7               	movwf	(initMap@j+1)& (0+255),b
  5195  001726  0E00               	movlw	0
  5196  001728  6FF6               	movwf	initMap@j& (0+255),b
  5197  00172A                     l332:
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;snake.c: 135:   int num=(j%2==0)?1:-1;
  5201  00172A  A1F6               	btfss	initMap@j& (0+255),0,b
  5202  00172C  EF9A  F00B         	goto	u4681
  5203  001730  EF9C  F00B         	goto	u4680
  5204  001734                     u4681:
  5205  001734  EFA0  F00B         	goto	l4013
  5206  001738                     u4680:
  5207  001738                     
  5208                           ; BSR set to: 0
  5209  001738  69F2               	setf	initMap@num& (0+255),b
  5210  00173A  69F3               	setf	(initMap@num+1)& (0+255),b
  5211  00173C  EFA4  F00B         	goto	l4015
  5212  001740                     l4013:
  5213                           
  5214                           ; BSR set to: 0
  5215  001740  0E00               	movlw	0
  5216  001742  6FF3               	movwf	(initMap@num+1)& (0+255),b
  5217  001744  0E01               	movlw	1
  5218  001746  6FF2               	movwf	initMap@num& (0+255),b
  5219  001748                     l4015:
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;snake.c: 136:   car[j][0]=rand()%12+2;
  5223  001748  EC43  F013         	call	_rand	;wreg free
  5224  00174C  C02D  F037         	movff	?_rand,___awmod@dividend
  5225  001750  C02E  F038         	movff	?_rand+1,___awmod@dividend+1
  5226  001754  0E00               	movlw	0
  5227  001756  6E3A               	movwf	(___awmod@divisor+1)^0,c
  5228  001758  0E0C               	movlw	12
  5229  00175A  6E39               	movwf	___awmod@divisor^0,c
  5230  00175C  ECD6  F014         	call	___awmod	;wreg free
  5231  001760  0E02               	movlw	2
  5232  001762  2637               	addwf	?___awmod^0,f,c
  5233  001764  0E00               	movlw	0
  5234  001766  2238               	addwfc	(?___awmod+1)^0,f,c
  5235  001768  0EC0               	movlw	low _car
  5236  00176A  0100               	movlb	0	; () banked
  5237  00176C  6FEA               	movwf	??_initMap& (0+255),b
  5238  00176E  0E00               	movlw	high _car
  5239  001770  6FEB               	movwf	(??_initMap+1)& (0+255),b
  5240  001772  90D8               	bcf	status,0,c
  5241  001774  35F6               	rlcf	initMap@j& (0+255),w,b
  5242  001776  6ED9               	movwf	fsr2l,c
  5243  001778  35F7               	rlcf	(initMap@j+1)& (0+255),w,b
  5244  00177A  6EDA               	movwf	fsr2h,c
  5245  00177C  90D8               	bcf	status,0,c
  5246  00177E  36D9               	rlcf	fsr2l,f,c
  5247  001780  36DA               	rlcf	fsr2h,f,c
  5248  001782  51EA               	movf	??_initMap& (0+255),w,b
  5249  001784  26D9               	addwf	fsr2l,f,c
  5250  001786  51EB               	movf	(??_initMap+1)& (0+255),w,b
  5251  001788  22DA               	addwfc	fsr2h,f,c
  5252  00178A  C037  FFDE         	movff	?___awmod,postinc2
  5253  00178E  C038  FFDD         	movff	?___awmod+1,postdec2
  5254  001792                     
  5255                           ; BSR set to: 0
  5256                           ;snake.c: 137:   car[j][1]=car[j][0]+num*2;
  5257  001792  0EC0               	movlw	low _car
  5258  001794  6FEA               	movwf	??_initMap& (0+255),b
  5259  001796  0E00               	movlw	high _car
  5260  001798  6FEB               	movwf	(??_initMap+1)& (0+255),b
  5261  00179A  90D8               	bcf	status,0,c
  5262  00179C  35F6               	rlcf	initMap@j& (0+255),w,b
  5263  00179E  6ED9               	movwf	fsr2l,c
  5264  0017A0  35F7               	rlcf	(initMap@j+1)& (0+255),w,b
  5265  0017A2  6EDA               	movwf	fsr2h,c
  5266  0017A4  90D8               	bcf	status,0,c
  5267  0017A6  36D9               	rlcf	fsr2l,f,c
  5268  0017A8  36DA               	rlcf	fsr2h,f,c
  5269  0017AA  51EA               	movf	??_initMap& (0+255),w,b
  5270  0017AC  26D9               	addwf	fsr2l,f,c
  5271  0017AE  51EB               	movf	(??_initMap+1)& (0+255),w,b
  5272  0017B0  22DA               	addwfc	fsr2h,f,c
  5273  0017B2  CFDE F0EC          	movff	postinc2,??_initMap+2
  5274  0017B6  CFDD F0ED          	movff	postdec2,??_initMap+3
  5275  0017BA  C0F2  F0EE         	movff	initMap@num,??_initMap+4
  5276  0017BE  C0F3  F0EF         	movff	initMap@num+1,??_initMap+5
  5277  0017C2  90D8               	bcf	status,0,c
  5278  0017C4  37EE               	rlcf	(??_initMap+4)& (0+255),f,b
  5279  0017C6  37EF               	rlcf	(??_initMap+5)& (0+255),f,b
  5280  0017C8  51EC               	movf	(??_initMap+2)& (0+255),w,b
  5281  0017CA  27EE               	addwf	(??_initMap+4)& (0+255),f,b
  5282  0017CC  51ED               	movf	(??_initMap+3)& (0+255),w,b
  5283  0017CE  23EF               	addwfc	(??_initMap+5)& (0+255),f,b
  5284  0017D0  0EC0               	movlw	low _car
  5285  0017D2  6FF0               	movwf	(??_initMap+6)& (0+255),b
  5286  0017D4  0E00               	movlw	high _car
  5287  0017D6  6FF1               	movwf	(??_initMap+7)& (0+255),b
  5288  0017D8  0E02               	movlw	2
  5289  0017DA  27F0               	addwf	(??_initMap+6)& (0+255),f,b
  5290  0017DC  0E00               	movlw	0
  5291  0017DE  23F1               	addwfc	(??_initMap+7)& (0+255),f,b
  5292  0017E0  90D8               	bcf	status,0,c
  5293  0017E2  35F6               	rlcf	initMap@j& (0+255),w,b
  5294  0017E4  6ED9               	movwf	fsr2l,c
  5295  0017E6  35F7               	rlcf	(initMap@j+1)& (0+255),w,b
  5296  0017E8  6EDA               	movwf	fsr2h,c
  5297  0017EA  90D8               	bcf	status,0,c
  5298  0017EC  36D9               	rlcf	fsr2l,f,c
  5299  0017EE  36DA               	rlcf	fsr2h,f,c
  5300  0017F0  51F0               	movf	(??_initMap+6)& (0+255),w,b
  5301  0017F2  26D9               	addwf	fsr2l,f,c
  5302  0017F4  51F1               	movf	(??_initMap+7)& (0+255),w,b
  5303  0017F6  22DA               	addwfc	fsr2h,f,c
  5304  0017F8  C0EE  FFDE         	movff	??_initMap+4,postinc2
  5305  0017FC  C0EF  FFDD         	movff	??_initMap+5,postdec2
  5306  001800                     
  5307                           ; BSR set to: 0
  5308                           ;snake.c: 138:   for(i=0;i<3;++i){
  5309  001800  0E00               	movlw	0
  5310  001802  6FF5               	movwf	(initMap@i+1)& (0+255),b
  5311  001804  0E00               	movlw	0
  5312  001806  6FF4               	movwf	initMap@i& (0+255),b
  5313  001808                     l4025:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;snake.c: 139:    map[2+j*2][car[j][0]+num*i]=1;
  5317  001808  0EC0               	movlw	low _car
  5318  00180A  6FEA               	movwf	??_initMap& (0+255),b
  5319  00180C  0E00               	movlw	high _car
  5320  00180E  6FEB               	movwf	(??_initMap+1)& (0+255),b
  5321  001810  90D8               	bcf	status,0,c
  5322  001812  35F6               	rlcf	initMap@j& (0+255),w,b
  5323  001814  6ED9               	movwf	fsr2l,c
  5324  001816  35F7               	rlcf	(initMap@j+1)& (0+255),w,b
  5325  001818  6EDA               	movwf	fsr2h,c
  5326  00181A  90D8               	bcf	status,0,c
  5327  00181C  36D9               	rlcf	fsr2l,f,c
  5328  00181E  36DA               	rlcf	fsr2h,f,c
  5329  001820  51EA               	movf	??_initMap& (0+255),w,b
  5330  001822  26D9               	addwf	fsr2l,f,c
  5331  001824  51EB               	movf	(??_initMap+1)& (0+255),w,b
  5332  001826  22DA               	addwfc	fsr2h,f,c
  5333  001828  CFDE F0EC          	movff	postinc2,??_initMap+2
  5334  00182C  CFDD F0ED          	movff	postdec2,??_initMap+3
  5335  001830  C0F6  F0EE         	movff	initMap@j,??_initMap+4
  5336  001834  C0F7  F0EF         	movff	initMap@j+1,??_initMap+5
  5337  001838  90D8               	bcf	status,0,c
  5338  00183A  37EE               	rlcf	(??_initMap+4)& (0+255),f,b
  5339  00183C  37EF               	rlcf	(??_initMap+5)& (0+255),f,b
  5340  00183E  3BEE               	swapf	(??_initMap+4)& (0+255),f,b
  5341  001840  3BEF               	swapf	(??_initMap+5)& (0+255),f,b
  5342  001842  0EF0               	movlw	240
  5343  001844  17EF               	andwf	(??_initMap+5)& (0+255),f,b
  5344  001846  51EE               	movf	(??_initMap+4)& (0+255),w,b
  5345  001848  0B0F               	andlw	15
  5346  00184A  13EF               	iorwf	(??_initMap+5)& (0+255),f,b
  5347  00184C  0EF0               	movlw	240
  5348  00184E  17EE               	andwf	(??_initMap+4)& (0+255),f,b
  5349  001850  C0F2  F015         	movff	initMap@num,___wmul@multiplier
  5350  001854  C0F3  F016         	movff	initMap@num+1,___wmul@multiplier+1
  5351  001858  C0F4  F017         	movff	initMap@i,___wmul@multiplicand
  5352  00185C  C0F5  F018         	movff	initMap@i+1,___wmul@multiplicand+1
  5353  001860  EC10  F017         	call	___wmul	;wreg free
  5354  001864  0E00               	movlw	low _map
  5355  001866  0100               	movlb	0	; () banked
  5356  001868  6FF0               	movwf	(??_initMap+6)& (0+255),b
  5357  00186A  0E02               	movlw	high _map
  5358  00186C  6FF1               	movwf	(??_initMap+7)& (0+255),b
  5359  00186E  0E20               	movlw	32
  5360  001870  27F0               	addwf	(??_initMap+6)& (0+255),f,b
  5361  001872  0E00               	movlw	0
  5362  001874  23F1               	addwfc	(??_initMap+7)& (0+255),f,b
  5363  001876  5015               	movf	?___wmul^0,w,c
  5364  001878  27F0               	addwf	(??_initMap+6)& (0+255),f,b
  5365  00187A  5016               	movf	(?___wmul+1)^0,w,c
  5366  00187C  23F1               	addwfc	(??_initMap+7)& (0+255),f,b
  5367  00187E  51EE               	movf	(??_initMap+4)& (0+255),w,b
  5368  001880  27F0               	addwf	(??_initMap+6)& (0+255),f,b
  5369  001882  51EF               	movf	(??_initMap+5)& (0+255),w,b
  5370  001884  23F1               	addwfc	(??_initMap+7)& (0+255),f,b
  5371  001886  51EC               	movf	(??_initMap+2)& (0+255),w,b
  5372  001888  25F0               	addwf	(??_initMap+6)& (0+255),w,b
  5373  00188A  6ED9               	movwf	fsr2l,c
  5374  00188C  51ED               	movf	(??_initMap+3)& (0+255),w,b
  5375  00188E  21F1               	addwfc	(??_initMap+7)& (0+255),w,b
  5376  001890  6EDA               	movwf	fsr2h,c
  5377  001892  0E01               	movlw	1
  5378  001894  6EDF               	movwf	indf2,c
  5379  001896                     
  5380                           ; BSR set to: 0
  5381                           ;snake.c: 141:   }
  5382  001896  4BF4               	infsnz	initMap@i& (0+255),f,b
  5383  001898  2BF5               	incf	(initMap@i+1)& (0+255),f,b
  5384  00189A                     
  5385                           ; BSR set to: 0
  5386  00189A  BFF5               	btfsc	(initMap@i+1)& (0+255),7,b
  5387  00189C  EF59  F00C         	goto	u4691
  5388  0018A0  51F5               	movf	(initMap@i+1)& (0+255),w,b
  5389  0018A2  E109               	bnz	u4690
  5390  0018A4  0E03               	movlw	3
  5391  0018A6  5DF4               	subwf	initMap@i& (0+255),w,b
  5392  0018A8  A0D8               	btfss	status,0,c
  5393  0018AA  EF59  F00C         	goto	u4691
  5394  0018AE  EF5B  F00C         	goto	u4690
  5395  0018B2                     u4691:
  5396  0018B2  EF04  F00C         	goto	l4025
  5397  0018B6                     u4690:
  5398  0018B6                     
  5399                           ; BSR set to: 0
  5400                           ;snake.c: 142:  }
  5401  0018B6  4BF6               	infsnz	initMap@j& (0+255),f,b
  5402  0018B8  2BF7               	incf	(initMap@j+1)& (0+255),f,b
  5403  0018BA                     
  5404                           ; BSR set to: 0
  5405  0018BA  BFF7               	btfsc	(initMap@j+1)& (0+255),7,b
  5406  0018BC  EF69  F00C         	goto	u4701
  5407  0018C0  51F7               	movf	(initMap@j+1)& (0+255),w,b
  5408  0018C2  E109               	bnz	u4700
  5409  0018C4  0E06               	movlw	6
  5410  0018C6  5DF6               	subwf	initMap@j& (0+255),w,b
  5411  0018C8  A0D8               	btfss	status,0,c
  5412  0018CA  EF69  F00C         	goto	u4701
  5413  0018CE  EF6B  F00C         	goto	u4700
  5414  0018D2                     u4701:
  5415  0018D2  EF95  F00B         	goto	l332
  5416  0018D6                     u4700:
  5417  0018D6                     
  5418                           ; BSR set to: 0
  5419  0018D6  0012               	return		;funcret
  5420  0018D8                     __end_of_initMap:
  5421                           	opt callstack 0
  5422                           
  5423 ;; *************** function _time *****************
  5424 ;; Defined at:
  5425 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\time.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  t               2   20[COMRAM] PTR long long 
  5428 ;;		 -> NULL(0), 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  8   20[COMRAM] long long 
  5433 ;; Registers used:
  5434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5440 ;;      Params:         8       0       0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0       0       0
  5443 ;;      Totals:         8       0       0       0       0       0       0
  5444 ;;Total ram usage:        8 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    2
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_initMap
  5451 ;;		_Delay
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text18
  5456  002D66                     __ptext18:
  5457                           	opt callstack 0
  5458  002D66                     _time:
  5459                           	opt callstack 27
  5460  002D66  5015               	movf	time@t^0,w,c
  5461  002D68  1016               	iorwf	(time@t+1)^0,w,c
  5462  002D6A  B4D8               	btfsc	status,2,c
  5463  002D6C  EFBA  F016         	goto	u4421
  5464  002D70  EFBC  F016         	goto	u4420
  5465  002D74                     u4421:
  5466  002D74  EFD0  F016         	goto	l3857
  5467  002D78                     u4420:
  5468  002D78  C015  FFD9         	movff	time@t,fsr2l
  5469  002D7C  C016  FFDA         	movff	time@t+1,fsr2h
  5470  002D80  0EFF               	movlw	255
  5471  002D82  6EDE               	movwf	postinc2,c
  5472  002D84  0EFF               	movlw	255
  5473  002D86  6EDE               	movwf	postinc2,c
  5474  002D88  0EFF               	movlw	255
  5475  002D8A  6EDE               	movwf	postinc2,c
  5476  002D8C  0EFF               	movlw	255
  5477  002D8E  6EDE               	movwf	postinc2,c
  5478  002D90  0EFF               	movlw	255
  5479  002D92  6EDE               	movwf	postinc2,c
  5480  002D94  0EFF               	movlw	255
  5481  002D96  6EDE               	movwf	postinc2,c
  5482  002D98  0EFF               	movlw	255
  5483  002D9A  6EDE               	movwf	postinc2,c
  5484  002D9C  0EFF               	movlw	255
  5485  002D9E  6EDD               	movwf	postdec2,c
  5486  002DA0                     l3857:
  5487  002DA0  6815               	setf	?_time^0,c
  5488  002DA2  6816               	setf	(?_time+1)^0,c
  5489  002DA4  6817               	setf	(?_time+2)^0,c
  5490  002DA6  6818               	setf	(?_time+3)^0,c
  5491  002DA8  6819               	setf	(?_time+4)^0,c
  5492  002DAA  681A               	setf	(?_time+5)^0,c
  5493  002DAC  681B               	setf	(?_time+6)^0,c
  5494  002DAE  681C               	setf	(?_time+7)^0,c
  5495  002DB0  0012               	return		;funcret
  5496  002DB2                     __end_of_time:
  5497                           	opt callstack 0
  5498                           
  5499 ;; *************** function _srand *****************
  5500 ;; Defined at:
  5501 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  s               2   28[COMRAM] unsigned int 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5515 ;;      Params:         2       0       0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0       0       0
  5517 ;;      Temps:          4       0       0       0       0       0       0
  5518 ;;      Totals:         6       0       0       0       0       0       0
  5519 ;;Total ram usage:        6 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    2
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_initMap
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text19
  5530  002DF2                     __ptext19:
  5531                           	opt callstack 0
  5532  002DF2                     _srand:
  5533                           	opt callstack 27
  5534  002DF2  0EFF               	movlw	255
  5535  002DF4  6E1F               	movwf	??_srand^0,c
  5536  002DF6  0EFF               	movlw	255
  5537  002DF8  6E20               	movwf	(??_srand+1)^0,c
  5538  002DFA  C01D  F021         	movff	srand@s,??_srand+2
  5539  002DFE  C01E  F022         	movff	srand@s+1,??_srand+3
  5540  002E02  501F               	movf	??_srand^0,w,c
  5541  002E04  2621               	addwf	(??_srand+2)^0,f,c
  5542  002E06  5020               	movf	(??_srand+1)^0,w,c
  5543  002E08  2222               	addwfc	(??_srand+3)^0,f,c
  5544  002E0A  C021  F057         	movff	??_srand+2,_seed
  5545  002E0E  C022  F058         	movff	??_srand+3,_seed+1
  5546  002E12  6A59               	clrf	(_seed+2)^0,c
  5547  002E14  6A5A               	clrf	(_seed+3)^0,c
  5548  002E16  6A5B               	clrf	(_seed+4)^0,c
  5549  002E18  6A5C               	clrf	(_seed+5)^0,c
  5550  002E1A  6A5D               	clrf	(_seed+6)^0,c
  5551  002E1C  6A5E               	clrf	(_seed+7)^0,c
  5552  002E1E  0012               	return		;funcret
  5553  002E20                     __end_of_srand:
  5554                           	opt callstack 0
  5555                           
  5556 ;; *************** function _rand *****************
  5557 ;; Defined at:
  5558 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;		None
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  2   44[COMRAM] int 
  5565 ;; Registers used:
  5566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5572 ;;      Params:         2       0       0       0       0       0       0
  5573 ;;      Locals:         0       0       0       0       0       0       0
  5574 ;;      Temps:          8       0       0       0       0       0       0
  5575 ;;      Totals:        10       0       0       0       0       0       0
  5576 ;;Total ram usage:       10 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:    3
  5579 ;; This function calls:
  5580 ;;		___omul
  5581 ;; This function is called by:
  5582 ;;		_initMap
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text20
  5587  002686                     __ptext20:
  5588                           	opt callstack 0
  5589  002686                     _rand:
  5590                           	opt callstack 26
  5591  002686  C057  F015         	movff	_seed,___omul@multiplier
  5592  00268A  C058  F016         	movff	_seed+1,___omul@multiplier+1
  5593  00268E  C059  F017         	movff	_seed+2,___omul@multiplier+2
  5594  002692  C05A  F018         	movff	_seed+3,___omul@multiplier+3
  5595  002696  C05B  F019         	movff	_seed+4,___omul@multiplier+4
  5596  00269A  C05C  F01A         	movff	_seed+5,___omul@multiplier+5
  5597  00269E  C05D  F01B         	movff	_seed+6,___omul@multiplier+6
  5598  0026A2  C05E  F01C         	movff	_seed+7,___omul@multiplier+7
  5599  0026A6  0E2D               	movlw	45
  5600  0026A8  6E1D               	movwf	___omul@multiplicand^0,c
  5601  0026AA  0E7F               	movlw	127
  5602  0026AC  6E1E               	movwf	(___omul@multiplicand+1)^0,c
  5603  0026AE  0E95               	movlw	149
  5604  0026B0  6E1F               	movwf	(___omul@multiplicand+2)^0,c
  5605  0026B2  0E4C               	movlw	76
  5606  0026B4  6E20               	movwf	(___omul@multiplicand+3)^0,c
  5607  0026B6  0E2D               	movlw	45
  5608  0026B8  6E21               	movwf	(___omul@multiplicand+4)^0,c
  5609  0026BA  0EF4               	movlw	244
  5610  0026BC  6E22               	movwf	(___omul@multiplicand+5)^0,c
  5611  0026BE  0E51               	movlw	81
  5612  0026C0  6E23               	movwf	(___omul@multiplicand+6)^0,c
  5613  0026C2  0E58               	movlw	88
  5614  0026C4  6E24               	movwf	(___omul@multiplicand+7)^0,c
  5615  0026C6  EC2F  F015         	call	___omul	;wreg free
  5616  0026CA  C015  F02F         	movff	?___omul,??_rand
  5617  0026CE  C016  F030         	movff	?___omul+1,??_rand+1
  5618  0026D2  C017  F031         	movff	?___omul+2,??_rand+2
  5619  0026D6  C018  F032         	movff	?___omul+3,??_rand+3
  5620  0026DA  C019  F033         	movff	?___omul+4,??_rand+4
  5621  0026DE  C01A  F034         	movff	?___omul+5,??_rand+5
  5622  0026E2  C01B  F035         	movff	?___omul+6,??_rand+6
  5623  0026E6  C01C  F036         	movff	?___omul+7,??_rand+7
  5624  0026EA  0E01               	movlw	1
  5625  0026EC  242F               	addwf	??_rand^0,w,c
  5626  0026EE  6E57               	movwf	_seed^0,c
  5627  0026F0  0E00               	movlw	0
  5628  0026F2  2030               	addwfc	(??_rand+1)^0,w,c
  5629  0026F4  6E58               	movwf	(_seed+1)^0,c
  5630  0026F6  0E00               	movlw	0
  5631  0026F8  2031               	addwfc	(??_rand+2)^0,w,c
  5632  0026FA  6E59               	movwf	(_seed+2)^0,c
  5633  0026FC  0E00               	movlw	0
  5634  0026FE  2032               	addwfc	(??_rand+3)^0,w,c
  5635  002700  6E5A               	movwf	(_seed+3)^0,c
  5636  002702  0E00               	movlw	0
  5637  002704  2033               	addwfc	(??_rand+4)^0,w,c
  5638  002706  6E5B               	movwf	(_seed+4)^0,c
  5639  002708  0E00               	movlw	0
  5640  00270A  2034               	addwfc	(??_rand+5)^0,w,c
  5641  00270C  6E5C               	movwf	(_seed+5)^0,c
  5642  00270E  0E00               	movlw	0
  5643  002710  2035               	addwfc	(??_rand+6)^0,w,c
  5644  002712  6E5D               	movwf	(_seed+6)^0,c
  5645  002714  0E00               	movlw	0
  5646  002716  2036               	addwfc	(??_rand+7)^0,w,c
  5647  002718  6E5E               	movwf	(_seed+7)^0,c
  5648  00271A  C057  F02F         	movff	_seed,??_rand
  5649  00271E  C058  F030         	movff	_seed+1,??_rand+1
  5650  002722  C059  F031         	movff	_seed+2,??_rand+2
  5651  002726  C05A  F032         	movff	_seed+3,??_rand+3
  5652  00272A  C05B  F033         	movff	_seed+4,??_rand+4
  5653  00272E  C05C  F034         	movff	_seed+5,??_rand+5
  5654  002732  C05D  F035         	movff	_seed+6,??_rand+6
  5655  002736  C05E  F036         	movff	_seed+7,??_rand+7
  5656  00273A  0E32               	movlw	50
  5657  00273C  EFA9  F013         	goto	u4430
  5658  002740                     u4435:
  5659  002740  90D8               	bcf	status,0,c
  5660  002742  3236               	rrcf	(??_rand+7)^0,f,c
  5661  002744  3235               	rrcf	(??_rand+6)^0,f,c
  5662  002746  3234               	rrcf	(??_rand+5)^0,f,c
  5663  002748  3233               	rrcf	(??_rand+4)^0,f,c
  5664  00274A  3232               	rrcf	(??_rand+3)^0,f,c
  5665  00274C  3231               	rrcf	(??_rand+2)^0,f,c
  5666  00274E  3230               	rrcf	(??_rand+1)^0,f,c
  5667  002750  322F               	rrcf	??_rand^0,f,c
  5668  002752                     u4430:
  5669  002752  2EE8               	decfsz	wreg,f,c
  5670  002754  EFA0  F013         	goto	u4435
  5671  002758  C02F  F02D         	movff	??_rand,?_rand
  5672  00275C  C031  F02E         	movff	??_rand+2,?_rand+1
  5673  002760  0012               	return		;funcret
  5674  002762                     __end_of_rand:
  5675                           	opt callstack 0
  5676                           
  5677 ;; *************** function ___omul *****************
  5678 ;; Defined at:
  5679 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  multiplier      8   20[COMRAM] unsigned long long 
  5682 ;;  multiplicand    8   28[COMRAM] unsigned long long 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  product         8   36[COMRAM] unsigned long long 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  8   20[COMRAM] unsigned long long 
  5687 ;; Registers used:
  5688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5694 ;;      Params:        16       0       0       0       0       0       0
  5695 ;;      Locals:         8       0       0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0
  5697 ;;      Totals:        24       0       0       0       0       0       0
  5698 ;;Total ram usage:       24 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    2
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_rand
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text21
  5709  002A5E                     __ptext21:
  5710                           	opt callstack 0
  5711  002A5E                     ___omul:
  5712                           	opt callstack 26
  5713  002A5E  EE20  F025         	lfsr	2,___omul@product
  5714  002A62  0E07               	movlw	7
  5715  002A64                     u4231:
  5716  002A64  6ADE               	clrf	postinc2,c
  5717  002A66  06E8               	decf	wreg,f,c
  5718  002A68  E2FD               	bc	u4231
  5719  002A6A                     l3743:
  5720  002A6A  A015               	btfss	___omul@multiplier^0,0,c
  5721  002A6C  EF3A  F015         	goto	u4241
  5722  002A70  EF3C  F015         	goto	u4240
  5723  002A74                     u4241:
  5724  002A74  EF4C  F015         	goto	l3747
  5725  002A78                     u4240:
  5726  002A78  501D               	movf	___omul@multiplicand^0,w,c
  5727  002A7A  2625               	addwf	___omul@product^0,f,c
  5728  002A7C  501E               	movf	(___omul@multiplicand+1)^0,w,c
  5729  002A7E  2226               	addwfc	(___omul@product+1)^0,f,c
  5730  002A80  501F               	movf	(___omul@multiplicand+2)^0,w,c
  5731  002A82  2227               	addwfc	(___omul@product+2)^0,f,c
  5732  002A84  5020               	movf	(___omul@multiplicand+3)^0,w,c
  5733  002A86  2228               	addwfc	(___omul@product+3)^0,f,c
  5734  002A88  5021               	movf	(___omul@multiplicand+4)^0,w,c
  5735  002A8A  2229               	addwfc	(___omul@product+4)^0,f,c
  5736  002A8C  5022               	movf	(___omul@multiplicand+5)^0,w,c
  5737  002A8E  222A               	addwfc	(___omul@product+5)^0,f,c
  5738  002A90  5023               	movf	(___omul@multiplicand+6)^0,w,c
  5739  002A92  222B               	addwfc	(___omul@product+6)^0,f,c
  5740  002A94  5024               	movf	(___omul@multiplicand+7)^0,w,c
  5741  002A96  222C               	addwfc	(___omul@product+7)^0,f,c
  5742  002A98                     l3747:
  5743  002A98  90D8               	bcf	status,0,c
  5744  002A9A  361D               	rlcf	___omul@multiplicand^0,f,c
  5745  002A9C  361E               	rlcf	(___omul@multiplicand+1)^0,f,c
  5746  002A9E  361F               	rlcf	(___omul@multiplicand+2)^0,f,c
  5747  002AA0  3620               	rlcf	(___omul@multiplicand+3)^0,f,c
  5748  002AA2  3621               	rlcf	(___omul@multiplicand+4)^0,f,c
  5749  002AA4  3622               	rlcf	(___omul@multiplicand+5)^0,f,c
  5750  002AA6  3623               	rlcf	(___omul@multiplicand+6)^0,f,c
  5751  002AA8  3624               	rlcf	(___omul@multiplicand+7)^0,f,c
  5752  002AAA  90D8               	bcf	status,0,c
  5753  002AAC  321C               	rrcf	(___omul@multiplier+7)^0,f,c
  5754  002AAE  321B               	rrcf	(___omul@multiplier+6)^0,f,c
  5755  002AB0  321A               	rrcf	(___omul@multiplier+5)^0,f,c
  5756  002AB2  3219               	rrcf	(___omul@multiplier+4)^0,f,c
  5757  002AB4  3218               	rrcf	(___omul@multiplier+3)^0,f,c
  5758  002AB6  3217               	rrcf	(___omul@multiplier+2)^0,f,c
  5759  002AB8  3216               	rrcf	(___omul@multiplier+1)^0,f,c
  5760  002ABA  3215               	rrcf	___omul@multiplier^0,f,c
  5761  002ABC  5015               	movf	___omul@multiplier^0,w,c
  5762  002ABE  1016               	iorwf	(___omul@multiplier+1)^0,w,c
  5763  002AC0  1017               	iorwf	(___omul@multiplier+2)^0,w,c
  5764  002AC2  1018               	iorwf	(___omul@multiplier+3)^0,w,c
  5765  002AC4  1019               	iorwf	(___omul@multiplier+4)^0,w,c
  5766  002AC6  101A               	iorwf	(___omul@multiplier+5)^0,w,c
  5767  002AC8  101B               	iorwf	(___omul@multiplier+6)^0,w,c
  5768  002ACA  101C               	iorwf	(___omul@multiplier+7)^0,w,c
  5769  002ACC  A4D8               	btfss	status,2,c
  5770  002ACE  EF6B  F015         	goto	u4251
  5771  002AD2  EF6D  F015         	goto	u4250
  5772  002AD6                     u4251:
  5773  002AD6  EF35  F015         	goto	l3743
  5774  002ADA                     u4250:
  5775  002ADA  C025  F015         	movff	___omul@product,?___omul
  5776  002ADE  C026  F016         	movff	___omul@product+1,?___omul+1
  5777  002AE2  C027  F017         	movff	___omul@product+2,?___omul+2
  5778  002AE6  C028  F018         	movff	___omul@product+3,?___omul+3
  5779  002AEA  C029  F019         	movff	___omul@product+4,?___omul+4
  5780  002AEE  C02A  F01A         	movff	___omul@product+5,?___omul+5
  5781  002AF2  C02B  F01B         	movff	___omul@product+6,?___omul+6
  5782  002AF6  C02C  F01C         	movff	___omul@product+7,?___omul+7
  5783  002AFA  0012               	return		;funcret
  5784  002AFC                     __end_of___omul:
  5785                           	opt callstack 0
  5786                           
  5787 ;; *************** function ___wmul *****************
  5788 ;; Defined at:
  5789 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  multiplier      2   20[COMRAM] unsigned int 
  5792 ;;  multiplicand    2   22[COMRAM] unsigned int 
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;  product         2   24[COMRAM] unsigned int 
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  2   20[COMRAM] unsigned int 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0, prodl, prodh
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5804 ;;      Params:         4       0       0       0       0       0       0
  5805 ;;      Locals:         2       0       0       0       0       0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0
  5807 ;;      Totals:         6       0       0       0       0       0       0
  5808 ;;Total ram usage:        6 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:    2
  5811 ;; This function calls:
  5812 ;;		Nothing
  5813 ;; This function is called by:
  5814 ;;		_initMap
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text22
  5819  002E20                     __ptext22:
  5820                           	opt callstack 0
  5821  002E20                     ___wmul:
  5822                           	opt callstack 27
  5823  002E20  5015               	movf	___wmul@multiplier^0,w,c
  5824  002E22  0217               	mulwf	___wmul@multiplicand^0,c
  5825  002E24  CFF3 F019          	movff	prodl,___wmul@product
  5826  002E28  CFF4 F01A          	movff	prodh,___wmul@product+1
  5827  002E2C  5015               	movf	___wmul@multiplier^0,w,c
  5828  002E2E  0218               	mulwf	(___wmul@multiplicand+1)^0,c
  5829  002E30  50F3               	movf	243,w,c
  5830  002E32  261A               	addwf	(___wmul@product+1)^0,f,c
  5831  002E34  5016               	movf	(___wmul@multiplier+1)^0,w,c
  5832  002E36  0217               	mulwf	___wmul@multiplicand^0,c
  5833  002E38  50F3               	movf	243,w,c
  5834  002E3A  261A               	addwf	(___wmul@product+1)^0,f,c
  5835  002E3C  C019  F015         	movff	___wmul@product,?___wmul
  5836  002E40  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  5837  002E44  0012               	return		;funcret
  5838  002E46                     __end_of___wmul:
  5839                           	opt callstack 0
  5840                           
  5841 ;; *************** function ___awmod *****************
  5842 ;; Defined at:
  5843 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  dividend        2   54[COMRAM] int 
  5846 ;;  divisor         2   56[COMRAM] int 
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;  sign            1    1[BANK0 ] unsigned char 
  5849 ;;  counter         1    0[BANK0 ] unsigned char 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  2   54[COMRAM] int 
  5852 ;; Registers used:
  5853 ;;		wreg, status,2, status,0
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5859 ;;      Params:         4       0       0       0       0       0       0
  5860 ;;      Locals:         0       2       0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0
  5862 ;;      Totals:         4       2       0       0       0       0       0
  5863 ;;Total ram usage:        6 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    2
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_initMap
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text23
  5874  0029AC                     __ptext23:
  5875                           	opt callstack 0
  5876  0029AC                     ___awmod:
  5877                           	opt callstack 27
  5878  0029AC  0E00               	movlw	0
  5879  0029AE  0100               	movlb	0	; () banked
  5880  0029B0  6FE9               	movwf	___awmod@sign& (0+255),b
  5881  0029B2                     
  5882                           ; BSR set to: 0
  5883  0029B2  BE38               	btfsc	(___awmod@dividend+1)^0,7,c
  5884  0029B4  EFE0  F014         	goto	u4600
  5885  0029B8  EFDE  F014         	goto	u4601
  5886  0029BC                     u4601:
  5887  0029BC  EFE6  F014         	goto	l3947
  5888  0029C0                     u4600:
  5889  0029C0                     
  5890                           ; BSR set to: 0
  5891  0029C0  6C37               	negf	___awmod@dividend^0,c
  5892  0029C2  1E38               	comf	(___awmod@dividend+1)^0,f,c
  5893  0029C4  B0D8               	btfsc	status,0,c
  5894  0029C6  2A38               	incf	(___awmod@dividend+1)^0,f,c
  5895  0029C8                     
  5896                           ; BSR set to: 0
  5897  0029C8  0E01               	movlw	1
  5898  0029CA  6FE9               	movwf	___awmod@sign& (0+255),b
  5899  0029CC                     l3947:
  5900                           
  5901                           ; BSR set to: 0
  5902  0029CC  BE3A               	btfsc	(___awmod@divisor+1)^0,7,c
  5903  0029CE  EFED  F014         	goto	u4610
  5904  0029D2  EFEB  F014         	goto	u4611
  5905  0029D6                     u4611:
  5906  0029D6  EFF1  F014         	goto	l3951
  5907  0029DA                     u4610:
  5908  0029DA                     
  5909                           ; BSR set to: 0
  5910  0029DA  6C39               	negf	___awmod@divisor^0,c
  5911  0029DC  1E3A               	comf	(___awmod@divisor+1)^0,f,c
  5912  0029DE  B0D8               	btfsc	status,0,c
  5913  0029E0  2A3A               	incf	(___awmod@divisor+1)^0,f,c
  5914  0029E2                     l3951:
  5915                           
  5916                           ; BSR set to: 0
  5917  0029E2  5039               	movf	___awmod@divisor^0,w,c
  5918  0029E4  103A               	iorwf	(___awmod@divisor+1)^0,w,c
  5919  0029E6  B4D8               	btfsc	status,2,c
  5920  0029E8  EFF8  F014         	goto	u4621
  5921  0029EC  EFFA  F014         	goto	u4620
  5922  0029F0                     u4621:
  5923  0029F0  EF1E  F015         	goto	l3967
  5924  0029F4                     u4620:
  5925  0029F4                     
  5926                           ; BSR set to: 0
  5927  0029F4  0E01               	movlw	1
  5928  0029F6  6FE8               	movwf	___awmod@counter& (0+255),b
  5929  0029F8  EF02  F015         	goto	l3957
  5930  0029FC                     l3955:
  5931                           
  5932                           ; BSR set to: 0
  5933  0029FC  90D8               	bcf	status,0,c
  5934  0029FE  3639               	rlcf	___awmod@divisor^0,f,c
  5935  002A00  363A               	rlcf	(___awmod@divisor+1)^0,f,c
  5936  002A02  2BE8               	incf	___awmod@counter& (0+255),f,b
  5937  002A04                     l3957:
  5938                           
  5939                           ; BSR set to: 0
  5940  002A04  AE3A               	btfss	(___awmod@divisor+1)^0,7,c
  5941  002A06  EF07  F015         	goto	u4631
  5942  002A0A  EF09  F015         	goto	u4630
  5943  002A0E                     u4631:
  5944  002A0E  EFFE  F014         	goto	l3955
  5945  002A12                     u4630:
  5946  002A12                     l3959:
  5947                           
  5948                           ; BSR set to: 0
  5949  002A12  5039               	movf	___awmod@divisor^0,w,c
  5950  002A14  5C37               	subwf	___awmod@dividend^0,w,c
  5951  002A16  503A               	movf	(___awmod@divisor+1)^0,w,c
  5952  002A18  5838               	subwfb	(___awmod@dividend+1)^0,w,c
  5953  002A1A  A0D8               	btfss	status,0,c
  5954  002A1C  EF12  F015         	goto	u4641
  5955  002A20  EF14  F015         	goto	u4640
  5956  002A24                     u4641:
  5957  002A24  EF18  F015         	goto	l3963
  5958  002A28                     u4640:
  5959  002A28                     
  5960                           ; BSR set to: 0
  5961  002A28  5039               	movf	___awmod@divisor^0,w,c
  5962  002A2A  5E37               	subwf	___awmod@dividend^0,f,c
  5963  002A2C  503A               	movf	(___awmod@divisor+1)^0,w,c
  5964  002A2E  5A38               	subwfb	(___awmod@dividend+1)^0,f,c
  5965  002A30                     l3963:
  5966                           
  5967                           ; BSR set to: 0
  5968  002A30  90D8               	bcf	status,0,c
  5969  002A32  323A               	rrcf	(___awmod@divisor+1)^0,f,c
  5970  002A34  3239               	rrcf	___awmod@divisor^0,f,c
  5971  002A36                     
  5972                           ; BSR set to: 0
  5973  002A36  2FE8               	decfsz	___awmod@counter& (0+255),f,b
  5974  002A38  EF09  F015         	goto	l3959
  5975  002A3C                     l3967:
  5976                           
  5977                           ; BSR set to: 0
  5978  002A3C  51E9               	movf	___awmod@sign& (0+255),w,b
  5979  002A3E  B4D8               	btfsc	status,2,c
  5980  002A40  EF24  F015         	goto	u4651
  5981  002A44  EF26  F015         	goto	u4650
  5982  002A48                     u4651:
  5983  002A48  EF2A  F015         	goto	l3971
  5984  002A4C                     u4650:
  5985  002A4C                     
  5986                           ; BSR set to: 0
  5987  002A4C  6C37               	negf	___awmod@dividend^0,c
  5988  002A4E  1E38               	comf	(___awmod@dividend+1)^0,f,c
  5989  002A50  B0D8               	btfsc	status,0,c
  5990  002A52  2A38               	incf	(___awmod@dividend+1)^0,f,c
  5991  002A54                     l3971:
  5992                           
  5993                           ; BSR set to: 0
  5994  002A54  C037  F037         	movff	___awmod@dividend,?___awmod
  5995  002A58  C038  F038         	movff	___awmod@dividend+1,?___awmod+1
  5996  002A5C                     
  5997                           ; BSR set to: 0
  5998  002A5C  0012               	return		;funcret
  5999  002A5E                     __end_of___awmod:
  6000                           	opt callstack 0
  6001                           
  6002 ;; *************** function _ball *****************
  6003 ;; Defined at:
  6004 ;;		line 134 in file "ball.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  j               2   34[COMRAM] int 
  6009 ;;  i               2   32[COMRAM] int 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      void 
  6012 ;; Registers used:
  6013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6019 ;;      Params:         0       0       0       0       0       0       0
  6020 ;;      Locals:         4       0       0       0       0       0       0
  6021 ;;      Temps:          4       0       0       0       0       0       0
  6022 ;;      Totals:         8       0       0       0       0       0       0
  6023 ;;Total ram usage:        8 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    3
  6026 ;; This function calls:
  6027 ;;		_move_ball
  6028 ;; This function is called by:
  6029 ;;		_main
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text24
  6034  002830                     __ptext24:
  6035                           	opt callstack 0
  6036  002830                     _ball:
  6037                           	opt callstack 27
  6038  002830                     
  6039                           ;ball.c: 136:  int i,j;;ball.c: 149:  move_ball();
  6040  002830  ECA9  F00D         	call	_move_ball	;wreg free
  6041  002834                     
  6042                           ;ball.c: 150:  for(i=0;i<16;i++)
  6043  002834  0E00               	movlw	0
  6044  002836  6E22               	movwf	(ball@i+1)^0,c
  6045  002838  0E00               	movlw	0
  6046  00283A  6E21               	movwf	ball@i^0,c
  6047  00283C                     l4263:
  6048                           
  6049                           ;ball.c: 151:  {;ball.c: 152:   for(j=1;j<15;j++)
  6050  00283C  0E00               	movlw	0
  6051  00283E  6E24               	movwf	(ball@j+1)^0,c
  6052  002840  0E01               	movlw	1
  6053  002842  6E23               	movwf	ball@j^0,c
  6054  002844                     l4269:
  6055                           
  6056                           ;ball.c: 153:    LED[i][j] = 0;
  6057  002844  C021  F01D         	movff	ball@i,??_ball
  6058  002848  C022  F01E         	movff	ball@i+1,??_ball+1
  6059  00284C  3A1D               	swapf	??_ball^0,f,c
  6060  00284E  3A1E               	swapf	(??_ball+1)^0,f,c
  6061  002850  0EF0               	movlw	240
  6062  002852  161E               	andwf	(??_ball+1)^0,f,c
  6063  002854  501D               	movf	??_ball^0,w,c
  6064  002856  0B0F               	andlw	15
  6065  002858  121E               	iorwf	(??_ball+1)^0,f,c
  6066  00285A  0EF0               	movlw	240
  6067  00285C  161D               	andwf	??_ball^0,f,c
  6068  00285E  0E00               	movlw	low _LED
  6069  002860  6E1F               	movwf	(??_ball+2)^0,c
  6070  002862  0E03               	movlw	high _LED
  6071  002864  6E20               	movwf	(??_ball+3)^0,c
  6072  002866  501D               	movf	??_ball^0,w,c
  6073  002868  261F               	addwf	(??_ball+2)^0,f,c
  6074  00286A  501E               	movf	(??_ball+1)^0,w,c
  6075  00286C  2220               	addwfc	(??_ball+3)^0,f,c
  6076  00286E  5023               	movf	ball@j^0,w,c
  6077  002870  241F               	addwf	(??_ball+2)^0,w,c
  6078  002872  6ED9               	movwf	fsr2l,c
  6079  002874  5024               	movf	(ball@j+1)^0,w,c
  6080  002876  2020               	addwfc	(??_ball+3)^0,w,c
  6081  002878  6EDA               	movwf	fsr2h,c
  6082  00287A  0E00               	movlw	0
  6083  00287C  6EDF               	movwf	indf2,c
  6084  00287E  4A23               	infsnz	ball@j^0,f,c
  6085  002880  2A24               	incf	(ball@j+1)^0,f,c
  6086  002882  BE24               	btfsc	(ball@j+1)^0,7,c
  6087  002884  EF4D  F014         	goto	u5041
  6088  002888  5024               	movf	(ball@j+1)^0,w,c
  6089  00288A  E109               	bnz	u5040
  6090  00288C  0E0F               	movlw	15
  6091  00288E  5C23               	subwf	ball@j^0,w,c
  6092  002890  A0D8               	btfss	status,0,c
  6093  002892  EF4D  F014         	goto	u5041
  6094  002896  EF4F  F014         	goto	u5040
  6095  00289A                     u5041:
  6096  00289A  EF22  F014         	goto	l4269
  6097  00289E                     u5040:
  6098  00289E                     
  6099                           ;ball.c: 154:  }
  6100  00289E  4A21               	infsnz	ball@i^0,f,c
  6101  0028A0  2A22               	incf	(ball@i+1)^0,f,c
  6102  0028A2  BE22               	btfsc	(ball@i+1)^0,7,c
  6103  0028A4  EF5D  F014         	goto	u5051
  6104  0028A8  5022               	movf	(ball@i+1)^0,w,c
  6105  0028AA  E109               	bnz	u5050
  6106  0028AC  0E10               	movlw	16
  6107  0028AE  5C21               	subwf	ball@i^0,w,c
  6108  0028B0  A0D8               	btfss	status,0,c
  6109  0028B2  EF5D  F014         	goto	u5051
  6110  0028B6  EF5F  F014         	goto	u5050
  6111  0028BA                     u5051:
  6112  0028BA  EF1E  F014         	goto	l4263
  6113  0028BE                     u5050:
  6114  0028BE                     
  6115                           ;ball.c: 155:  LED[ball_y][ball_x] = 1;
  6116  0028BE  C066  F01D         	movff	_ball_y,??_ball
  6117  0028C2  C067  F01E         	movff	_ball_y+1,??_ball+1
  6118  0028C6  3A1D               	swapf	??_ball^0,f,c
  6119  0028C8  3A1E               	swapf	(??_ball+1)^0,f,c
  6120  0028CA  0EF0               	movlw	240
  6121  0028CC  161E               	andwf	(??_ball+1)^0,f,c
  6122  0028CE  501D               	movf	??_ball^0,w,c
  6123  0028D0  0B0F               	andlw	15
  6124  0028D2  121E               	iorwf	(??_ball+1)^0,f,c
  6125  0028D4  0EF0               	movlw	240
  6126  0028D6  161D               	andwf	??_ball^0,f,c
  6127  0028D8  0E00               	movlw	low _LED
  6128  0028DA  6E1F               	movwf	(??_ball+2)^0,c
  6129  0028DC  0E03               	movlw	high _LED
  6130  0028DE  6E20               	movwf	(??_ball+3)^0,c
  6131  0028E0  501D               	movf	??_ball^0,w,c
  6132  0028E2  261F               	addwf	(??_ball+2)^0,f,c
  6133  0028E4  501E               	movf	(??_ball+1)^0,w,c
  6134  0028E6  2220               	addwfc	(??_ball+3)^0,f,c
  6135  0028E8  5068               	movf	_ball_x^0,w,c
  6136  0028EA  241F               	addwf	(??_ball+2)^0,w,c
  6137  0028EC  6ED9               	movwf	fsr2l,c
  6138  0028EE  5069               	movf	(_ball_x+1)^0,w,c
  6139  0028F0  2020               	addwfc	(??_ball+3)^0,w,c
  6140  0028F2  6EDA               	movwf	fsr2h,c
  6141  0028F4  0E01               	movlw	1
  6142  0028F6  6EDF               	movwf	indf2,c
  6143  0028F8  0012               	return		;funcret
  6144  0028FA                     __end_of_ball:
  6145                           	opt callstack 0
  6146                           
  6147 ;; *************** function _move_ball *****************
  6148 ;; Defined at:
  6149 ;;		line 9 in file "ball.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;  rebound         2   26[COMRAM] int 
  6154 ;;  y_direct        2   24[COMRAM] int 
  6155 ;;  x_direct        2   22[COMRAM] int 
  6156 ;;  i               2    0        int 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6166 ;;      Params:         0       0       0       0       0       0       0
  6167 ;;      Locals:         6       0       0       0       0       0       0
  6168 ;;      Temps:          2       0       0       0       0       0       0
  6169 ;;      Totals:         8       0       0       0       0       0       0
  6170 ;;Total ram usage:        8 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    2
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_ball
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text25
  6181  001B52                     __ptext25:
  6182                           	opt callstack 0
  6183  001B52                     _move_ball:
  6184                           	opt callstack 27
  6185  001B52                     
  6186                           ;ball.c: 11:  int x_direct;;ball.c: 12:  int y_direct;;ball.c: 13:  int i;;ball.c: 15:  
      +                          if(ball_x > ball_last_x)
  6187  001B52  5068               	movf	_ball_x^0,w,c
  6188  001B54  5C64               	subwf	_ball_last_x^0,w,c
  6189  001B56  5065               	movf	(_ball_last_x+1)^0,w,c
  6190  001B58  0A80               	xorlw	128
  6191  001B5A  6E15               	movwf	??_move_ball^0,c
  6192  001B5C  5069               	movf	(_ball_x+1)^0,w,c
  6193  001B5E  0A80               	xorlw	128
  6194  001B60  5815               	subwfb	??_move_ball^0,w,c
  6195  001B62  B0D8               	btfsc	status,0,c
  6196  001B64  EFB6  F00D         	goto	u4441
  6197  001B68  EFB8  F00D         	goto	u4440
  6198  001B6C                     u4441:
  6199  001B6C  EFBE  F00D         	goto	l3873
  6200  001B70                     u4440:
  6201  001B70                     
  6202                           ;ball.c: 16:   x_direct = 1;
  6203  001B70  0E00               	movlw	0
  6204  001B72  6E18               	movwf	(move_ball@x_direct+1)^0,c
  6205  001B74  0E01               	movlw	1
  6206  001B76  6E17               	movwf	move_ball@x_direct^0,c
  6207  001B78  EFC2  F00D         	goto	l3875
  6208  001B7C                     l3873:
  6209                           
  6210                           ;ball.c: 18:   x_direct = 0;
  6211  001B7C  0E00               	movlw	0
  6212  001B7E  6E18               	movwf	(move_ball@x_direct+1)^0,c
  6213  001B80  0E00               	movlw	0
  6214  001B82  6E17               	movwf	move_ball@x_direct^0,c
  6215  001B84                     l3875:
  6216                           
  6217                           ;ball.c: 19:  if(ball_y > ball_last_y)
  6218  001B84  5066               	movf	_ball_y^0,w,c
  6219  001B86  5C62               	subwf	_ball_last_y^0,w,c
  6220  001B88  5063               	movf	(_ball_last_y+1)^0,w,c
  6221  001B8A  0A80               	xorlw	128
  6222  001B8C  6E15               	movwf	??_move_ball^0,c
  6223  001B8E  5067               	movf	(_ball_y+1)^0,w,c
  6224  001B90  0A80               	xorlw	128
  6225  001B92  5815               	subwfb	??_move_ball^0,w,c
  6226  001B94  B0D8               	btfsc	status,0,c
  6227  001B96  EFCF  F00D         	goto	u4451
  6228  001B9A  EFD1  F00D         	goto	u4450
  6229  001B9E                     u4451:
  6230  001B9E  EFD7  F00D         	goto	l3879
  6231  001BA2                     u4450:
  6232  001BA2                     
  6233                           ;ball.c: 20:   y_direct = 1;
  6234  001BA2  0E00               	movlw	0
  6235  001BA4  6E1A               	movwf	(move_ball@y_direct+1)^0,c
  6236  001BA6  0E01               	movlw	1
  6237  001BA8  6E19               	movwf	move_ball@y_direct^0,c
  6238  001BAA  EFDB  F00D         	goto	l3881
  6239  001BAE                     l3879:
  6240                           
  6241                           ;ball.c: 22:   y_direct = 0;
  6242  001BAE  0E00               	movlw	0
  6243  001BB0  6E1A               	movwf	(move_ball@y_direct+1)^0,c
  6244  001BB2  0E00               	movlw	0
  6245  001BB4  6E19               	movwf	move_ball@y_direct^0,c
  6246  001BB6                     l3881:
  6247                           
  6248                           ;ball.c: 24:  if(x_direct == 1)
  6249  001BB6  0417               	decf	move_ball@x_direct^0,w,c
  6250  001BB8  1018               	iorwf	(move_ball@x_direct+1)^0,w,c
  6251  001BBA  A4D8               	btfss	status,2,c
  6252  001BBC  EFE2  F00D         	goto	u4461
  6253  001BC0  EFE4  F00D         	goto	u4460
  6254  001BC4                     u4461:
  6255  001BC4  EFE8  F00D         	goto	l3885
  6256  001BC8                     u4460:
  6257  001BC8                     
  6258                           ;ball.c: 25:  {;ball.c: 26:   (ball_x)++;
  6259  001BC8  4A68               	infsnz	_ball_x^0,f,c
  6260  001BCA  2A69               	incf	(_ball_x+1)^0,f,c
  6261                           
  6262                           ;ball.c: 27:   (ball_last_x)++;
  6263  001BCC  4A64               	infsnz	_ball_last_x^0,f,c
  6264  001BCE  2A65               	incf	(_ball_last_x+1)^0,f,c
  6265  001BD0                     l3885:
  6266                           
  6267                           ;ball.c: 29:  if(x_direct == 0)
  6268  001BD0  5017               	movf	move_ball@x_direct^0,w,c
  6269  001BD2  1018               	iorwf	(move_ball@x_direct+1)^0,w,c
  6270  001BD4  A4D8               	btfss	status,2,c
  6271  001BD6  EFEF  F00D         	goto	u4471
  6272  001BDA  EFF1  F00D         	goto	u4470
  6273  001BDE                     u4471:
  6274  001BDE  EFF7  F00D         	goto	l3889
  6275  001BE2                     u4470:
  6276  001BE2                     
  6277                           ;ball.c: 30:  {;ball.c: 31:   (ball_x)--;
  6278  001BE2  0668               	decf	_ball_x^0,f,c
  6279  001BE4  A0D8               	btfss	status,0,c
  6280  001BE6  0669               	decf	(_ball_x+1)^0,f,c
  6281                           
  6282                           ;ball.c: 32:   (ball_last_x)--;
  6283  001BE8  0664               	decf	_ball_last_x^0,f,c
  6284  001BEA  A0D8               	btfss	status,0,c
  6285  001BEC  0665               	decf	(_ball_last_x+1)^0,f,c
  6286  001BEE                     l3889:
  6287                           
  6288                           ;ball.c: 34:     if(y_direct == 1)
  6289  001BEE  0419               	decf	move_ball@y_direct^0,w,c
  6290  001BF0  101A               	iorwf	(move_ball@y_direct+1)^0,w,c
  6291  001BF2  A4D8               	btfss	status,2,c
  6292  001BF4  EFFE  F00D         	goto	u4481
  6293  001BF8  EF00  F00E         	goto	u4480
  6294  001BFC                     u4481:
  6295  001BFC  EF04  F00E         	goto	l3893
  6296  001C00                     u4480:
  6297  001C00                     
  6298                           ;ball.c: 35:     {;ball.c: 36:         (ball_y)++;
  6299  001C00  4A66               	infsnz	_ball_y^0,f,c
  6300  001C02  2A67               	incf	(_ball_y+1)^0,f,c
  6301                           
  6302                           ;ball.c: 37:         (ball_last_y)++;
  6303  001C04  4A62               	infsnz	_ball_last_y^0,f,c
  6304  001C06  2A63               	incf	(_ball_last_y+1)^0,f,c
  6305  001C08                     l3893:
  6306                           
  6307                           ;ball.c: 39:     if(y_direct == 0)
  6308  001C08  5019               	movf	move_ball@y_direct^0,w,c
  6309  001C0A  101A               	iorwf	(move_ball@y_direct+1)^0,w,c
  6310  001C0C  A4D8               	btfss	status,2,c
  6311  001C0E  EF0B  F00E         	goto	u4491
  6312  001C12  EF0D  F00E         	goto	u4490
  6313  001C16                     u4491:
  6314  001C16  EF13  F00E         	goto	l3897
  6315  001C1A                     u4490:
  6316  001C1A                     
  6317                           ;ball.c: 40:     {;ball.c: 41:         (ball_y)--;
  6318  001C1A  0666               	decf	_ball_y^0,f,c
  6319  001C1C  A0D8               	btfss	status,0,c
  6320  001C1E  0667               	decf	(_ball_y+1)^0,f,c
  6321                           
  6322                           ;ball.c: 42:         (ball_last_y)--;
  6323  001C20  0662               	decf	_ball_last_y^0,f,c
  6324  001C22  A0D8               	btfss	status,0,c
  6325  001C24  0663               	decf	(_ball_last_y+1)^0,f,c
  6326  001C26                     l3897:
  6327                           
  6328                           ;ball.c: 45:  if(ball_y<0)
  6329  001C26  BE67               	btfsc	(_ball_y+1)^0,7,c
  6330  001C28  EF1A  F00E         	goto	u4500
  6331  001C2C  EF18  F00E         	goto	u4501
  6332  001C30                     u4501:
  6333  001C30  EF1E  F00E         	goto	l3901
  6334  001C34                     u4500:
  6335  001C34                     
  6336                           ;ball.c: 46:   ball_y = 1;
  6337  001C34  0E00               	movlw	0
  6338  001C36  6E67               	movwf	(_ball_y+1)^0,c
  6339  001C38  0E01               	movlw	1
  6340  001C3A  6E66               	movwf	_ball_y^0,c
  6341  001C3C                     l3901:
  6342                           
  6343                           ;ball.c: 47:  if(ball_y>15)
  6344  001C3C  BE67               	btfsc	(_ball_y+1)^0,7,c
  6345  001C3E  EF2A  F00E         	goto	u4511
  6346  001C42  5067               	movf	(_ball_y+1)^0,w,c
  6347  001C44  E109               	bnz	u4510
  6348  001C46  0E10               	movlw	16
  6349  001C48  5C66               	subwf	_ball_y^0,w,c
  6350  001C4A  A0D8               	btfss	status,0,c
  6351  001C4C  EF2A  F00E         	goto	u4511
  6352  001C50  EF2C  F00E         	goto	u4510
  6353  001C54                     u4511:
  6354  001C54  EF30  F00E         	goto	l401
  6355  001C58                     u4510:
  6356  001C58                     
  6357                           ;ball.c: 48:   ball_y = 14;
  6358  001C58  0E00               	movlw	0
  6359  001C5A  6E67               	movwf	(_ball_y+1)^0,c
  6360  001C5C  0E0E               	movlw	14
  6361  001C5E  6E66               	movwf	_ball_y^0,c
  6362  001C60                     l401:
  6363                           
  6364                           ;ball.c: 50:  int rebound = 0;
  6365  001C60  0E00               	movlw	0
  6366  001C62  6E1C               	movwf	(move_ball@rebound+1)^0,c
  6367  001C64  0E00               	movlw	0
  6368  001C66  6E1B               	movwf	move_ball@rebound^0,c
  6369  001C68                     
  6370                           ;ball.c: 51:  if(ball_x == 0)
  6371  001C68  5068               	movf	_ball_x^0,w,c
  6372  001C6A  1069               	iorwf	(_ball_x+1)^0,w,c
  6373  001C6C  A4D8               	btfss	status,2,c
  6374  001C6E  EF3B  F00E         	goto	u4521
  6375  001C72  EF3D  F00E         	goto	u4520
  6376  001C76                     u4521:
  6377  001C76  EF64  F00E         	goto	l3915
  6378  001C7A                     u4520:
  6379  001C7A                     
  6380                           ;ball.c: 52:  {;ball.c: 53:   if(left_board[ball_last_y] == 1)
  6381  001C7A  90D8               	bcf	status,0,c
  6382  001C7C  3462               	rlcf	_ball_last_y^0,w,c
  6383  001C7E  6ED9               	movwf	fsr2l,c
  6384  001C80  3463               	rlcf	(_ball_last_y+1)^0,w,c
  6385  001C82  6EDA               	movwf	fsr2h,c
  6386  001C84  0EA0               	movlw	low _left_board
  6387  001C86  26D9               	addwf	fsr2l,f,c
  6388  001C88  0E00               	movlw	high _left_board
  6389  001C8A  22DA               	addwfc	fsr2h,f,c
  6390  001C8C  04DE               	decf	postinc2,w,c
  6391  001C8E  10DE               	iorwf	postinc2,w,c
  6392  001C90  A4D8               	btfss	status,2,c
  6393  001C92  EF4D  F00E         	goto	u4531
  6394  001C96  EF4F  F00E         	goto	u4530
  6395  001C9A                     u4531:
  6396  001C9A  EF53  F00E         	goto	l3911
  6397  001C9E                     u4530:
  6398  001C9E                     
  6399                           ;ball.c: 54:    rebound = 1;
  6400  001C9E  0E00               	movlw	0
  6401  001CA0  6E1C               	movwf	(move_ball@rebound+1)^0,c
  6402  001CA2  0E01               	movlw	1
  6403  001CA4  6E1B               	movwf	move_ball@rebound^0,c
  6404  001CA6                     l3911:
  6405                           
  6406                           ;ball.c: 55:   if(rebound == 1)
  6407  001CA6  041B               	decf	move_ball@rebound^0,w,c
  6408  001CA8  101C               	iorwf	(move_ball@rebound+1)^0,w,c
  6409  001CAA  A4D8               	btfss	status,2,c
  6410  001CAC  EF5A  F00E         	goto	u4541
  6411  001CB0  EF5C  F00E         	goto	u4540
  6412  001CB4                     u4541:
  6413  001CB4  EF64  F00E         	goto	l3915
  6414  001CB8                     u4540:
  6415  001CB8                     
  6416                           ;ball.c: 56:   {;ball.c: 58:    ball_x = 2;
  6417  001CB8  0E00               	movlw	0
  6418  001CBA  6E69               	movwf	(_ball_x+1)^0,c
  6419  001CBC  0E02               	movlw	2
  6420  001CBE  6E68               	movwf	_ball_x^0,c
  6421                           
  6422                           ;ball.c: 59:    ball_last_x = 1;
  6423  001CC0  0E00               	movlw	0
  6424  001CC2  6E65               	movwf	(_ball_last_x+1)^0,c
  6425  001CC4  0E01               	movlw	1
  6426  001CC6  6E64               	movwf	_ball_last_x^0,c
  6427  001CC8                     l3915:
  6428                           
  6429                           ;ball.c: 62:  if(ball_x == 15)
  6430  001CC8  0E0F               	movlw	15
  6431  001CCA  1868               	xorwf	_ball_x^0,w,c
  6432  001CCC  1069               	iorwf	(_ball_x+1)^0,w,c
  6433  001CCE  A4D8               	btfss	status,2,c
  6434  001CD0  EF6C  F00E         	goto	u4551
  6435  001CD4  EF6E  F00E         	goto	u4550
  6436  001CD8                     u4551:
  6437  001CD8  EF95  F00E         	goto	l3925
  6438  001CDC                     u4550:
  6439  001CDC                     
  6440                           ;ball.c: 63:     {;ball.c: 64:         if(right_board[ball_last_y] == 1)
  6441  001CDC  90D8               	bcf	status,0,c
  6442  001CDE  3462               	rlcf	_ball_last_y^0,w,c
  6443  001CE0  6ED9               	movwf	fsr2l,c
  6444  001CE2  3463               	rlcf	(_ball_last_y+1)^0,w,c
  6445  001CE4  6EDA               	movwf	fsr2h,c
  6446  001CE6  0E80               	movlw	low _right_board
  6447  001CE8  26D9               	addwf	fsr2l,f,c
  6448  001CEA  0E00               	movlw	high _right_board
  6449  001CEC  22DA               	addwfc	fsr2h,f,c
  6450  001CEE  04DE               	decf	postinc2,w,c
  6451  001CF0  10DE               	iorwf	postinc2,w,c
  6452  001CF2  A4D8               	btfss	status,2,c
  6453  001CF4  EF7E  F00E         	goto	u4561
  6454  001CF8  EF80  F00E         	goto	u4560
  6455  001CFC                     u4561:
  6456  001CFC  EF84  F00E         	goto	l3921
  6457  001D00                     u4560:
  6458  001D00                     
  6459                           ;ball.c: 65:             rebound = 1;
  6460  001D00  0E00               	movlw	0
  6461  001D02  6E1C               	movwf	(move_ball@rebound+1)^0,c
  6462  001D04  0E01               	movlw	1
  6463  001D06  6E1B               	movwf	move_ball@rebound^0,c
  6464  001D08                     l3921:
  6465                           
  6466                           ;ball.c: 66:         if(rebound == 1)
  6467  001D08  041B               	decf	move_ball@rebound^0,w,c
  6468  001D0A  101C               	iorwf	(move_ball@rebound+1)^0,w,c
  6469  001D0C  A4D8               	btfss	status,2,c
  6470  001D0E  EF8B  F00E         	goto	u4571
  6471  001D12  EF8D  F00E         	goto	u4570
  6472  001D16                     u4571:
  6473  001D16  EF95  F00E         	goto	l3925
  6474  001D1A                     u4570:
  6475  001D1A                     
  6476                           ;ball.c: 67:         {;ball.c: 69:             ball_x = 13;
  6477  001D1A  0E00               	movlw	0
  6478  001D1C  6E69               	movwf	(_ball_x+1)^0,c
  6479  001D1E  0E0D               	movlw	13
  6480  001D20  6E68               	movwf	_ball_x^0,c
  6481                           
  6482                           ;ball.c: 70:             ball_last_x = 14;
  6483  001D22  0E00               	movlw	0
  6484  001D24  6E65               	movwf	(_ball_last_x+1)^0,c
  6485  001D26  0E0E               	movlw	14
  6486  001D28  6E64               	movwf	_ball_last_x^0,c
  6487  001D2A                     l3925:
  6488                           
  6489                           ;ball.c: 73:     if(ball_y<0)
  6490  001D2A  BE67               	btfsc	(_ball_y+1)^0,7,c
  6491  001D2C  EF9C  F00E         	goto	u4580
  6492  001D30  EF9A  F00E         	goto	u4581
  6493  001D34                     u4581:
  6494  001D34  EFA0  F00E         	goto	l3929
  6495  001D38                     u4580:
  6496  001D38                     
  6497                           ;ball.c: 74:         ball_y = 1;
  6498  001D38  0E00               	movlw	0
  6499  001D3A  6E67               	movwf	(_ball_y+1)^0,c
  6500  001D3C  0E01               	movlw	1
  6501  001D3E  6E66               	movwf	_ball_y^0,c
  6502  001D40                     l3929:
  6503                           
  6504                           ;ball.c: 75:     if(ball_y>15)
  6505  001D40  BE67               	btfsc	(_ball_y+1)^0,7,c
  6506  001D42  EFAC  F00E         	goto	u4591
  6507  001D46  5067               	movf	(_ball_y+1)^0,w,c
  6508  001D48  E109               	bnz	u4590
  6509  001D4A  0E10               	movlw	16
  6510  001D4C  5C66               	subwf	_ball_y^0,w,c
  6511  001D4E  A0D8               	btfss	status,0,c
  6512  001D50  EFAC  F00E         	goto	u4591
  6513  001D54  EFAE  F00E         	goto	u4590
  6514  001D58                     u4591:
  6515  001D58  EFB2  F00E         	goto	l410
  6516  001D5C                     u4590:
  6517  001D5C                     
  6518                           ;ball.c: 76:         ball_y = 14;
  6519  001D5C  0E00               	movlw	0
  6520  001D5E  6E67               	movwf	(_ball_y+1)^0,c
  6521  001D60  0E0E               	movlw	14
  6522  001D62  6E66               	movwf	_ball_y^0,c
  6523  001D64                     l410:
  6524  001D64  0012               	return		;funcret
  6525  001D66                     __end_of_move_ball:
  6526                           	opt callstack 0
  6527                           
  6528 ;; *************** function ___xxtofl *****************
  6529 ;; Defined at:
  6530 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  sign            1    wreg     unsigned char 
  6533 ;;  val             4   20[COMRAM] long 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  sign            1   28[COMRAM] unsigned char 
  6536 ;;  arg             4   30[COMRAM] unsigned long 
  6537 ;;  exp             1   29[COMRAM] unsigned char 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  4   20[COMRAM] unsigned char 
  6540 ;; Registers used:
  6541 ;;		wreg, status,2, status,0
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6547 ;;      Params:         4       0       0       0       0       0       0
  6548 ;;      Locals:         6       0       0       0       0       0       0
  6549 ;;      Temps:          4       0       0       0       0       0       0
  6550 ;;      Totals:        14       0       0       0       0       0       0
  6551 ;;Total ram usage:       14 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    2
  6554 ;; This function calls:
  6555 ;;		Nothing
  6556 ;; This function is called by:
  6557 ;;		_main
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text26
  6562  001F48                     __ptext26:
  6563                           	opt callstack 0
  6564  001F48                     ___xxtofl:
  6565                           	opt callstack 28
  6566                           
  6567                           ;incstack = 0
  6568                           ;___xxtofl@sign stored from wreg
  6569  001F48  6E1D               	movwf	___xxtofl@sign^0,c
  6570  001F4A  501D               	movf	___xxtofl@sign^0,w,c
  6571  001F4C  B4D8               	btfsc	status,2,c
  6572  001F4E  EFAB  F00F         	goto	u5361
  6573  001F52  EFAD  F00F         	goto	u5360
  6574  001F56                     u5361:
  6575  001F56  EFCF  F00F         	goto	l1109
  6576  001F5A                     u5360:
  6577  001F5A  BE18               	btfsc	(___xxtofl@val+3)^0,7,c
  6578  001F5C  EFB4  F00F         	goto	u5370
  6579  001F60  EFB2  F00F         	goto	u5371
  6580  001F64                     u5371:
  6581  001F64  EFCF  F00F         	goto	l1109
  6582  001F68                     u5370:
  6583  001F68  C015  F019         	movff	___xxtofl@val,??___xxtofl
  6584  001F6C  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
  6585  001F70  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
  6586  001F74  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
  6587  001F78  1E19               	comf	??___xxtofl^0,f,c
  6588  001F7A  1E1A               	comf	(??___xxtofl+1)^0,f,c
  6589  001F7C  1E1B               	comf	(??___xxtofl+2)^0,f,c
  6590  001F7E  1E1C               	comf	(??___xxtofl+3)^0,f,c
  6591  001F80  2A19               	incf	??___xxtofl^0,f,c
  6592  001F82  0E00               	movlw	0
  6593  001F84  221A               	addwfc	(??___xxtofl+1)^0,f,c
  6594  001F86  221B               	addwfc	(??___xxtofl+2)^0,f,c
  6595  001F88  221C               	addwfc	(??___xxtofl+3)^0,f,c
  6596  001F8A  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
  6597  001F8E  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
  6598  001F92  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
  6599  001F96  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
  6600  001F9A  EFD7  F00F         	goto	l4469
  6601  001F9E                     l1109:
  6602  001F9E  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
  6603  001FA2  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6604  001FA6  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6605  001FAA  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6606  001FAE                     l4469:
  6607  001FAE  5015               	movf	___xxtofl@val^0,w,c
  6608  001FB0  1016               	iorwf	(___xxtofl@val+1)^0,w,c
  6609  001FB2  1017               	iorwf	(___xxtofl@val+2)^0,w,c
  6610  001FB4  1018               	iorwf	(___xxtofl@val+3)^0,w,c
  6611  001FB6  A4D8               	btfss	status,2,c
  6612  001FB8  EFE0  F00F         	goto	u5381
  6613  001FBC  EFE2  F00F         	goto	u5380
  6614  001FC0                     u5381:
  6615  001FC0  EFEC  F00F         	goto	l4475
  6616  001FC4                     u5380:
  6617  001FC4  0E00               	movlw	0
  6618  001FC6  6E15               	movwf	?___xxtofl^0,c
  6619  001FC8  0E00               	movlw	0
  6620  001FCA  6E16               	movwf	(?___xxtofl+1)^0,c
  6621  001FCC  0E00               	movlw	0
  6622  001FCE  6E17               	movwf	(?___xxtofl+2)^0,c
  6623  001FD0  0E00               	movlw	0
  6624  001FD2  6E18               	movwf	(?___xxtofl+3)^0,c
  6625  001FD4  EF7D  F010         	goto	l1112
  6626  001FD8                     l4475:
  6627  001FD8  0E96               	movlw	150
  6628  001FDA  6E1E               	movwf	___xxtofl@exp^0,c
  6629  001FDC  EFF6  F00F         	goto	l4479
  6630  001FE0                     l4477:
  6631  001FE0  2A1E               	incf	___xxtofl@exp^0,f,c
  6632  001FE2  90D8               	bcf	status,0,c
  6633  001FE4  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
  6634  001FE6  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
  6635  001FE8  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
  6636  001FEA  321F               	rrcf	___xxtofl@arg^0,f,c
  6637  001FEC                     l4479:
  6638  001FEC  0E00               	movlw	0
  6639  001FEE  141F               	andwf	___xxtofl@arg^0,w,c
  6640  001FF0  6E19               	movwf	??___xxtofl^0,c
  6641  001FF2  0E00               	movlw	0
  6642  001FF4  1420               	andwf	(___xxtofl@arg+1)^0,w,c
  6643  001FF6  6E1A               	movwf	(??___xxtofl+1)^0,c
  6644  001FF8  0E00               	movlw	0
  6645  001FFA  1421               	andwf	(___xxtofl@arg+2)^0,w,c
  6646  001FFC  6E1B               	movwf	(??___xxtofl+2)^0,c
  6647  001FFE  0EFE               	movlw	254
  6648  002000  1422               	andwf	(___xxtofl@arg+3)^0,w,c
  6649  002002  6E1C               	movwf	(??___xxtofl+3)^0,c
  6650  002004  5019               	movf	??___xxtofl^0,w,c
  6651  002006  101A               	iorwf	(??___xxtofl+1)^0,w,c
  6652  002008  101B               	iorwf	(??___xxtofl+2)^0,w,c
  6653  00200A  101C               	iorwf	(??___xxtofl+3)^0,w,c
  6654  00200C  A4D8               	btfss	status,2,c
  6655  00200E  EF0B  F010         	goto	u5391
  6656  002012  EF0D  F010         	goto	u5390
  6657  002016                     u5391:
  6658  002016  EFF0  F00F         	goto	l4477
  6659  00201A                     u5390:
  6660  00201A  EF1B  F010         	goto	l1116
  6661  00201E                     l4481:
  6662  00201E  2A1E               	incf	___xxtofl@exp^0,f,c
  6663  002020  0E01               	movlw	1
  6664  002022  261F               	addwf	___xxtofl@arg^0,f,c
  6665  002024  0E00               	movlw	0
  6666  002026  2220               	addwfc	(___xxtofl@arg+1)^0,f,c
  6667  002028  2221               	addwfc	(___xxtofl@arg+2)^0,f,c
  6668  00202A  2222               	addwfc	(___xxtofl@arg+3)^0,f,c
  6669  00202C  90D8               	bcf	status,0,c
  6670  00202E  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
  6671  002030  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
  6672  002032  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
  6673  002034  321F               	rrcf	___xxtofl@arg^0,f,c
  6674  002036                     l1116:
  6675  002036  0E00               	movlw	0
  6676  002038  141F               	andwf	___xxtofl@arg^0,w,c
  6677  00203A  6E19               	movwf	??___xxtofl^0,c
  6678  00203C  0E00               	movlw	0
  6679  00203E  1420               	andwf	(___xxtofl@arg+1)^0,w,c
  6680  002040  6E1A               	movwf	(??___xxtofl+1)^0,c
  6681  002042  0E00               	movlw	0
  6682  002044  1421               	andwf	(___xxtofl@arg+2)^0,w,c
  6683  002046  6E1B               	movwf	(??___xxtofl+2)^0,c
  6684  002048  0EFF               	movlw	255
  6685  00204A  1422               	andwf	(___xxtofl@arg+3)^0,w,c
  6686  00204C  6E1C               	movwf	(??___xxtofl+3)^0,c
  6687  00204E  5019               	movf	??___xxtofl^0,w,c
  6688  002050  101A               	iorwf	(??___xxtofl+1)^0,w,c
  6689  002052  101B               	iorwf	(??___xxtofl+2)^0,w,c
  6690  002054  101C               	iorwf	(??___xxtofl+3)^0,w,c
  6691  002056  A4D8               	btfss	status,2,c
  6692  002058  EF30  F010         	goto	u5401
  6693  00205C  EF32  F010         	goto	u5400
  6694  002060                     u5401:
  6695  002060  EF0F  F010         	goto	l4481
  6696  002064                     u5400:
  6697  002064  EF3A  F010         	goto	l4489
  6698  002068                     l4487:
  6699  002068  061E               	decf	___xxtofl@exp^0,f,c
  6700  00206A  90D8               	bcf	status,0,c
  6701  00206C  361F               	rlcf	___xxtofl@arg^0,f,c
  6702  00206E  3620               	rlcf	(___xxtofl@arg+1)^0,f,c
  6703  002070  3621               	rlcf	(___xxtofl@arg+2)^0,f,c
  6704  002072  3622               	rlcf	(___xxtofl@arg+3)^0,f,c
  6705  002074                     l4489:
  6706  002074  BE21               	btfsc	(___xxtofl@arg+2)^0,7,c
  6707  002076  EF3F  F010         	goto	u5411
  6708  00207A  EF41  F010         	goto	u5410
  6709  00207E                     u5411:
  6710  00207E  EF49  F010         	goto	l1123
  6711  002082                     u5410:
  6712  002082  0E02               	movlw	2
  6713  002084  601E               	cpfslt	___xxtofl@exp^0,c
  6714  002086  EF47  F010         	goto	u5421
  6715  00208A  EF49  F010         	goto	u5420
  6716  00208E                     u5421:
  6717  00208E  EF34  F010         	goto	l4487
  6718  002092                     u5420:
  6719  002092                     l1123:
  6720  002092  B01E               	btfsc	___xxtofl@exp^0,0,c
  6721  002094  EF4E  F010         	goto	u5431
  6722  002098  EF50  F010         	goto	u5430
  6723  00209C                     u5431:
  6724  00209C  EF51  F010         	goto	l4495
  6725  0020A0                     u5430:
  6726  0020A0  9E21               	bcf	(___xxtofl@arg+2)^0,7,c
  6727  0020A2                     l4495:
  6728  0020A2  90D8               	bcf	status,0,c
  6729  0020A4  321E               	rrcf	___xxtofl@exp^0,f,c
  6730  0020A6  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
  6731  0020AA  6A1A               	clrf	(??___xxtofl+1)^0,c
  6732  0020AC  6A1B               	clrf	(??___xxtofl+2)^0,c
  6733  0020AE  6A1C               	clrf	(??___xxtofl+3)^0,c
  6734  0020B0  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
  6735  0020B4  6A1B               	clrf	(??___xxtofl+2)^0,c
  6736  0020B6  6A1A               	clrf	(??___xxtofl+1)^0,c
  6737  0020B8  6A19               	clrf	??___xxtofl^0,c
  6738  0020BA  5019               	movf	??___xxtofl^0,w,c
  6739  0020BC  121F               	iorwf	___xxtofl@arg^0,f,c
  6740  0020BE  501A               	movf	(??___xxtofl+1)^0,w,c
  6741  0020C0  1220               	iorwf	(___xxtofl@arg+1)^0,f,c
  6742  0020C2  501B               	movf	(??___xxtofl+2)^0,w,c
  6743  0020C4  1221               	iorwf	(___xxtofl@arg+2)^0,f,c
  6744  0020C6  501C               	movf	(??___xxtofl+3)^0,w,c
  6745  0020C8  1222               	iorwf	(___xxtofl@arg+3)^0,f,c
  6746  0020CA  501D               	movf	___xxtofl@sign^0,w,c
  6747  0020CC  B4D8               	btfsc	status,2,c
  6748  0020CE  EF6B  F010         	goto	u5441
  6749  0020D2  EF6D  F010         	goto	u5440
  6750  0020D6                     u5441:
  6751  0020D6  EF75  F010         	goto	l4505
  6752  0020DA                     u5440:
  6753  0020DA  BE18               	btfsc	(___xxtofl@val+3)^0,7,c
  6754  0020DC  EF74  F010         	goto	u5450
  6755  0020E0  EF72  F010         	goto	u5451
  6756  0020E4                     u5451:
  6757  0020E4  EF75  F010         	goto	l4505
  6758  0020E8                     u5450:
  6759  0020E8  8E22               	bsf	(___xxtofl@arg+3)^0,7,c
  6760  0020EA                     l4505:
  6761  0020EA  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
  6762  0020EE  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
  6763  0020F2  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
  6764  0020F6  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
  6765  0020FA                     l1112:
  6766  0020FA  0012               	return		;funcret
  6767  0020FC                     __end_of___xxtofl:
  6768                           	opt callstack 0
  6769                           
  6770 ;; *************** function ___fltol *****************
  6771 ;; Defined at:
  6772 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  f1              4   46[COMRAM] unsigned char 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  exp1            1   55[COMRAM] unsigned char 
  6777 ;;  sign1           1   54[COMRAM] unsigned char 
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  4   46[COMRAM] long 
  6780 ;; Registers used:
  6781 ;;		wreg, status,2, status,0
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6787 ;;      Params:         4       0       0       0       0       0       0
  6788 ;;      Locals:         2       0       0       0       0       0       0
  6789 ;;      Temps:          4       0       0       0       0       0       0
  6790 ;;      Totals:        10       0       0       0       0       0       0
  6791 ;;Total ram usage:       10 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:    2
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_main
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text27
  6802  002480                     __ptext27:
  6803                           	opt callstack 0
  6804  002480                     ___fltol:
  6805                           	opt callstack 28
  6806  002480  3431               	rlcf	(___fltol@f1+2)^0,w,c
  6807  002482  3432               	rlcf	(___fltol@f1+3)^0,w,c
  6808  002484  6E38               	movwf	___fltol@exp1^0,c
  6809  002486  5038               	movf	___fltol@exp1^0,w,c
  6810  002488  A4D8               	btfss	status,2,c
  6811  00248A  EF49  F012         	goto	u5291
  6812  00248E  EF4B  F012         	goto	u5290
  6813  002492                     u5291:
  6814  002492  EF55  F012         	goto	l4425
  6815  002496                     u5290:
  6816  002496                     l4421:
  6817  002496  0E00               	movlw	0
  6818  002498  6E2F               	movwf	?___fltol^0,c
  6819  00249A  0E00               	movlw	0
  6820  00249C  6E30               	movwf	(?___fltol+1)^0,c
  6821  00249E  0E00               	movlw	0
  6822  0024A0  6E31               	movwf	(?___fltol+2)^0,c
  6823  0024A2  0E00               	movlw	0
  6824  0024A4  6E32               	movwf	(?___fltol+3)^0,c
  6825  0024A6  EFC2  F012         	goto	l751
  6826  0024AA                     l4425:
  6827  0024AA  C02F  F033         	movff	___fltol@f1,??___fltol
  6828  0024AE  C030  F034         	movff	___fltol@f1+1,??___fltol+1
  6829  0024B2  C031  F035         	movff	___fltol@f1+2,??___fltol+2
  6830  0024B6  C032  F036         	movff	___fltol@f1+3,??___fltol+3
  6831  0024BA  0E20               	movlw	32
  6832  0024BC  EF65  F012         	goto	u5300
  6833  0024C0                     u5305:
  6834  0024C0  90D8               	bcf	status,0,c
  6835  0024C2  3236               	rrcf	(??___fltol+3)^0,f,c
  6836  0024C4  3235               	rrcf	(??___fltol+2)^0,f,c
  6837  0024C6  3234               	rrcf	(??___fltol+1)^0,f,c
  6838  0024C8  3233               	rrcf	??___fltol^0,f,c
  6839  0024CA                     u5300:
  6840  0024CA  2EE8               	decfsz	wreg,f,c
  6841  0024CC  EF60  F012         	goto	u5305
  6842  0024D0  5033               	movf	??___fltol^0,w,c
  6843  0024D2  6E37               	movwf	___fltol@sign1^0,c
  6844  0024D4  8E31               	bsf	(___fltol@f1+2)^0,7,c
  6845  0024D6  0EFF               	movlw	255
  6846  0024D8  162F               	andwf	___fltol@f1^0,f,c
  6847  0024DA  0EFF               	movlw	255
  6848  0024DC  1630               	andwf	(___fltol@f1+1)^0,f,c
  6849  0024DE  0EFF               	movlw	255
  6850  0024E0  1631               	andwf	(___fltol@f1+2)^0,f,c
  6851  0024E2  0E00               	movlw	0
  6852  0024E4  1632               	andwf	(___fltol@f1+3)^0,f,c
  6853  0024E6  0E96               	movlw	150
  6854  0024E8  5E38               	subwf	___fltol@exp1^0,f,c
  6855  0024EA  BE38               	btfsc	___fltol@exp1^0,7,c
  6856  0024EC  EF7C  F012         	goto	u5310
  6857  0024F0  EF7A  F012         	goto	u5311
  6858  0024F4                     u5311:
  6859  0024F4  EF92  F012         	goto	l4445
  6860  0024F8                     u5310:
  6861  0024F8  5038               	movf	___fltol@exp1^0,w,c
  6862  0024FA  0A80               	xorlw	128
  6863  0024FC  0F97               	addlw	151
  6864  0024FE  B0D8               	btfsc	status,0,c
  6865  002500  EF84  F012         	goto	u5321
  6866  002504  EF86  F012         	goto	u5320
  6867  002508                     u5321:
  6868  002508  EF88  F012         	goto	l4441
  6869  00250C                     u5320:
  6870  00250C  EF4B  F012         	goto	l4421
  6871  002510                     l4441:
  6872  002510  90D8               	bcf	status,0,c
  6873  002512  3232               	rrcf	(___fltol@f1+3)^0,f,c
  6874  002514  3231               	rrcf	(___fltol@f1+2)^0,f,c
  6875  002516  3230               	rrcf	(___fltol@f1+1)^0,f,c
  6876  002518  322F               	rrcf	___fltol@f1^0,f,c
  6877  00251A  3E38               	incfsz	___fltol@exp1^0,f,c
  6878  00251C  EF88  F012         	goto	l4441
  6879  002520  EFAA  F012         	goto	l4455
  6880  002524                     l4445:
  6881  002524  0E1F               	movlw	31
  6882  002526  6438               	cpfsgt	___fltol@exp1^0,c
  6883  002528  EF98  F012         	goto	u5331
  6884  00252C  EF9A  F012         	goto	u5330
  6885  002530                     u5331:
  6886  002530  EFA2  F012         	goto	l4453
  6887  002534                     u5330:
  6888  002534  EF4B  F012         	goto	l4421
  6889  002538                     l4451:
  6890  002538  90D8               	bcf	status,0,c
  6891  00253A  362F               	rlcf	___fltol@f1^0,f,c
  6892  00253C  3630               	rlcf	(___fltol@f1+1)^0,f,c
  6893  00253E  3631               	rlcf	(___fltol@f1+2)^0,f,c
  6894  002540  3632               	rlcf	(___fltol@f1+3)^0,f,c
  6895  002542  0638               	decf	___fltol@exp1^0,f,c
  6896  002544                     l4453:
  6897  002544  5038               	movf	___fltol@exp1^0,w,c
  6898  002546  A4D8               	btfss	status,2,c
  6899  002548  EFA8  F012         	goto	u5341
  6900  00254C  EFAA  F012         	goto	u5340
  6901  002550                     u5341:
  6902  002550  EF9C  F012         	goto	l4451
  6903  002554                     u5340:
  6904  002554                     l4455:
  6905  002554  5037               	movf	___fltol@sign1^0,w,c
  6906  002556  B4D8               	btfsc	status,2,c
  6907  002558  EFB0  F012         	goto	u5351
  6908  00255C  EFB2  F012         	goto	u5350
  6909  002560                     u5351:
  6910  002560  EFBA  F012         	goto	l4459
  6911  002564                     u5350:
  6912  002564  1E32               	comf	(___fltol@f1+3)^0,f,c
  6913  002566  1E31               	comf	(___fltol@f1+2)^0,f,c
  6914  002568  1E30               	comf	(___fltol@f1+1)^0,f,c
  6915  00256A  6C2F               	negf	___fltol@f1^0,c
  6916  00256C  0E00               	movlw	0
  6917  00256E  2230               	addwfc	(___fltol@f1+1)^0,f,c
  6918  002570  2231               	addwfc	(___fltol@f1+2)^0,f,c
  6919  002572  2232               	addwfc	(___fltol@f1+3)^0,f,c
  6920  002574                     l4459:
  6921  002574  C02F  F02F         	movff	___fltol@f1,?___fltol
  6922  002578  C030  F030         	movff	___fltol@f1+1,?___fltol+1
  6923  00257C  C031  F031         	movff	___fltol@f1+2,?___fltol+2
  6924  002580  C032  F032         	movff	___fltol@f1+3,?___fltol+3
  6925  002584                     l751:
  6926  002584  0012               	return		;funcret
  6927  002586                     __end_of___fltol:
  6928                           	opt callstack 0
  6929                           
  6930 ;; *************** function ___fldiv *****************
  6931 ;; Defined at:
  6932 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  b               4   34[COMRAM] long 
  6935 ;;  a               4   38[COMRAM] long 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  grs             4    7[BANK0 ] unsigned long 
  6938 ;;  rem             4    0[BANK0 ] unsigned long 
  6939 ;;  new_exp         2    5[BANK0 ] short 
  6940 ;;  aexp            1   12[BANK0 ] unsigned char 
  6941 ;;  bexp            1   11[BANK0 ] unsigned char 
  6942 ;;  sign            1    4[BANK0 ] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  4   34[COMRAM] unsigned char 
  6945 ;; Registers used:
  6946 ;;		wreg, status,2, status,0
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6952 ;;      Params:         8       0       0       0       0       0       0
  6953 ;;      Locals:         0      13       0       0       0       0       0
  6954 ;;      Temps:          4       0       0       0       0       0       0
  6955 ;;      Totals:        12      13       0       0       0       0       0
  6956 ;;Total ram usage:       25 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    2
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_main
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text28
  6967  000C02                     __ptext28:
  6968                           	opt callstack 0
  6969  000C02                     ___fldiv:
  6970                           	opt callstack 28
  6971  000C02  5026               	movf	(___fldiv@b+3)^0,w,c
  6972  000C04  0B80               	andlw	128
  6973  000C06  0100               	movlb	0	; () banked
  6974  000C08  6FEC               	movwf	___fldiv@sign& (0+255),b
  6975  000C0A  5026               	movf	(___fldiv@b+3)^0,w,c
  6976  000C0C  2426               	addwf	(___fldiv@b+3)^0,w,c
  6977  000C0E  6FF3               	movwf	___fldiv@bexp& (0+255),b
  6978  000C10                     
  6979                           ; BSR set to: 0
  6980  000C10  AE25               	btfss	(___fldiv@b+2)^0,7,c
  6981  000C12  EF0D  F006         	goto	u5061
  6982  000C16  EF0F  F006         	goto	u5060
  6983  000C1A                     u5061:
  6984  000C1A  EF10  F006         	goto	l4287
  6985  000C1E                     u5060:
  6986  000C1E                     
  6987                           ; BSR set to: 0
  6988  000C1E  81F3               	bsf	___fldiv@bexp& (0+255),0,b
  6989  000C20                     l4287:
  6990                           
  6991                           ; BSR set to: 0
  6992  000C20  51F3               	movf	___fldiv@bexp& (0+255),w,b
  6993  000C22  B4D8               	btfsc	status,2,c
  6994  000C24  EF16  F006         	goto	u5071
  6995  000C28  EF18  F006         	goto	u5070
  6996  000C2C                     u5071:
  6997  000C2C  EF2D  F006         	goto	l4297
  6998  000C30                     u5070:
  6999  000C30                     
  7000                           ; BSR set to: 0
  7001  000C30  29F3               	incf	___fldiv@bexp& (0+255),w,b
  7002  000C32  A4D8               	btfss	status,2,c
  7003  000C34  EF1E  F006         	goto	u5081
  7004  000C38  EF20  F006         	goto	u5080
  7005  000C3C                     u5081:
  7006  000C3C  EF28  F006         	goto	l4293
  7007  000C40                     u5080:
  7008  000C40                     
  7009                           ; BSR set to: 0
  7010  000C40  0E00               	movlw	0
  7011  000C42  6E23               	movwf	___fldiv@b^0,c
  7012  000C44  0E00               	movlw	0
  7013  000C46  6E24               	movwf	(___fldiv@b+1)^0,c
  7014  000C48  0E00               	movlw	0
  7015  000C4A  6E25               	movwf	(___fldiv@b+2)^0,c
  7016  000C4C  0E00               	movlw	0
  7017  000C4E  6E26               	movwf	(___fldiv@b+3)^0,c
  7018  000C50                     l4293:
  7019                           
  7020                           ; BSR set to: 0
  7021  000C50  8E25               	bsf	(___fldiv@b+2)^0,7,c
  7022  000C52                     
  7023                           ; BSR set to: 0
  7024  000C52  0E00               	movlw	0
  7025  000C54  6E26               	movwf	(___fldiv@b+3)^0,c
  7026  000C56  EF35  F006         	goto	l4299
  7027  000C5A                     l4297:
  7028                           
  7029                           ; BSR set to: 0
  7030  000C5A  0E00               	movlw	0
  7031  000C5C  6E23               	movwf	___fldiv@b^0,c
  7032  000C5E  0E00               	movlw	0
  7033  000C60  6E24               	movwf	(___fldiv@b+1)^0,c
  7034  000C62  0E00               	movlw	0
  7035  000C64  6E25               	movwf	(___fldiv@b+2)^0,c
  7036  000C66  0E00               	movlw	0
  7037  000C68  6E26               	movwf	(___fldiv@b+3)^0,c
  7038  000C6A                     l4299:
  7039                           
  7040                           ; BSR set to: 0
  7041  000C6A  502A               	movf	(___fldiv@a+3)^0,w,c
  7042  000C6C  0B80               	andlw	128
  7043  000C6E  1BEC               	xorwf	___fldiv@sign& (0+255),f,b
  7044  000C70                     
  7045                           ; BSR set to: 0
  7046  000C70  502A               	movf	(___fldiv@a+3)^0,w,c
  7047  000C72  242A               	addwf	(___fldiv@a+3)^0,w,c
  7048  000C74  6FF4               	movwf	___fldiv@aexp& (0+255),b
  7049  000C76                     
  7050                           ; BSR set to: 0
  7051  000C76  AE29               	btfss	(___fldiv@a+2)^0,7,c
  7052  000C78  EF40  F006         	goto	u5091
  7053  000C7C  EF42  F006         	goto	u5090
  7054  000C80                     u5091:
  7055  000C80  EF43  F006         	goto	l4307
  7056  000C84                     u5090:
  7057  000C84                     
  7058                           ; BSR set to: 0
  7059  000C84  81F4               	bsf	___fldiv@aexp& (0+255),0,b
  7060  000C86                     l4307:
  7061                           
  7062                           ; BSR set to: 0
  7063  000C86  51F4               	movf	___fldiv@aexp& (0+255),w,b
  7064  000C88  B4D8               	btfsc	status,2,c
  7065  000C8A  EF49  F006         	goto	u5101
  7066  000C8E  EF4B  F006         	goto	u5100
  7067  000C92                     u5101:
  7068  000C92  EF60  F006         	goto	l4317
  7069  000C96                     u5100:
  7070  000C96                     
  7071                           ; BSR set to: 0
  7072  000C96  29F4               	incf	___fldiv@aexp& (0+255),w,b
  7073  000C98  A4D8               	btfss	status,2,c
  7074  000C9A  EF51  F006         	goto	u5111
  7075  000C9E  EF53  F006         	goto	u5110
  7076  000CA2                     u5111:
  7077  000CA2  EF5B  F006         	goto	l4313
  7078  000CA6                     u5110:
  7079  000CA6                     
  7080                           ; BSR set to: 0
  7081  000CA6  0E00               	movlw	0
  7082  000CA8  6E27               	movwf	___fldiv@a^0,c
  7083  000CAA  0E00               	movlw	0
  7084  000CAC  6E28               	movwf	(___fldiv@a+1)^0,c
  7085  000CAE  0E00               	movlw	0
  7086  000CB0  6E29               	movwf	(___fldiv@a+2)^0,c
  7087  000CB2  0E00               	movlw	0
  7088  000CB4  6E2A               	movwf	(___fldiv@a+3)^0,c
  7089  000CB6                     l4313:
  7090                           
  7091                           ; BSR set to: 0
  7092  000CB6  8E29               	bsf	(___fldiv@a+2)^0,7,c
  7093  000CB8                     
  7094                           ; BSR set to: 0
  7095  000CB8  0E00               	movlw	0
  7096  000CBA  6E2A               	movwf	(___fldiv@a+3)^0,c
  7097  000CBC  EF68  F006         	goto	l4319
  7098  000CC0                     l4317:
  7099                           
  7100                           ; BSR set to: 0
  7101  000CC0  0E00               	movlw	0
  7102  000CC2  6E27               	movwf	___fldiv@a^0,c
  7103  000CC4  0E00               	movlw	0
  7104  000CC6  6E28               	movwf	(___fldiv@a+1)^0,c
  7105  000CC8  0E00               	movlw	0
  7106  000CCA  6E29               	movwf	(___fldiv@a+2)^0,c
  7107  000CCC  0E00               	movlw	0
  7108  000CCE  6E2A               	movwf	(___fldiv@a+3)^0,c
  7109  000CD0                     l4319:
  7110                           
  7111                           ; BSR set to: 0
  7112  000CD0  5027               	movf	___fldiv@a^0,w,c
  7113  000CD2  1028               	iorwf	(___fldiv@a+1)^0,w,c
  7114  000CD4  1029               	iorwf	(___fldiv@a+2)^0,w,c
  7115  000CD6  102A               	iorwf	(___fldiv@a+3)^0,w,c
  7116  000CD8  A4D8               	btfss	status,2,c
  7117  000CDA  EF71  F006         	goto	u5121
  7118  000CDE  EF73  F006         	goto	u5120
  7119  000CE2                     u5121:
  7120  000CE2  EF8B  F006         	goto	l4331
  7121  000CE6                     u5120:
  7122  000CE6                     
  7123                           ; BSR set to: 0
  7124  000CE6  0E00               	movlw	0
  7125  000CE8  6E23               	movwf	___fldiv@b^0,c
  7126  000CEA  0E00               	movlw	0
  7127  000CEC  6E24               	movwf	(___fldiv@b+1)^0,c
  7128  000CEE  0E00               	movlw	0
  7129  000CF0  6E25               	movwf	(___fldiv@b+2)^0,c
  7130  000CF2  0E00               	movlw	0
  7131  000CF4  6E26               	movwf	(___fldiv@b+3)^0,c
  7132  000CF6                     
  7133                           ; BSR set to: 0
  7134  000CF6  0E80               	movlw	128
  7135  000CF8  1225               	iorwf	(___fldiv@b+2)^0,f,c
  7136  000CFA  0E7F               	movlw	127
  7137  000CFC  1226               	iorwf	(___fldiv@b+3)^0,f,c
  7138  000CFE                     l4325:
  7139                           
  7140                           ; BSR set to: 0
  7141  000CFE  51EC               	movf	___fldiv@sign& (0+255),w,b
  7142  000D00  1226               	iorwf	(___fldiv@b+3)^0,f,c
  7143  000D02                     
  7144                           ; BSR set to: 0
  7145  000D02  C023  F023         	movff	___fldiv@b,?___fldiv
  7146  000D06  C024  F024         	movff	___fldiv@b+1,?___fldiv+1
  7147  000D0A  C025  F025         	movff	___fldiv@b+2,?___fldiv+2
  7148  000D0E  C026  F026         	movff	___fldiv@b+3,?___fldiv+3
  7149  000D12  EFCE  F007         	goto	l1036
  7150  000D16                     l4331:
  7151                           
  7152                           ; BSR set to: 0
  7153  000D16  51F3               	movf	___fldiv@bexp& (0+255),w,b
  7154  000D18  A4D8               	btfss	status,2,c
  7155  000D1A  EF91  F006         	goto	u5131
  7156  000D1E  EF93  F006         	goto	u5130
  7157  000D22                     u5131:
  7158  000D22  EF9D  F006         	goto	l4339
  7159  000D26                     u5130:
  7160  000D26                     
  7161                           ; BSR set to: 0
  7162  000D26  0E00               	movlw	0
  7163  000D28  6E23               	movwf	?___fldiv^0,c
  7164  000D2A  0E00               	movlw	0
  7165  000D2C  6E24               	movwf	(?___fldiv+1)^0,c
  7166  000D2E  0E00               	movlw	0
  7167  000D30  6E25               	movwf	(?___fldiv+2)^0,c
  7168  000D32  0E00               	movlw	0
  7169  000D34  6E26               	movwf	(?___fldiv+3)^0,c
  7170  000D36  EFCE  F007         	goto	l1036
  7171  000D3A                     l4339:
  7172                           
  7173                           ; BSR set to: 0
  7174  000D3A  51F4               	movf	___fldiv@aexp& (0+255),w,b
  7175  000D3C  C0F3  F02B         	movff	___fldiv@bexp,??___fldiv
  7176  000D40  6A2C               	clrf	(??___fldiv+1)^0,c
  7177  000D42  5E2B               	subwf	??___fldiv^0,f,c
  7178  000D44  0E00               	movlw	0
  7179  000D46  5A2C               	subwfb	(??___fldiv+1)^0,f,c
  7180  000D48  0E7F               	movlw	127
  7181  000D4A  242B               	addwf	??___fldiv^0,w,c
  7182  000D4C  6FED               	movwf	___fldiv@new_exp& (0+255),b
  7183  000D4E  0E00               	movlw	0
  7184  000D50  202C               	addwfc	(??___fldiv+1)^0,w,c
  7185  000D52  6FEE               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7186  000D54                     
  7187                           ; BSR set to: 0
  7188  000D54  C023  F0E8         	movff	___fldiv@b,___fldiv@rem
  7189  000D58  C024  F0E9         	movff	___fldiv@b+1,___fldiv@rem+1
  7190  000D5C  C025  F0EA         	movff	___fldiv@b+2,___fldiv@rem+2
  7191  000D60  C026  F0EB         	movff	___fldiv@b+3,___fldiv@rem+3
  7192  000D64                     
  7193                           ; BSR set to: 0
  7194  000D64  0E00               	movlw	0
  7195  000D66  6E23               	movwf	___fldiv@b^0,c
  7196  000D68  0E00               	movlw	0
  7197  000D6A  6E24               	movwf	(___fldiv@b+1)^0,c
  7198  000D6C  0E00               	movlw	0
  7199  000D6E  6E25               	movwf	(___fldiv@b+2)^0,c
  7200  000D70  0E00               	movlw	0
  7201  000D72  6E26               	movwf	(___fldiv@b+3)^0,c
  7202  000D74                     
  7203                           ; BSR set to: 0
  7204  000D74  0E00               	movlw	0
  7205  000D76  6FEF               	movwf	___fldiv@grs& (0+255),b
  7206  000D78  0E00               	movlw	0
  7207  000D7A  6FF0               	movwf	(___fldiv@grs+1)& (0+255),b
  7208  000D7C  0E00               	movlw	0
  7209  000D7E  6FF1               	movwf	(___fldiv@grs+2)& (0+255),b
  7210  000D80  0E00               	movlw	0
  7211  000D82  6FF2               	movwf	(___fldiv@grs+3)& (0+255),b
  7212  000D84                     
  7213                           ; BSR set to: 0
  7214  000D84  0E00               	movlw	0
  7215  000D86  6FF4               	movwf	___fldiv@aexp& (0+255),b
  7216  000D88  EFFE  F006         	goto	l1038
  7217  000D8C                     l4349:
  7218                           
  7219                           ; BSR set to: 0
  7220  000D8C  51F4               	movf	___fldiv@aexp& (0+255),w,b
  7221  000D8E  B4D8               	btfsc	status,2,c
  7222  000D90  EFCC  F006         	goto	u5141
  7223  000D94  EFCE  F006         	goto	u5140
  7224  000D98                     u5141:
  7225  000D98  EFE5  F006         	goto	l4357
  7226  000D9C                     u5140:
  7227  000D9C                     
  7228                           ; BSR set to: 0
  7229  000D9C  90D8               	bcf	status,0,c
  7230  000D9E  37E8               	rlcf	___fldiv@rem& (0+255),f,b
  7231  000DA0  37E9               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7232  000DA2  37EA               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7233  000DA4  37EB               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7234  000DA6  90D8               	bcf	status,0,c
  7235  000DA8  3623               	rlcf	___fldiv@b^0,f,c
  7236  000DAA  3624               	rlcf	(___fldiv@b+1)^0,f,c
  7237  000DAC  3625               	rlcf	(___fldiv@b+2)^0,f,c
  7238  000DAE  3626               	rlcf	(___fldiv@b+3)^0,f,c
  7239  000DB0                     
  7240                           ; BSR set to: 0
  7241  000DB0  AFF2               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7242  000DB2  EFDD  F006         	goto	u5151
  7243  000DB6  EFDF  F006         	goto	u5150
  7244  000DBA                     u5151:
  7245  000DBA  EFE0  F006         	goto	l1041
  7246  000DBE                     u5150:
  7247  000DBE                     
  7248                           ; BSR set to: 0
  7249  000DBE  8023               	bsf	___fldiv@b^0,0,c
  7250  000DC0                     l1041:
  7251                           
  7252                           ; BSR set to: 0
  7253  000DC0  90D8               	bcf	status,0,c
  7254  000DC2  37EF               	rlcf	___fldiv@grs& (0+255),f,b
  7255  000DC4  37F0               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7256  000DC6  37F1               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7257  000DC8  37F2               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7258  000DCA                     l4357:
  7259                           
  7260                           ; BSR set to: 0
  7261  000DCA  5027               	movf	___fldiv@a^0,w,c
  7262  000DCC  5DE8               	subwf	___fldiv@rem& (0+255),w,b
  7263  000DCE  5028               	movf	(___fldiv@a+1)^0,w,c
  7264  000DD0  59E9               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7265  000DD2  5029               	movf	(___fldiv@a+2)^0,w,c
  7266  000DD4  59EA               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7267  000DD6  502A               	movf	(___fldiv@a+3)^0,w,c
  7268  000DD8  59EB               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7269  000DDA  A0D8               	btfss	status,0,c
  7270  000DDC  EFF2  F006         	goto	u5161
  7271  000DE0  EFF4  F006         	goto	u5160
  7272  000DE4                     u5161:
  7273  000DE4  EFFD  F006         	goto	l4363
  7274  000DE8                     u5160:
  7275  000DE8                     
  7276                           ; BSR set to: 0
  7277  000DE8  8DF2               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7278  000DEA                     
  7279                           ; BSR set to: 0
  7280  000DEA  5027               	movf	___fldiv@a^0,w,c
  7281  000DEC  5FE8               	subwf	___fldiv@rem& (0+255),f,b
  7282  000DEE  5028               	movf	(___fldiv@a+1)^0,w,c
  7283  000DF0  5BE9               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7284  000DF2  5029               	movf	(___fldiv@a+2)^0,w,c
  7285  000DF4  5BEA               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7286  000DF6  502A               	movf	(___fldiv@a+3)^0,w,c
  7287  000DF8  5BEB               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7288  000DFA                     l4363:
  7289                           
  7290                           ; BSR set to: 0
  7291  000DFA  2BF4               	incf	___fldiv@aexp& (0+255),f,b
  7292  000DFC                     l1038:
  7293                           
  7294                           ; BSR set to: 0
  7295  000DFC  0E19               	movlw	25
  7296  000DFE  65F4               	cpfsgt	___fldiv@aexp& (0+255),b
  7297  000E00  EF04  F007         	goto	u5171
  7298  000E04  EF06  F007         	goto	u5170
  7299  000E08                     u5171:
  7300  000E08  EFC6  F006         	goto	l4349
  7301  000E0C                     u5170:
  7302  000E0C                     
  7303                           ; BSR set to: 0
  7304  000E0C  51E8               	movf	___fldiv@rem& (0+255),w,b
  7305  000E0E  11E9               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7306  000E10  11EA               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7307  000E12  11EB               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7308  000E14  B4D8               	btfsc	status,2,c
  7309  000E16  EF0F  F007         	goto	u5181
  7310  000E1A  EF11  F007         	goto	u5180
  7311  000E1E                     u5181:
  7312  000E1E  EF29  F007         	goto	l4375
  7313  000E22                     u5180:
  7314  000E22                     
  7315                           ; BSR set to: 0
  7316  000E22  81EF               	bsf	___fldiv@grs& (0+255),0,b
  7317  000E24  EF29  F007         	goto	l4375
  7318  000E28                     l4369:
  7319                           
  7320                           ; BSR set to: 0
  7321  000E28  90D8               	bcf	status,0,c
  7322  000E2A  3623               	rlcf	___fldiv@b^0,f,c
  7323  000E2C  3624               	rlcf	(___fldiv@b+1)^0,f,c
  7324  000E2E  3625               	rlcf	(___fldiv@b+2)^0,f,c
  7325  000E30  3626               	rlcf	(___fldiv@b+3)^0,f,c
  7326  000E32                     
  7327                           ; BSR set to: 0
  7328  000E32  AFF2               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7329  000E34  EF1E  F007         	goto	u5191
  7330  000E38  EF20  F007         	goto	u5190
  7331  000E3C                     u5191:
  7332  000E3C  EF21  F007         	goto	l1047
  7333  000E40                     u5190:
  7334  000E40                     
  7335                           ; BSR set to: 0
  7336  000E40  8023               	bsf	___fldiv@b^0,0,c
  7337  000E42                     l1047:
  7338                           
  7339                           ; BSR set to: 0
  7340  000E42  90D8               	bcf	status,0,c
  7341  000E44  37EF               	rlcf	___fldiv@grs& (0+255),f,b
  7342  000E46  37F0               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7343  000E48  37F1               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7344  000E4A  37F2               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7345  000E4C  07ED               	decf	___fldiv@new_exp& (0+255),f,b
  7346  000E4E  A0D8               	btfss	status,0,c
  7347  000E50  07EE               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7348  000E52                     l4375:
  7349                           
  7350                           ; BSR set to: 0
  7351  000E52  AE25               	btfss	(___fldiv@b+2)^0,7,c
  7352  000E54  EF2E  F007         	goto	u5201
  7353  000E58  EF30  F007         	goto	u5200
  7354  000E5C                     u5201:
  7355  000E5C  EF14  F007         	goto	l4369
  7356  000E60                     u5200:
  7357  000E60                     
  7358                           ; BSR set to: 0
  7359  000E60  0E00               	movlw	0
  7360  000E62  6FF4               	movwf	___fldiv@aexp& (0+255),b
  7361  000E64                     
  7362                           ; BSR set to: 0
  7363  000E64  AFF2               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7364  000E66  EF37  F007         	goto	u5211
  7365  000E6A  EF39  F007         	goto	u5210
  7366  000E6E                     u5211:
  7367  000E6E  EF5D  F007         	goto	l1049
  7368  000E72                     u5210:
  7369  000E72                     
  7370                           ; BSR set to: 0
  7371  000E72  0EFF               	movlw	255
  7372  000E74  15EF               	andwf	___fldiv@grs& (0+255),w,b
  7373  000E76  6E2B               	movwf	??___fldiv^0,c
  7374  000E78  0EFF               	movlw	255
  7375  000E7A  15F0               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7376  000E7C  6E2C               	movwf	(??___fldiv+1)^0,c
  7377  000E7E  0EFF               	movlw	255
  7378  000E80  15F1               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7379  000E82  6E2D               	movwf	(??___fldiv+2)^0,c
  7380  000E84  0E7F               	movlw	127
  7381  000E86  15F2               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7382  000E88  6E2E               	movwf	(??___fldiv+3)^0,c
  7383  000E8A  502B               	movf	??___fldiv^0,w,c
  7384  000E8C  102C               	iorwf	(??___fldiv+1)^0,w,c
  7385  000E8E  102D               	iorwf	(??___fldiv+2)^0,w,c
  7386  000E90  102E               	iorwf	(??___fldiv+3)^0,w,c
  7387  000E92  B4D8               	btfsc	status,2,c
  7388  000E94  EF4E  F007         	goto	u5221
  7389  000E98  EF50  F007         	goto	u5220
  7390  000E9C                     u5221:
  7391  000E9C  EF54  F007         	goto	l1050
  7392  000EA0                     u5220:
  7393  000EA0                     l4383:
  7394                           
  7395                           ; BSR set to: 0
  7396  000EA0  0E01               	movlw	1
  7397  000EA2  6FF4               	movwf	___fldiv@aexp& (0+255),b
  7398  000EA4  EF5D  F007         	goto	l1049
  7399  000EA8                     l1050:
  7400                           
  7401                           ; BSR set to: 0
  7402  000EA8  A023               	btfss	___fldiv@b^0,0,c
  7403  000EAA  EF59  F007         	goto	u5231
  7404  000EAE  EF5B  F007         	goto	u5230
  7405  000EB2                     u5231:
  7406  000EB2  EF5D  F007         	goto	l1049
  7407  000EB6                     u5230:
  7408  000EB6  EF50  F007         	goto	l4383
  7409  000EBA                     l1049:
  7410                           
  7411                           ; BSR set to: 0
  7412  000EBA  51F4               	movf	___fldiv@aexp& (0+255),w,b
  7413  000EBC  B4D8               	btfsc	status,2,c
  7414  000EBE  EF63  F007         	goto	u5241
  7415  000EC2  EF65  F007         	goto	u5240
  7416  000EC6                     u5241:
  7417  000EC6  EF89  F007         	goto	l4395
  7418  000ECA                     u5240:
  7419  000ECA                     
  7420                           ; BSR set to: 0
  7421  000ECA  0E01               	movlw	1
  7422  000ECC  2623               	addwf	___fldiv@b^0,f,c
  7423  000ECE  0E00               	movlw	0
  7424  000ED0  2224               	addwfc	(___fldiv@b+1)^0,f,c
  7425  000ED2  2225               	addwfc	(___fldiv@b+2)^0,f,c
  7426  000ED4  2226               	addwfc	(___fldiv@b+3)^0,f,c
  7427  000ED6                     
  7428                           ; BSR set to: 0
  7429  000ED6  A026               	btfss	(___fldiv@b+3)^0,0,c
  7430  000ED8  EF70  F007         	goto	u5251
  7431  000EDC  EF72  F007         	goto	u5250
  7432  000EE0                     u5251:
  7433  000EE0  EF89  F007         	goto	l4395
  7434  000EE4                     u5250:
  7435  000EE4                     
  7436                           ; BSR set to: 0
  7437  000EE4  C023  F02B         	movff	___fldiv@b,??___fldiv
  7438  000EE8  C024  F02C         	movff	___fldiv@b+1,??___fldiv+1
  7439  000EEC  C025  F02D         	movff	___fldiv@b+2,??___fldiv+2
  7440  000EF0  C026  F02E         	movff	___fldiv@b+3,??___fldiv+3
  7441  000EF4  342E               	rlcf	(??___fldiv+3)^0,w,c
  7442  000EF6  322E               	rrcf	(??___fldiv+3)^0,f,c
  7443  000EF8  322D               	rrcf	(??___fldiv+2)^0,f,c
  7444  000EFA  322C               	rrcf	(??___fldiv+1)^0,f,c
  7445  000EFC  322B               	rrcf	??___fldiv^0,f,c
  7446  000EFE  C02B  F023         	movff	??___fldiv,___fldiv@b
  7447  000F02  C02C  F024         	movff	??___fldiv+1,___fldiv@b+1
  7448  000F06  C02D  F025         	movff	??___fldiv+2,___fldiv@b+2
  7449  000F0A  C02E  F026         	movff	??___fldiv+3,___fldiv@b+3
  7450  000F0E                     
  7451                           ; BSR set to: 0
  7452  000F0E  4BED               	infsnz	___fldiv@new_exp& (0+255),f,b
  7453  000F10  2BEE               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7454  000F12                     l4395:
  7455                           
  7456                           ; BSR set to: 0
  7457  000F12  BFEE               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7458  000F14  EF94  F007         	goto	u5261
  7459  000F18  51EE               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7460  000F1A  E108               	bnz	u5260
  7461  000F1C  29ED               	incf	___fldiv@new_exp& (0+255),w,b
  7462  000F1E  A0D8               	btfss	status,0,c
  7463  000F20  EF94  F007         	goto	u5261
  7464  000F24  EF96  F007         	goto	u5260
  7465  000F28                     u5261:
  7466  000F28  EFA1  F007         	goto	l4399
  7467  000F2C                     u5260:
  7468  000F2C                     
  7469                           ; BSR set to: 0
  7470  000F2C  0E00               	movlw	0
  7471  000F2E  6FEE               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7472  000F30  69ED               	setf	___fldiv@new_exp& (0+255),b
  7473  000F32  0E00               	movlw	0
  7474  000F34  6E23               	movwf	___fldiv@b^0,c
  7475  000F36  0E00               	movlw	0
  7476  000F38  6E24               	movwf	(___fldiv@b+1)^0,c
  7477  000F3A  0E00               	movlw	0
  7478  000F3C  6E25               	movwf	(___fldiv@b+2)^0,c
  7479  000F3E  0E00               	movlw	0
  7480  000F40  6E26               	movwf	(___fldiv@b+3)^0,c
  7481  000F42                     l4399:
  7482                           
  7483                           ; BSR set to: 0
  7484  000F42  BFEE               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7485  000F44  EFAE  F007         	goto	u5270
  7486  000F48  51EE               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7487  000F4A  E106               	bnz	u5271
  7488  000F4C  05ED               	decf	___fldiv@new_exp& (0+255),w,b
  7489  000F4E  B0D8               	btfsc	status,0,c
  7490  000F50  EFAC  F007         	goto	u5271
  7491  000F54  EFAE  F007         	goto	u5270
  7492  000F58                     u5271:
  7493  000F58  EFBC  F007         	goto	l4403
  7494  000F5C                     u5270:
  7495  000F5C                     
  7496                           ; BSR set to: 0
  7497  000F5C  0E00               	movlw	0
  7498  000F5E  6FEE               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7499  000F60  0E00               	movlw	0
  7500  000F62  6FED               	movwf	___fldiv@new_exp& (0+255),b
  7501  000F64  0E00               	movlw	0
  7502  000F66  6E23               	movwf	___fldiv@b^0,c
  7503  000F68  0E00               	movlw	0
  7504  000F6A  6E24               	movwf	(___fldiv@b+1)^0,c
  7505  000F6C  0E00               	movlw	0
  7506  000F6E  6E25               	movwf	(___fldiv@b+2)^0,c
  7507  000F70  0E00               	movlw	0
  7508  000F72  6E26               	movwf	(___fldiv@b+3)^0,c
  7509  000F74  0E00               	movlw	0
  7510  000F76  6FEC               	movwf	___fldiv@sign& (0+255),b
  7511  000F78                     l4403:
  7512                           
  7513                           ; BSR set to: 0
  7514  000F78  C0ED  F0F3         	movff	___fldiv@new_exp,___fldiv@bexp
  7515  000F7C                     
  7516                           ; BSR set to: 0
  7517  000F7C  A1F3               	btfss	___fldiv@bexp& (0+255),0,b
  7518  000F7E  EFC3  F007         	goto	u5281
  7519  000F82  EFC5  F007         	goto	u5280
  7520  000F86                     u5281:
  7521  000F86  EFC8  F007         	goto	l4409
  7522  000F8A                     u5280:
  7523  000F8A                     
  7524                           ; BSR set to: 0
  7525  000F8A  8E25               	bsf	(___fldiv@b+2)^0,7,c
  7526  000F8C  EFC9  F007         	goto	l4411
  7527  000F90                     l4409:
  7528                           
  7529                           ; BSR set to: 0
  7530  000F90  9E25               	bcf	(___fldiv@b+2)^0,7,c
  7531  000F92                     l4411:
  7532                           
  7533                           ; BSR set to: 0
  7534  000F92  90D8               	bcf	status,0,c
  7535  000F94  31F3               	rrcf	___fldiv@bexp& (0+255),w,b
  7536  000F96  6E26               	movwf	(___fldiv@b+3)^0,c
  7537  000F98  EF7F  F006         	goto	l4325
  7538  000F9C                     l1036:
  7539                           
  7540                           ; BSR set to: 0
  7541  000F9C  0012               	return		;funcret
  7542  000F9E                     __end_of___fldiv:
  7543                           	opt callstack 0
  7544                           
  7545 ;; *************** function _ISR *****************
  7546 ;; Defined at:
  7547 ;;		line 104 in file "main.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;		None
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;		None
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  1    wreg      void 
  7554 ;; Registers used:
  7555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7561 ;;      Params:         0       0       0       0       0       0       0
  7562 ;;      Locals:         0       0       0       0       0       0       0
  7563 ;;      Temps:          6       0       0       0       0       0       0
  7564 ;;      Totals:         6       0       0       0       0       0       0
  7565 ;;Total ram usage:        6 bytes
  7566 ;; Hardware stack levels used:    1
  7567 ;; Hardware stack levels required when called:    1
  7568 ;; This function calls:
  7569 ;;		_board
  7570 ;;		_move
  7571 ;; This function is called by:
  7572 ;;		Interrupt level 2
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	intcode
  7577  000008                     __pintcode:
  7578                           	opt callstack 0
  7579  000008                     _ISR:
  7580                           	opt callstack 25
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;incstack = 0
  7584  000008  826B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7585  00000A  ED7E  F010         	call	int_func,f	;refresh shadow registers
  7586                           
  7587                           	psect	intcode_body
  7588  0020FC                     __pintcode_body:
  7589                           	opt callstack 25
  7590  0020FC                     int_func:
  7591                           	opt callstack 25
  7592  0020FC  0006               	pop		; remove dummy address from shadow register refresh
  7593  0020FE  CFE1 F00F          	movff	fsr1l,??_ISR
  7594  002102  CFE2 F010          	movff	fsr1h,??_ISR+1
  7595  002106  CFD9 F011          	movff	fsr2l,??_ISR+2
  7596  00210A  CFDA F012          	movff	fsr2h,??_ISR+3
  7597  00210E  CFF3 F013          	movff	prodl,??_ISR+4
  7598  002112  CFF4 F014          	movff	prodh,??_ISR+5
  7599  002116                     
  7600                           ;main.c: 106:     if(TMR0IF && TMR0IE)
  7601  002116  A4F2               	btfss	4082,2,c	;volatile
  7602  002118  EF90  F010         	goto	i2u379_41
  7603  00211C  EF92  F010         	goto	i2u379_40
  7604  002120                     i2u379_41:
  7605  002120  EF18  F011         	goto	i2l125
  7606  002124                     i2u379_40:
  7607  002124  AAF2               	btfss	4082,5,c	;volatile
  7608  002126  EF97  F010         	goto	i2u380_41
  7609  00212A  EF99  F010         	goto	i2u380_40
  7610  00212E                     i2u380_41:
  7611  00212E  EF18  F011         	goto	i2l125
  7612  002132                     i2u380_40:
  7613  002132                     
  7614                           ;main.c: 107:     {;main.c: 108:         TMR0IF = 0;
  7615  002132  94F2               	bcf	4082,2,c	;volatile
  7616  002134                     
  7617                           ;main.c: 109:         if(mode==1){
  7618  002134  045F               	decf	_mode^0,w,c
  7619  002136  A4D8               	btfss	status,2,c
  7620  002138  EFA0  F010         	goto	i2u381_41
  7621  00213C  EFA2  F010         	goto	i2u381_40
  7622  002140                     i2u381_41:
  7623  002140  EFE0  F010         	goto	i2l3457
  7624  002144                     i2u381_40:
  7625  002144                     
  7626                           ;main.c: 110:         if(PORTDbits.RD3)
  7627  002144  A683               	btfss	131,3,c	;volatile
  7628  002146  EFA7  F010         	goto	i2u382_41
  7629  00214A  EFA9  F010         	goto	i2u382_40
  7630  00214E                     i2u382_41:
  7631  00214E  EFB1  F010         	goto	i2l112
  7632  002152                     i2u382_40:
  7633  002152                     
  7634                           ;main.c: 111:             move(0);
  7635  002152  0E00               	movlw	0
  7636  002154  6E02               	movwf	(move@direct+1)^0,c
  7637  002156  0E00               	movlw	0
  7638  002158  6E01               	movwf	move@direct^0,c
  7639  00215A  EC13  F004         	call	_move	;wreg free
  7640  00215E  EF17  F011         	goto	i2l3467
  7641  002162                     i2l112:
  7642  002162  A283               	btfss	131,1,c	;volatile
  7643  002164  EFB6  F010         	goto	i2u383_41
  7644  002168  EFB8  F010         	goto	i2u383_40
  7645  00216C                     i2u383_41:
  7646  00216C  EFC0  F010         	goto	i2l114
  7647  002170                     i2u383_40:
  7648  002170                     
  7649                           ;main.c: 113:             move(1);
  7650  002170  0E00               	movlw	0
  7651  002172  6E02               	movwf	(move@direct+1)^0,c
  7652  002174  0E01               	movlw	1
  7653  002176  6E01               	movwf	move@direct^0,c
  7654  002178  EC13  F004         	call	_move	;wreg free
  7655  00217C  EF17  F011         	goto	i2l3467
  7656  002180                     i2l114:
  7657  002180  A083               	btfss	131,0,c	;volatile
  7658  002182  EFC5  F010         	goto	i2u384_41
  7659  002186  EFC7  F010         	goto	i2u384_40
  7660  00218A                     i2u384_41:
  7661  00218A  EFCF  F010         	goto	i2l116
  7662  00218E                     i2u384_40:
  7663  00218E                     
  7664                           ;main.c: 115:             move(2);
  7665  00218E  0E00               	movlw	0
  7666  002190  6E02               	movwf	(move@direct+1)^0,c
  7667  002192  0E02               	movlw	2
  7668  002194  6E01               	movwf	move@direct^0,c
  7669  002196  EC13  F004         	call	_move	;wreg free
  7670  00219A  EF17  F011         	goto	i2l3467
  7671  00219E                     i2l116:
  7672  00219E  A483               	btfss	131,2,c	;volatile
  7673  0021A0  EFD4  F010         	goto	i2u385_41
  7674  0021A4  EFD6  F010         	goto	i2u385_40
  7675  0021A8                     i2u385_41:
  7676  0021A8  EFDE  F010         	goto	i2l113
  7677  0021AC                     i2u385_40:
  7678  0021AC                     
  7679                           ;main.c: 117:             move(3);
  7680  0021AC  0E00               	movlw	0
  7681  0021AE  6E02               	movwf	(move@direct+1)^0,c
  7682  0021B0  0E03               	movlw	3
  7683  0021B2  6E01               	movwf	move@direct^0,c
  7684  0021B4  EC13  F004         	call	_move	;wreg free
  7685  0021B8  EF17  F011         	goto	i2l3467
  7686  0021BC                     i2l113:
  7687                           
  7688                           ;main.c: 120:         }
  7689  0021BC  EF17  F011         	goto	i2l3467
  7690  0021C0                     i2l3457:
  7691  0021C0  0E02               	movlw	2
  7692  0021C2  185F               	xorwf	_mode^0,w,c
  7693  0021C4  A4D8               	btfss	status,2,c
  7694  0021C6  EFE7  F010         	goto	i2u386_41
  7695  0021CA  EFE9  F010         	goto	i2u386_40
  7696  0021CE                     i2u386_41:
  7697  0021CE  EF02  F011         	goto	i2l120
  7698  0021D2                     i2u386_40:
  7699  0021D2                     
  7700                           ;main.c: 122:             board(PORTDbits.RD0,PORTDbits.RD1,PORTDbits.RD3,PORTDbits.RD2)
      +                          ;
  7701  0021D2  0E00               	movlw	0
  7702  0021D4  B283               	btfsc	131,1,c	;volatile
  7703  0021D6  0E01               	movlw	1
  7704  0021D8  6E01               	movwf	board@left_down^0,c
  7705  0021DA  0E00               	movlw	0
  7706  0021DC  B683               	btfsc	131,3,c	;volatile
  7707  0021DE  0E01               	movlw	1
  7708  0021E0  6E02               	movwf	board@right_up^0,c
  7709  0021E2  0E00               	movlw	0
  7710  0021E4  B483               	btfsc	131,2,c	;volatile
  7711  0021E6  0E01               	movlw	1
  7712  0021E8  6E03               	movwf	board@right_down^0,c
  7713  0021EA  B083               	btfsc	131,0,c	;volatile
  7714  0021EC  EFFA  F010         	goto	i2u387_41
  7715  0021F0  EFFD  F010         	goto	i2u387_40
  7716  0021F4                     i2u387_41:
  7717  0021F4  0E01               	movlw	1
  7718  0021F6  EFFE  F010         	goto	i2u387_46
  7719  0021FA                     i2u387_40:
  7720  0021FA  0E00               	movlw	0
  7721  0021FC                     i2u387_46:
  7722  0021FC  ECCF  F007         	call	_board
  7723                           
  7724                           ;main.c: 124:         }
  7725  002200  EF17  F011         	goto	i2l3467
  7726  002204                     i2l120:
  7727                           
  7728                           ;main.c: 126:             if(PORTDbits.RD1){
  7729  002204  A283               	btfss	131,1,c	;volatile
  7730  002206  EF07  F011         	goto	i2u388_41
  7731  00220A  EF09  F011         	goto	i2u388_40
  7732  00220E                     i2u388_41:
  7733  00220E  EF17  F011         	goto	i2l3467
  7734  002212                     i2u388_40:
  7735  002212                     
  7736                           ;main.c: 127:                 if(select==0){
  7737  002212  5054               	movf	_select^0,w,c
  7738  002214  A4D8               	btfss	status,2,c
  7739  002216  EF0F  F011         	goto	i2u389_41
  7740  00221A  EF11  F011         	goto	i2u389_40
  7741  00221E                     i2u389_41:
  7742  00221E  EF15  F011         	goto	i2l3465
  7743  002222                     i2u389_40:
  7744  002222                     
  7745                           ;main.c: 128:                     mode=1;
  7746  002222  0E01               	movlw	1
  7747  002224  6E5F               	movwf	_mode^0,c
  7748                           
  7749                           ;main.c: 129:                 }
  7750  002226  EF17  F011         	goto	i2l3467
  7751  00222A                     i2l3465:
  7752                           
  7753                           ;main.c: 131:                     mode=2;
  7754  00222A  0E02               	movlw	2
  7755  00222C  6E5F               	movwf	_mode^0,c
  7756  00222E                     i2l3467:
  7757                           
  7758                           ;main.c: 147:         TMR0L = 255;
  7759  00222E  68D6               	setf	214,c	;volatile
  7760  002230                     i2l125:
  7761  002230  C014  FFF4         	movff	??_ISR+5,prodh
  7762  002234  C013  FFF3         	movff	??_ISR+4,prodl
  7763  002238  C012  FFDA         	movff	??_ISR+3,fsr2h
  7764  00223C  C011  FFD9         	movff	??_ISR+2,fsr2l
  7765  002240  C010  FFE2         	movff	??_ISR+1,fsr1h
  7766  002244  C00F  FFE1         	movff	??_ISR,fsr1l
  7767  002248  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7768  00224A  0011               	retfie		f
  7769  00224C                     __end_of_ISR:
  7770                           	opt callstack 0
  7771                           
  7772 ;; *************** function _move *****************
  7773 ;; Defined at:
  7774 ;;		line 145 in file "snake.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  direct          2    0[COMRAM] int 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  j               2   12[COMRAM] int 
  7779 ;;  i               2   10[COMRAM] int 
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  1    wreg      void 
  7782 ;; Registers used:
  7783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7789 ;;      Params:         2       0       0       0       0       0       0
  7790 ;;      Locals:         4       0       0       0       0       0       0
  7791 ;;      Temps:          8       0       0       0       0       0       0
  7792 ;;      Totals:        14       0       0       0       0       0       0
  7793 ;;Total ram usage:       14 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_ISR
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text30
  7803  000826                     __ptext30:
  7804                           	opt callstack 0
  7805  000826                     _move:
  7806                           	opt callstack 25
  7807  000826                     
  7808                           ;snake.c: 146:     map[player[1]][player[0]]=0;
  7809  000826  5061               	movf	(_player+1)^0,w,c
  7810  000828  0D10               	mullw	16
  7811  00082A  0E00               	movlw	low _map
  7812  00082C  6E03               	movwf	??_move^0,c
  7813  00082E  0E02               	movlw	high _map
  7814  000830  6E04               	movwf	(??_move+1)^0,c
  7815  000832  50F3               	movf	243,w,c
  7816  000834  2603               	addwf	??_move^0,f,c
  7817  000836  50F4               	movf	244,w,c
  7818  000838  2204               	addwfc	(??_move+1)^0,f,c
  7819  00083A  5060               	movf	_player^0,w,c
  7820  00083C  2403               	addwf	??_move^0,w,c
  7821  00083E  6ED9               	movwf	fsr2l,c
  7822  000840  0E00               	movlw	0
  7823  000842  2004               	addwfc	(??_move+1)^0,w,c
  7824  000844  6EDA               	movwf	fsr2h,c
  7825  000846  0E00               	movlw	0
  7826  000848  6EDF               	movwf	indf2,c
  7827                           
  7828                           ;snake.c: 147:  switch(direct){
  7829  00084A  EF4D  F004         	goto	i2l2749
  7830  00084E                     i2l2733:
  7831                           
  7832                           ;snake.c: 149:             player[1]-=1;
  7833  00084E  0661               	decf	(_player+1)^0,f,c
  7834                           
  7835                           ;snake.c: 150:    break;
  7836  000850  EF67  F004         	goto	i2l2751
  7837  000854                     i2l2735:
  7838                           
  7839                           ;snake.c: 152:             if(player[1]!=15)
  7840  000854  0E0F               	movlw	15
  7841  000856  1861               	xorwf	(_player+1)^0,w,c
  7842  000858  B4D8               	btfsc	status,2,c
  7843  00085A  EF31  F004         	goto	i2u267_41
  7844  00085E  EF33  F004         	goto	i2u267_40
  7845  000862                     i2u267_41:
  7846  000862  EF67  F004         	goto	i2l2751
  7847  000866                     i2u267_40:
  7848  000866                     
  7849                           ;snake.c: 153:                 player[1]+=1;
  7850  000866  2A61               	incf	(_player+1)^0,f,c
  7851  000868  EF67  F004         	goto	i2l2751
  7852  00086C                     i2l2739:
  7853                           
  7854                           ;snake.c: 156:             if(player[0]!=0)
  7855  00086C  5060               	movf	_player^0,w,c
  7856  00086E  B4D8               	btfsc	status,2,c
  7857  000870  EF3C  F004         	goto	i2u268_41
  7858  000874  EF3E  F004         	goto	i2u268_40
  7859  000878                     i2u268_41:
  7860  000878  EF67  F004         	goto	i2l2751
  7861  00087C                     i2u268_40:
  7862  00087C                     
  7863                           ;snake.c: 157:                 player[0]-=1;
  7864  00087C  0660               	decf	_player^0,f,c
  7865  00087E  EF67  F004         	goto	i2l2751
  7866  000882                     i2l2743:
  7867                           
  7868                           ;snake.c: 160:             if(player[0]!=15)
  7869  000882  0E0F               	movlw	15
  7870  000884  1860               	xorwf	_player^0,w,c
  7871  000886  B4D8               	btfsc	status,2,c
  7872  000888  EF48  F004         	goto	i2u269_41
  7873  00088C  EF4A  F004         	goto	i2u269_40
  7874  000890                     i2u269_41:
  7875  000890  EF67  F004         	goto	i2l2751
  7876  000894                     i2u269_40:
  7877  000894                     
  7878                           ;snake.c: 161:                 player[0]+=1;
  7879  000894  2A60               	incf	_player^0,f,c
  7880  000896  EF67  F004         	goto	i2l2751
  7881  00089A                     i2l2749:
  7882  00089A  C001  F003         	movff	move@direct,??_move
  7883  00089E  C002  F004         	movff	move@direct+1,??_move+1
  7884                           
  7885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7886                           ; Switch size 1, requested type "simple"
  7887                           ; Number of cases is 1, Range of values is 0 to 0
  7888                           ; switch strategies available:
  7889                           ; Name         Instructions Cycles
  7890                           ; simple_byte            4     3 (average)
  7891                           ;	Chosen strategy is simple_byte
  7892  0008A2  5004               	movf	(??_move+1)^0,w,c
  7893  0008A4  0A00               	xorlw	0	; case 0
  7894  0008A6  B4D8               	btfsc	status,2,c
  7895  0008A8  EF58  F004         	goto	i2l4657
  7896  0008AC  EF41  F004         	goto	i2l2743
  7897  0008B0                     i2l4657:
  7898                           
  7899                           ; Switch size 1, requested type "simple"
  7900                           ; Number of cases is 3, Range of values is 0 to 2
  7901                           ; switch strategies available:
  7902                           ; Name         Instructions Cycles
  7903                           ; simple_byte           10     6 (average)
  7904                           ;	Chosen strategy is simple_byte
  7905  0008B0  5003               	movf	??_move^0,w,c
  7906  0008B2  0A00               	xorlw	0	; case 0
  7907  0008B4  B4D8               	btfsc	status,2,c
  7908  0008B6  EF27  F004         	goto	i2l2733
  7909  0008BA  0A01               	xorlw	1	; case 1
  7910  0008BC  B4D8               	btfsc	status,2,c
  7911  0008BE  EF2A  F004         	goto	i2l2735
  7912  0008C2  0A03               	xorlw	3	; case 2
  7913  0008C4  B4D8               	btfsc	status,2,c
  7914  0008C6  EF36  F004         	goto	i2l2739
  7915  0008CA  EF41  F004         	goto	i2l2743
  7916  0008CE                     i2l2751:
  7917                           
  7918                           ;snake.c: 164:     if(player[1]==0||player[1]>250)
  7919  0008CE  5061               	movf	(_player+1)^0,w,c
  7920  0008D0  B4D8               	btfsc	status,2,c
  7921  0008D2  EF6D  F004         	goto	i2u270_41
  7922  0008D6  EF6F  F004         	goto	i2u270_40
  7923  0008DA                     i2u270_41:
  7924  0008DA  EF77  F004         	goto	i2l2755
  7925  0008DE                     i2u270_40:
  7926  0008DE  0EFA               	movlw	250
  7927  0008E0  6461               	cpfsgt	(_player+1)^0,c
  7928  0008E2  EF75  F004         	goto	i2u271_41
  7929  0008E6  EF77  F004         	goto	i2u271_40
  7930  0008EA                     i2u271_41:
  7931  0008EA  EF79  F004         	goto	i2l2757
  7932  0008EE                     i2u271_40:
  7933  0008EE                     i2l2755:
  7934                           
  7935                           ;snake.c: 165:         win=1;
  7936  0008EE  0E01               	movlw	1
  7937  0008F0  6E4F               	movwf	_win^0,c
  7938  0008F2                     i2l2757:
  7939                           
  7940                           ;snake.c: 166:     map[player[1]][player[0]]=1;
  7941  0008F2  5061               	movf	(_player+1)^0,w,c
  7942  0008F4  0D10               	mullw	16
  7943  0008F6  0E00               	movlw	low _map
  7944  0008F8  6E03               	movwf	??_move^0,c
  7945  0008FA  0E02               	movlw	high _map
  7946  0008FC  6E04               	movwf	(??_move+1)^0,c
  7947  0008FE  50F3               	movf	243,w,c
  7948  000900  2603               	addwf	??_move^0,f,c
  7949  000902  50F4               	movf	244,w,c
  7950  000904  2204               	addwfc	(??_move+1)^0,f,c
  7951  000906  5060               	movf	_player^0,w,c
  7952  000908  2403               	addwf	??_move^0,w,c
  7953  00090A  6ED9               	movwf	fsr2l,c
  7954  00090C  0E00               	movlw	0
  7955  00090E  2004               	addwfc	(??_move+1)^0,w,c
  7956  000910  6EDA               	movwf	fsr2h,c
  7957  000912  0E01               	movlw	1
  7958  000914  6EDF               	movwf	indf2,c
  7959  000916                     
  7960                           ;snake.c: 167:     int i,j;;snake.c: 168:     for(j=0;j<6;++j){
  7961  000916  0E00               	movlw	0
  7962  000918  6E0E               	movwf	(move@j+1)^0,c
  7963  00091A  0E00               	movlw	0
  7964  00091C  6E0D               	movwf	move@j^0,c
  7965  00091E                     i2l2765:
  7966                           
  7967                           ;snake.c: 169:         for(i=0;i<3;++i){
  7968  00091E  0E00               	movlw	0
  7969  000920  6E0C               	movwf	(move@i+1)^0,c
  7970  000922  0E00               	movlw	0
  7971  000924  6E0B               	movwf	move@i^0,c
  7972  000926                     i2l357:
  7973                           
  7974                           ;snake.c: 170:             if(j%2==0){
  7975  000926  B00D               	btfsc	move@j^0,0,c
  7976  000928  EF98  F004         	goto	i2u272_41
  7977  00092C  EF9A  F004         	goto	i2u272_40
  7978  000930                     i2u272_41:
  7979  000930  EF41  F005         	goto	i2l2781
  7980  000934                     i2u272_40:
  7981  000934                     
  7982                           ;snake.c: 171:     if(car[j][0]-i<=15){
  7983  000934  0EC0               	movlw	low _car
  7984  000936  6E03               	movwf	??_move^0,c
  7985  000938  0E00               	movlw	high _car
  7986  00093A  6E04               	movwf	(??_move+1)^0,c
  7987  00093C  90D8               	bcf	status,0,c
  7988  00093E  340D               	rlcf	move@j^0,w,c
  7989  000940  6ED9               	movwf	fsr2l,c
  7990  000942  340E               	rlcf	(move@j+1)^0,w,c
  7991  000944  6EDA               	movwf	fsr2h,c
  7992  000946  90D8               	bcf	status,0,c
  7993  000948  36D9               	rlcf	fsr2l,f,c
  7994  00094A  36DA               	rlcf	fsr2h,f,c
  7995  00094C  5003               	movf	??_move^0,w,c
  7996  00094E  26D9               	addwf	fsr2l,f,c
  7997  000950  5004               	movf	(??_move+1)^0,w,c
  7998  000952  22DA               	addwfc	fsr2h,f,c
  7999  000954  CFDE F005          	movff	postinc2,??_move+2
  8000  000958  CFDD F006          	movff	postdec2,??_move+3
  8001  00095C  500B               	movf	move@i^0,w,c
  8002  00095E  5E05               	subwf	(??_move+2)^0,f,c
  8003  000960  500C               	movf	(move@i+1)^0,w,c
  8004  000962  5A06               	subwfb	(??_move+3)^0,f,c
  8005  000964  BE06               	btfsc	(??_move+3)^0,7,c
  8006  000966  EFC0  F004         	goto	i2u273_40
  8007  00096A  5006               	movf	(??_move+3)^0,w,c
  8008  00096C  E107               	bnz	i2u273_41
  8009  00096E  0E10               	movlw	16
  8010  000970  5C05               	subwf	(??_move+2)^0,w,c
  8011  000972  B0D8               	btfsc	status,0,c
  8012  000974  EFBE  F004         	goto	i2u273_41
  8013  000978  EFC0  F004         	goto	i2u273_40
  8014  00097C                     i2u273_41:
  8015  00097C  EFE0  F005         	goto	i2l2791
  8016  000980                     i2u273_40:
  8017  000980                     
  8018                           ;snake.c: 172:      map[2+2*j][car[j][0]-i]=1;
  8019  000980  0EC0               	movlw	low _car
  8020  000982  6E03               	movwf	??_move^0,c
  8021  000984  0E00               	movlw	high _car
  8022  000986  6E04               	movwf	(??_move+1)^0,c
  8023  000988  90D8               	bcf	status,0,c
  8024  00098A  340D               	rlcf	move@j^0,w,c
  8025  00098C  6ED9               	movwf	fsr2l,c
  8026  00098E  340E               	rlcf	(move@j+1)^0,w,c
  8027  000990  6EDA               	movwf	fsr2h,c
  8028  000992  90D8               	bcf	status,0,c
  8029  000994  36D9               	rlcf	fsr2l,f,c
  8030  000996  36DA               	rlcf	fsr2h,f,c
  8031  000998  5003               	movf	??_move^0,w,c
  8032  00099A  26D9               	addwf	fsr2l,f,c
  8033  00099C  5004               	movf	(??_move+1)^0,w,c
  8034  00099E  22DA               	addwfc	fsr2h,f,c
  8035  0009A0  CFDE F005          	movff	postinc2,??_move+2
  8036  0009A4  CFDD F006          	movff	postdec2,??_move+3
  8037  0009A8  C00D  F007         	movff	move@j,??_move+4
  8038  0009AC  C00E  F008         	movff	move@j+1,??_move+5
  8039  0009B0  90D8               	bcf	status,0,c
  8040  0009B2  3607               	rlcf	(??_move+4)^0,f,c
  8041  0009B4  3608               	rlcf	(??_move+5)^0,f,c
  8042  0009B6  3A07               	swapf	(??_move+4)^0,f,c
  8043  0009B8  3A08               	swapf	(??_move+5)^0,f,c
  8044  0009BA  0EF0               	movlw	240
  8045  0009BC  1608               	andwf	(??_move+5)^0,f,c
  8046  0009BE  5007               	movf	(??_move+4)^0,w,c
  8047  0009C0  0B0F               	andlw	15
  8048  0009C2  1208               	iorwf	(??_move+5)^0,f,c
  8049  0009C4  0EF0               	movlw	240
  8050  0009C6  1607               	andwf	(??_move+4)^0,f,c
  8051  0009C8  0E00               	movlw	low _map
  8052  0009CA  6E09               	movwf	(??_move+6)^0,c
  8053  0009CC  0E02               	movlw	high _map
  8054  0009CE  6E0A               	movwf	(??_move+7)^0,c
  8055  0009D0  0E20               	movlw	32
  8056  0009D2  2609               	addwf	(??_move+6)^0,f,c
  8057  0009D4  0E00               	movlw	0
  8058  0009D6  220A               	addwfc	(??_move+7)^0,f,c
  8059  0009D8  5007               	movf	(??_move+4)^0,w,c
  8060  0009DA  2609               	addwf	(??_move+6)^0,f,c
  8061  0009DC  5008               	movf	(??_move+5)^0,w,c
  8062  0009DE  220A               	addwfc	(??_move+7)^0,f,c
  8063  0009E0  500B               	movf	move@i^0,w,c
  8064  0009E2  5E09               	subwf	(??_move+6)^0,f,c
  8065  0009E4  500C               	movf	(move@i+1)^0,w,c
  8066  0009E6  5A0A               	subwfb	(??_move+7)^0,f,c
  8067  0009E8  5005               	movf	(??_move+2)^0,w,c
  8068  0009EA  2409               	addwf	(??_move+6)^0,w,c
  8069  0009EC  6ED9               	movwf	fsr2l,c
  8070  0009EE  5006               	movf	(??_move+3)^0,w,c
  8071  0009F0  200A               	addwfc	(??_move+7)^0,w,c
  8072  0009F2  6EDA               	movwf	fsr2h,c
  8073  0009F4  0E01               	movlw	1
  8074  0009F6  6EDF               	movwf	indf2,c
  8075  0009F8                     
  8076                           ;snake.c: 173:      if(player[1]==2+2*j && player[0]==car[j][0]-i)
  8077  0009F8  5061               	movf	(_player+1)^0,w,c
  8078  0009FA  6E03               	movwf	??_move^0,c
  8079  0009FC  6A04               	clrf	(??_move+1)^0,c
  8080  0009FE  C00D  F005         	movff	move@j,??_move+2
  8081  000A02  C00E  F006         	movff	move@j+1,??_move+3
  8082  000A06  90D8               	bcf	status,0,c
  8083  000A08  3605               	rlcf	(??_move+2)^0,f,c
  8084  000A0A  3606               	rlcf	(??_move+3)^0,f,c
  8085  000A0C  0E02               	movlw	2
  8086  000A0E  2605               	addwf	(??_move+2)^0,f,c
  8087  000A10  0E00               	movlw	0
  8088  000A12  2206               	addwfc	(??_move+3)^0,f,c
  8089  000A14  5003               	movf	??_move^0,w,c
  8090  000A16  1805               	xorwf	(??_move+2)^0,w,c
  8091  000A18  E107               	bnz	i2u274_41
  8092  000A1A  5004               	movf	(??_move+1)^0,w,c
  8093  000A1C  1806               	xorwf	(??_move+3)^0,w,c
  8094  000A1E  A4D8               	btfss	status,2,c
  8095  000A20  EF14  F005         	goto	i2u274_41
  8096  000A24  EF16  F005         	goto	i2u274_40
  8097  000A28                     i2u274_41:
  8098  000A28  EFE0  F005         	goto	i2l2791
  8099  000A2C                     i2u274_40:
  8100  000A2C  0EC0               	movlw	low _car
  8101  000A2E  6E03               	movwf	??_move^0,c
  8102  000A30  0E00               	movlw	high _car
  8103  000A32  6E04               	movwf	(??_move+1)^0,c
  8104  000A34  90D8               	bcf	status,0,c
  8105  000A36  340D               	rlcf	move@j^0,w,c
  8106  000A38  6ED9               	movwf	fsr2l,c
  8107  000A3A  340E               	rlcf	(move@j+1)^0,w,c
  8108  000A3C  6EDA               	movwf	fsr2h,c
  8109  000A3E  90D8               	bcf	status,0,c
  8110  000A40  36D9               	rlcf	fsr2l,f,c
  8111  000A42  36DA               	rlcf	fsr2h,f,c
  8112  000A44  5003               	movf	??_move^0,w,c
  8113  000A46  26D9               	addwf	fsr2l,f,c
  8114  000A48  5004               	movf	(??_move+1)^0,w,c
  8115  000A4A  22DA               	addwfc	fsr2h,f,c
  8116  000A4C  CFDE F005          	movff	postinc2,??_move+2
  8117  000A50  CFDD F006          	movff	postdec2,??_move+3
  8118  000A54  500B               	movf	move@i^0,w,c
  8119  000A56  5E05               	subwf	(??_move+2)^0,f,c
  8120  000A58  500C               	movf	(move@i+1)^0,w,c
  8121  000A5A  5A06               	subwfb	(??_move+3)^0,f,c
  8122  000A5C  5060               	movf	_player^0,w,c
  8123  000A5E  6E07               	movwf	(??_move+4)^0,c
  8124  000A60  6A08               	clrf	(??_move+5)^0,c
  8125  000A62  5005               	movf	(??_move+2)^0,w,c
  8126  000A64  1807               	xorwf	(??_move+4)^0,w,c
  8127  000A66  E107               	bnz	i2u275_41
  8128  000A68  5006               	movf	(??_move+3)^0,w,c
  8129  000A6A  1808               	xorwf	(??_move+5)^0,w,c
  8130  000A6C  A4D8               	btfss	status,2,c
  8131  000A6E  EF3B  F005         	goto	i2u275_41
  8132  000A72  EF3D  F005         	goto	i2u275_40
  8133  000A76                     i2u275_41:
  8134  000A76  EFE0  F005         	goto	i2l2791
  8135  000A7A                     i2u275_40:
  8136  000A7A                     i2l2779:
  8137                           
  8138                           ;snake.c: 174:       error=1;
  8139  000A7A  0E01               	movlw	1
  8140  000A7C  6E56               	movwf	_error^0,c
  8141  000A7E  EFE0  F005         	goto	i2l2791
  8142  000A82                     i2l2781:
  8143                           
  8144                           ;snake.c: 178:     if(car[j][0]+i>=0){
  8145  000A82  0EC0               	movlw	low _car
  8146  000A84  6E03               	movwf	??_move^0,c
  8147  000A86  0E00               	movlw	high _car
  8148  000A88  6E04               	movwf	(??_move+1)^0,c
  8149  000A8A  90D8               	bcf	status,0,c
  8150  000A8C  340D               	rlcf	move@j^0,w,c
  8151  000A8E  6ED9               	movwf	fsr2l,c
  8152  000A90  340E               	rlcf	(move@j+1)^0,w,c
  8153  000A92  6EDA               	movwf	fsr2h,c
  8154  000A94  90D8               	bcf	status,0,c
  8155  000A96  36D9               	rlcf	fsr2l,f,c
  8156  000A98  36DA               	rlcf	fsr2h,f,c
  8157  000A9A  5003               	movf	??_move^0,w,c
  8158  000A9C  26D9               	addwf	fsr2l,f,c
  8159  000A9E  5004               	movf	(??_move+1)^0,w,c
  8160  000AA0  22DA               	addwfc	fsr2h,f,c
  8161  000AA2  CFDE F005          	movff	postinc2,??_move+2
  8162  000AA6  CFDD F006          	movff	postdec2,??_move+3
  8163  000AAA  500B               	movf	move@i^0,w,c
  8164  000AAC  2405               	addwf	(??_move+2)^0,w,c
  8165  000AAE  500C               	movf	(move@i+1)^0,w,c
  8166  000AB0  2006               	addwfc	(??_move+3)^0,w,c
  8167  000AB2  0B80               	andlw	128
  8168  000AB4  A4D8               	btfss	status,2,c
  8169  000AB6  EF5F  F005         	goto	i2u276_41
  8170  000ABA  EF61  F005         	goto	i2u276_40
  8171  000ABE                     i2u276_41:
  8172  000ABE  EFE0  F005         	goto	i2l2791
  8173  000AC2                     i2u276_40:
  8174  000AC2                     
  8175                           ;snake.c: 179:      map[2+2*j][car[j][0]+i]=1;
  8176  000AC2  0EC0               	movlw	low _car
  8177  000AC4  6E03               	movwf	??_move^0,c
  8178  000AC6  0E00               	movlw	high _car
  8179  000AC8  6E04               	movwf	(??_move+1)^0,c
  8180  000ACA  90D8               	bcf	status,0,c
  8181  000ACC  340D               	rlcf	move@j^0,w,c
  8182  000ACE  6ED9               	movwf	fsr2l,c
  8183  000AD0  340E               	rlcf	(move@j+1)^0,w,c
  8184  000AD2  6EDA               	movwf	fsr2h,c
  8185  000AD4  90D8               	bcf	status,0,c
  8186  000AD6  36D9               	rlcf	fsr2l,f,c
  8187  000AD8  36DA               	rlcf	fsr2h,f,c
  8188  000ADA  5003               	movf	??_move^0,w,c
  8189  000ADC  26D9               	addwf	fsr2l,f,c
  8190  000ADE  5004               	movf	(??_move+1)^0,w,c
  8191  000AE0  22DA               	addwfc	fsr2h,f,c
  8192  000AE2  CFDE F005          	movff	postinc2,??_move+2
  8193  000AE6  CFDD F006          	movff	postdec2,??_move+3
  8194  000AEA  C00D  F007         	movff	move@j,??_move+4
  8195  000AEE  C00E  F008         	movff	move@j+1,??_move+5
  8196  000AF2  90D8               	bcf	status,0,c
  8197  000AF4  3607               	rlcf	(??_move+4)^0,f,c
  8198  000AF6  3608               	rlcf	(??_move+5)^0,f,c
  8199  000AF8  3A07               	swapf	(??_move+4)^0,f,c
  8200  000AFA  3A08               	swapf	(??_move+5)^0,f,c
  8201  000AFC  0EF0               	movlw	240
  8202  000AFE  1608               	andwf	(??_move+5)^0,f,c
  8203  000B00  5007               	movf	(??_move+4)^0,w,c
  8204  000B02  0B0F               	andlw	15
  8205  000B04  1208               	iorwf	(??_move+5)^0,f,c
  8206  000B06  0EF0               	movlw	240
  8207  000B08  1607               	andwf	(??_move+4)^0,f,c
  8208  000B0A  0E00               	movlw	low _map
  8209  000B0C  6E09               	movwf	(??_move+6)^0,c
  8210  000B0E  0E02               	movlw	high _map
  8211  000B10  6E0A               	movwf	(??_move+7)^0,c
  8212  000B12  0E20               	movlw	32
  8213  000B14  2609               	addwf	(??_move+6)^0,f,c
  8214  000B16  0E00               	movlw	0
  8215  000B18  220A               	addwfc	(??_move+7)^0,f,c
  8216  000B1A  5007               	movf	(??_move+4)^0,w,c
  8217  000B1C  2609               	addwf	(??_move+6)^0,f,c
  8218  000B1E  5008               	movf	(??_move+5)^0,w,c
  8219  000B20  220A               	addwfc	(??_move+7)^0,f,c
  8220  000B22  5005               	movf	(??_move+2)^0,w,c
  8221  000B24  2609               	addwf	(??_move+6)^0,f,c
  8222  000B26  5006               	movf	(??_move+3)^0,w,c
  8223  000B28  220A               	addwfc	(??_move+7)^0,f,c
  8224  000B2A  500B               	movf	move@i^0,w,c
  8225  000B2C  2409               	addwf	(??_move+6)^0,w,c
  8226  000B2E  6ED9               	movwf	fsr2l,c
  8227  000B30  500C               	movf	(move@i+1)^0,w,c
  8228  000B32  200A               	addwfc	(??_move+7)^0,w,c
  8229  000B34  6EDA               	movwf	fsr2h,c
  8230  000B36  0E01               	movlw	1
  8231  000B38  6EDF               	movwf	indf2,c
  8232  000B3A                     
  8233                           ;snake.c: 180:      if(player[1]==2+2*j && player[0]==car[j][0]+i)
  8234  000B3A  5061               	movf	(_player+1)^0,w,c
  8235  000B3C  6E03               	movwf	??_move^0,c
  8236  000B3E  6A04               	clrf	(??_move+1)^0,c
  8237  000B40  C00D  F005         	movff	move@j,??_move+2
  8238  000B44  C00E  F006         	movff	move@j+1,??_move+3
  8239  000B48  90D8               	bcf	status,0,c
  8240  000B4A  3605               	rlcf	(??_move+2)^0,f,c
  8241  000B4C  3606               	rlcf	(??_move+3)^0,f,c
  8242  000B4E  0E02               	movlw	2
  8243  000B50  2605               	addwf	(??_move+2)^0,f,c
  8244  000B52  0E00               	movlw	0
  8245  000B54  2206               	addwfc	(??_move+3)^0,f,c
  8246  000B56  5003               	movf	??_move^0,w,c
  8247  000B58  1805               	xorwf	(??_move+2)^0,w,c
  8248  000B5A  E107               	bnz	i2u277_41
  8249  000B5C  5004               	movf	(??_move+1)^0,w,c
  8250  000B5E  1806               	xorwf	(??_move+3)^0,w,c
  8251  000B60  A4D8               	btfss	status,2,c
  8252  000B62  EFB5  F005         	goto	i2u277_41
  8253  000B66  EFB7  F005         	goto	i2u277_40
  8254  000B6A                     i2u277_41:
  8255  000B6A  EFE0  F005         	goto	i2l2791
  8256  000B6E                     i2u277_40:
  8257  000B6E  5060               	movf	_player^0,w,c
  8258  000B70  6E03               	movwf	??_move^0,c
  8259  000B72  6A04               	clrf	(??_move+1)^0,c
  8260  000B74  0EC0               	movlw	low _car
  8261  000B76  6E05               	movwf	(??_move+2)^0,c
  8262  000B78  0E00               	movlw	high _car
  8263  000B7A  6E06               	movwf	(??_move+3)^0,c
  8264  000B7C  90D8               	bcf	status,0,c
  8265  000B7E  340D               	rlcf	move@j^0,w,c
  8266  000B80  6ED9               	movwf	fsr2l,c
  8267  000B82  340E               	rlcf	(move@j+1)^0,w,c
  8268  000B84  6EDA               	movwf	fsr2h,c
  8269  000B86  90D8               	bcf	status,0,c
  8270  000B88  36D9               	rlcf	fsr2l,f,c
  8271  000B8A  36DA               	rlcf	fsr2h,f,c
  8272  000B8C  5005               	movf	(??_move+2)^0,w,c
  8273  000B8E  26D9               	addwf	fsr2l,f,c
  8274  000B90  5006               	movf	(??_move+3)^0,w,c
  8275  000B92  22DA               	addwfc	fsr2h,f,c
  8276  000B94  CFDE F007          	movff	postinc2,??_move+4
  8277  000B98  CFDD F008          	movff	postdec2,??_move+5
  8278  000B9C  500B               	movf	move@i^0,w,c
  8279  000B9E  2607               	addwf	(??_move+4)^0,f,c
  8280  000BA0  500C               	movf	(move@i+1)^0,w,c
  8281  000BA2  2208               	addwfc	(??_move+5)^0,f,c
  8282  000BA4  5003               	movf	??_move^0,w,c
  8283  000BA6  1807               	xorwf	(??_move+4)^0,w,c
  8284  000BA8  E107               	bnz	i2u278_41
  8285  000BAA  5004               	movf	(??_move+1)^0,w,c
  8286  000BAC  1808               	xorwf	(??_move+5)^0,w,c
  8287  000BAE  A4D8               	btfss	status,2,c
  8288  000BB0  EFDC  F005         	goto	i2u278_41
  8289  000BB4  EFDE  F005         	goto	i2u278_40
  8290  000BB8                     i2u278_41:
  8291  000BB8  EFE0  F005         	goto	i2l2791
  8292  000BBC                     i2u278_40:
  8293  000BBC  EF3D  F005         	goto	i2l2779
  8294  000BC0                     i2l2791:
  8295                           
  8296                           ;snake.c: 184:         }
  8297  000BC0  4A0B               	infsnz	move@i^0,f,c
  8298  000BC2  2A0C               	incf	(move@i+1)^0,f,c
  8299  000BC4  BE0C               	btfsc	(move@i+1)^0,7,c
  8300  000BC6  EFEE  F005         	goto	i2u279_41
  8301  000BCA  500C               	movf	(move@i+1)^0,w,c
  8302  000BCC  E109               	bnz	i2u279_40
  8303  000BCE  0E03               	movlw	3
  8304  000BD0  5C0B               	subwf	move@i^0,w,c
  8305  000BD2  A0D8               	btfss	status,0,c
  8306  000BD4  EFEE  F005         	goto	i2u279_41
  8307  000BD8  EFF0  F005         	goto	i2u279_40
  8308  000BDC                     i2u279_41:
  8309  000BDC  EF93  F004         	goto	i2l357
  8310  000BE0                     i2u279_40:
  8311  000BE0                     
  8312                           ;snake.c: 185:     }
  8313  000BE0  4A0D               	infsnz	move@j^0,f,c
  8314  000BE2  2A0E               	incf	(move@j+1)^0,f,c
  8315  000BE4  BE0E               	btfsc	(move@j+1)^0,7,c
  8316  000BE6  EFFE  F005         	goto	i2u280_41
  8317  000BEA  500E               	movf	(move@j+1)^0,w,c
  8318  000BEC  E109               	bnz	i2u280_40
  8319  000BEE  0E06               	movlw	6
  8320  000BF0  5C0D               	subwf	move@j^0,w,c
  8321  000BF2  A0D8               	btfss	status,0,c
  8322  000BF4  EFFE  F005         	goto	i2u280_41
  8323  000BF8  EF00  F006         	goto	i2u280_40
  8324  000BFC                     i2u280_41:
  8325  000BFC  EF8F  F004         	goto	i2l2765
  8326  000C00                     i2u280_40:
  8327  000C00  0012               	return		;funcret
  8328  000C02                     __end_of_move:
  8329                           	opt callstack 0
  8330                           
  8331 ;; *************** function _board *****************
  8332 ;; Defined at:
  8333 ;;		line 167 in file "ball.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;  left_up         1    wreg     unsigned char 
  8336 ;;  left_down       1    0[COMRAM] unsigned char 
  8337 ;;  right_up        1    1[COMRAM] unsigned char 
  8338 ;;  right_down      1    2[COMRAM] unsigned char 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;  left_up         1    5[COMRAM] unsigned char 
  8341 ;;  i               2    8[COMRAM] int 
  8342 ;;  k               2    6[COMRAM] int 
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  1    wreg      void 
  8345 ;; Registers used:
  8346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8352 ;;      Params:         3       0       0       0       0       0       0
  8353 ;;      Locals:         5       0       0       0       0       0       0
  8354 ;;      Temps:          2       0       0       0       0       0       0
  8355 ;;      Totals:        10       0       0       0       0       0       0
  8356 ;;Total ram usage:       10 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; This function calls:
  8359 ;;		Nothing
  8360 ;; This function is called by:
  8361 ;;		_ISR
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           	psect	text31
  8366  000F9E                     __ptext31:
  8367                           	opt callstack 0
  8368  000F9E                     _board:
  8369                           	opt callstack 25
  8370                           
  8371                           ;incstack = 0
  8372                           ;board@left_up stored from wreg
  8373  000F9E  6E06               	movwf	board@left_up^0,c
  8374  000FA0                     
  8375                           ;ball.c: 167: void board(unsigned char left_up,unsigned char left_down,unsigned char rig
      +                          ht_up,unsigned char right_down);ball.c: 168: {;ball.c: 169:     int i;;ball.c: 176:  if(
      +                          left_up == 1)
  8376  000FA0  0406               	decf	board@left_up^0,w,c
  8377  000FA2  A4D8               	btfss	status,2,c
  8378  000FA4  EFD6  F007         	goto	i2u281_41
  8379  000FA8  EFD8  F007         	goto	i2u281_40
  8380  000FAC                     i2u281_41:
  8381  000FAC  EF1A  F008         	goto	i2l2823
  8382  000FB0                     i2u281_40:
  8383  000FB0                     
  8384                           ;ball.c: 177:  {;ball.c: 178:   if(left_board[0] != 1)
  8385  000FB0  0100               	movlb	0	; () banked
  8386  000FB2  05A0               	decf	_left_board& (0+255),w,b
  8387  000FB4  11A1               	iorwf	(_left_board+1)& (0+255),w,b
  8388  000FB6  B4D8               	btfsc	status,2,c
  8389  000FB8  EFE0  F007         	goto	i2u282_41
  8390  000FBC  EFE2  F007         	goto	i2u282_40
  8391  000FC0                     i2u282_41:
  8392  000FC0  EF1A  F008         	goto	i2l2823
  8393  000FC4                     i2u282_40:
  8394  000FC4                     
  8395                           ; BSR set to: 0
  8396                           ;ball.c: 179:   {;ball.c: 180:    for(i=0;i<15;i++)
  8397  000FC4  0E00               	movlw	0
  8398  000FC6  6E0A               	movwf	(board@i+1)^0,c
  8399  000FC8  0E00               	movlw	0
  8400  000FCA  6E09               	movwf	board@i^0,c
  8401  000FCC                     i2l2813:
  8402                           
  8403                           ;ball.c: 181:    {;ball.c: 182:     left_board[i] = left_board[i+1];
  8404  000FCC  90D8               	bcf	status,0,c
  8405  000FCE  3409               	rlcf	board@i^0,w,c
  8406  000FD0  6ED9               	movwf	fsr2l,c
  8407  000FD2  340A               	rlcf	(board@i+1)^0,w,c
  8408  000FD4  6EDA               	movwf	fsr2h,c
  8409  000FD6  0EA2               	movlw	low (_left_board+2)
  8410  000FD8  26D9               	addwf	fsr2l,f,c
  8411  000FDA  0E00               	movlw	high (_left_board+2)
  8412  000FDC  22DA               	addwfc	fsr2h,f,c
  8413  000FDE  90D8               	bcf	status,0,c
  8414  000FE0  3409               	rlcf	board@i^0,w,c
  8415  000FE2  6EE1               	movwf	fsr1l,c
  8416  000FE4  340A               	rlcf	(board@i+1)^0,w,c
  8417  000FE6  6EE2               	movwf	fsr1h,c
  8418  000FE8  0EA0               	movlw	low _left_board
  8419  000FEA  26E1               	addwf	fsr1l,f,c
  8420  000FEC  0E00               	movlw	high _left_board
  8421  000FEE  22E2               	addwfc	fsr1h,f,c
  8422  000FF0  CFDE FFE6          	movff	postinc2,postinc1
  8423  000FF4  CFDD FFE5          	movff	postdec2,postdec1
  8424  000FF8                     
  8425                           ;ball.c: 183:    }
  8426  000FF8  4A09               	infsnz	board@i^0,f,c
  8427  000FFA  2A0A               	incf	(board@i+1)^0,f,c
  8428  000FFC  BE0A               	btfsc	(board@i+1)^0,7,c
  8429  000FFE  EF0A  F008         	goto	i2u283_41
  8430  001002  500A               	movf	(board@i+1)^0,w,c
  8431  001004  E109               	bnz	i2u283_40
  8432  001006  0E0F               	movlw	15
  8433  001008  5C09               	subwf	board@i^0,w,c
  8434  00100A  A0D8               	btfss	status,0,c
  8435  00100C  EF0A  F008         	goto	i2u283_41
  8436  001010  EF0C  F008         	goto	i2u283_40
  8437  001014                     i2u283_41:
  8438  001014  EFE6  F007         	goto	i2l2813
  8439  001018                     i2u283_40:
  8440  001018                     
  8441                           ;ball.c: 184:             if(left_board[15]==1)
  8442  001018  0100               	movlb	0	; () banked
  8443  00101A  05BE               	decf	(_left_board+30)& (0+255),w,b
  8444  00101C  11BF               	iorwf	(_left_board+31)& (0+255),w,b
  8445  00101E  A4D8               	btfss	status,2,c
  8446  001020  EF14  F008         	goto	i2u284_41
  8447  001024  EF16  F008         	goto	i2u284_40
  8448  001028                     i2u284_41:
  8449  001028  EF1A  F008         	goto	i2l2823
  8450  00102C                     i2u284_40:
  8451  00102C                     
  8452                           ; BSR set to: 0
  8453                           ;ball.c: 185:                 left_board[15]=0;
  8454  00102C  0E00               	movlw	0
  8455  00102E  6FBF               	movwf	(_left_board+31)& (0+255),b
  8456  001030  0E00               	movlw	0
  8457  001032  6FBE               	movwf	(_left_board+30)& (0+255),b
  8458  001034                     i2l2823:
  8459                           
  8460                           ;ball.c: 188:     if(left_down == 1)
  8461  001034  0401               	decf	board@left_down^0,w,c
  8462  001036  A4D8               	btfss	status,2,c
  8463  001038  EF20  F008         	goto	i2u285_41
  8464  00103C  EF22  F008         	goto	i2u285_40
  8465  001040                     i2u285_41:
  8466  001040  EF64  F008         	goto	i2l2843
  8467  001044                     i2u285_40:
  8468  001044                     
  8469                           ;ball.c: 189:     {;ball.c: 190:         if(left_board[15] != 1)
  8470  001044  0100               	movlb	0	; () banked
  8471  001046  05BE               	decf	(_left_board+30)& (0+255),w,b
  8472  001048  11BF               	iorwf	(_left_board+31)& (0+255),w,b
  8473  00104A  B4D8               	btfsc	status,2,c
  8474  00104C  EF2A  F008         	goto	i2u286_41
  8475  001050  EF2C  F008         	goto	i2u286_40
  8476  001054                     i2u286_41:
  8477  001054  EF64  F008         	goto	i2l2843
  8478  001058                     i2u286_40:
  8479  001058                     
  8480                           ; BSR set to: 0
  8481                           ;ball.c: 191:         {;ball.c: 192:             for(i=15;i>0;i--)
  8482  001058  0E00               	movlw	0
  8483  00105A  6E0A               	movwf	(board@i+1)^0,c
  8484  00105C  0E0F               	movlw	15
  8485  00105E  6E09               	movwf	board@i^0,c
  8486  001060                     i2l2833:
  8487                           
  8488                           ;ball.c: 193:             {;ball.c: 194:                 left_board[i] = left_board[i-1]
      +                          ;
  8489  001060  90D8               	bcf	status,0,c
  8490  001062  3409               	rlcf	board@i^0,w,c
  8491  001064  6ED9               	movwf	fsr2l,c
  8492  001066  340A               	rlcf	(board@i+1)^0,w,c
  8493  001068  6EDA               	movwf	fsr2h,c
  8494  00106A  0E9E               	movlw	low (_left_board+65534)
  8495  00106C  26D9               	addwf	fsr2l,f,c
  8496  00106E  0E00               	movlw	high (_left_board+65534)
  8497  001070  22DA               	addwfc	fsr2h,f,c
  8498  001072  90D8               	bcf	status,0,c
  8499  001074  3409               	rlcf	board@i^0,w,c
  8500  001076  6EE1               	movwf	fsr1l,c
  8501  001078  340A               	rlcf	(board@i+1)^0,w,c
  8502  00107A  6EE2               	movwf	fsr1h,c
  8503  00107C  0EA0               	movlw	low _left_board
  8504  00107E  26E1               	addwf	fsr1l,f,c
  8505  001080  0E00               	movlw	high _left_board
  8506  001082  22E2               	addwfc	fsr1h,f,c
  8507  001084  CFDE FFE6          	movff	postinc2,postinc1
  8508  001088  CFDD FFE5          	movff	postdec2,postdec1
  8509  00108C                     
  8510                           ;ball.c: 195:             }
  8511  00108C  0609               	decf	board@i^0,f,c
  8512  00108E  A0D8               	btfss	status,0,c
  8513  001090  060A               	decf	(board@i+1)^0,f,c
  8514  001092  BE0A               	btfsc	(board@i+1)^0,7,c
  8515  001094  EF56  F008         	goto	i2u287_40
  8516  001098  500A               	movf	(board@i+1)^0,w,c
  8517  00109A  E106               	bnz	i2u287_41
  8518  00109C  0409               	decf	board@i^0,w,c
  8519  00109E  B0D8               	btfsc	status,0,c
  8520  0010A0  EF54  F008         	goto	i2u287_41
  8521  0010A4  EF56  F008         	goto	i2u287_40
  8522  0010A8                     i2u287_41:
  8523  0010A8  EF30  F008         	goto	i2l2833
  8524  0010AC                     i2u287_40:
  8525  0010AC                     
  8526                           ;ball.c: 196:             if(left_board[0]==1)
  8527  0010AC  0100               	movlb	0	; () banked
  8528  0010AE  05A0               	decf	_left_board& (0+255),w,b
  8529  0010B0  11A1               	iorwf	(_left_board+1)& (0+255),w,b
  8530  0010B2  A4D8               	btfss	status,2,c
  8531  0010B4  EF5E  F008         	goto	i2u288_41
  8532  0010B8  EF60  F008         	goto	i2u288_40
  8533  0010BC                     i2u288_41:
  8534  0010BC  EF64  F008         	goto	i2l2843
  8535  0010C0                     i2u288_40:
  8536  0010C0                     
  8537                           ; BSR set to: 0
  8538                           ;ball.c: 197:                 left_board[0]=0;
  8539  0010C0  0E00               	movlw	0
  8540  0010C2  6FA1               	movwf	(_left_board+1)& (0+255),b
  8541  0010C4  0E00               	movlw	0
  8542  0010C6  6FA0               	movwf	_left_board& (0+255),b
  8543  0010C8                     i2l2843:
  8544                           
  8545                           ;ball.c: 200:     if(right_up == 1)
  8546  0010C8  0402               	decf	board@right_up^0,w,c
  8547  0010CA  A4D8               	btfss	status,2,c
  8548  0010CC  EF6A  F008         	goto	i2u289_41
  8549  0010D0  EF6C  F008         	goto	i2u289_40
  8550  0010D4                     i2u289_41:
  8551  0010D4  EFAE  F008         	goto	i2l2863
  8552  0010D8                     i2u289_40:
  8553  0010D8                     
  8554                           ;ball.c: 201:     {;ball.c: 202:         if(right_board[0] != 1)
  8555  0010D8  0100               	movlb	0	; () banked
  8556  0010DA  0580               	decf	_right_board& (0+255),w,b
  8557  0010DC  1181               	iorwf	(_right_board+1)& (0+255),w,b
  8558  0010DE  B4D8               	btfsc	status,2,c
  8559  0010E0  EF74  F008         	goto	i2u290_41
  8560  0010E4  EF76  F008         	goto	i2u290_40
  8561  0010E8                     i2u290_41:
  8562  0010E8  EFAE  F008         	goto	i2l2863
  8563  0010EC                     i2u290_40:
  8564  0010EC                     
  8565                           ; BSR set to: 0
  8566                           ;ball.c: 203:         {;ball.c: 204:             for(i=0;i<15;i++)
  8567  0010EC  0E00               	movlw	0
  8568  0010EE  6E0A               	movwf	(board@i+1)^0,c
  8569  0010F0  0E00               	movlw	0
  8570  0010F2  6E09               	movwf	board@i^0,c
  8571  0010F4                     i2l2853:
  8572                           
  8573                           ;ball.c: 205:             {;ball.c: 206:                 right_board[i] = right_board[i+
      +                          1];
  8574  0010F4  90D8               	bcf	status,0,c
  8575  0010F6  3409               	rlcf	board@i^0,w,c
  8576  0010F8  6ED9               	movwf	fsr2l,c
  8577  0010FA  340A               	rlcf	(board@i+1)^0,w,c
  8578  0010FC  6EDA               	movwf	fsr2h,c
  8579  0010FE  0E82               	movlw	low (_right_board+2)
  8580  001100  26D9               	addwf	fsr2l,f,c
  8581  001102  0E00               	movlw	high (_right_board+2)
  8582  001104  22DA               	addwfc	fsr2h,f,c
  8583  001106  90D8               	bcf	status,0,c
  8584  001108  3409               	rlcf	board@i^0,w,c
  8585  00110A  6EE1               	movwf	fsr1l,c
  8586  00110C  340A               	rlcf	(board@i+1)^0,w,c
  8587  00110E  6EE2               	movwf	fsr1h,c
  8588  001110  0E80               	movlw	low _right_board
  8589  001112  26E1               	addwf	fsr1l,f,c
  8590  001114  0E00               	movlw	high _right_board
  8591  001116  22E2               	addwfc	fsr1h,f,c
  8592  001118  CFDE FFE6          	movff	postinc2,postinc1
  8593  00111C  CFDD FFE5          	movff	postdec2,postdec1
  8594  001120                     
  8595                           ;ball.c: 207:             }
  8596  001120  4A09               	infsnz	board@i^0,f,c
  8597  001122  2A0A               	incf	(board@i+1)^0,f,c
  8598  001124  BE0A               	btfsc	(board@i+1)^0,7,c
  8599  001126  EF9E  F008         	goto	i2u291_41
  8600  00112A  500A               	movf	(board@i+1)^0,w,c
  8601  00112C  E109               	bnz	i2u291_40
  8602  00112E  0E0F               	movlw	15
  8603  001130  5C09               	subwf	board@i^0,w,c
  8604  001132  A0D8               	btfss	status,0,c
  8605  001134  EF9E  F008         	goto	i2u291_41
  8606  001138  EFA0  F008         	goto	i2u291_40
  8607  00113C                     i2u291_41:
  8608  00113C  EF7A  F008         	goto	i2l2853
  8609  001140                     i2u291_40:
  8610  001140                     
  8611                           ;ball.c: 208:             if(right_board[15]==1)
  8612  001140  0100               	movlb	0	; () banked
  8613  001142  059E               	decf	(_right_board+30)& (0+255),w,b
  8614  001144  119F               	iorwf	(_right_board+31)& (0+255),w,b
  8615  001146  A4D8               	btfss	status,2,c
  8616  001148  EFA8  F008         	goto	i2u292_41
  8617  00114C  EFAA  F008         	goto	i2u292_40
  8618  001150                     i2u292_41:
  8619  001150  EFAE  F008         	goto	i2l2863
  8620  001154                     i2u292_40:
  8621  001154                     
  8622                           ; BSR set to: 0
  8623                           ;ball.c: 209:                 right_board[15]=0;
  8624  001154  0E00               	movlw	0
  8625  001156  6F9F               	movwf	(_right_board+31)& (0+255),b
  8626  001158  0E00               	movlw	0
  8627  00115A  6F9E               	movwf	(_right_board+30)& (0+255),b
  8628  00115C                     i2l2863:
  8629                           
  8630                           ;ball.c: 212:     if(right_down == 1)
  8631  00115C  0403               	decf	board@right_down^0,w,c
  8632  00115E  A4D8               	btfss	status,2,c
  8633  001160  EFB4  F008         	goto	i2u293_41
  8634  001164  EFB6  F008         	goto	i2u293_40
  8635  001168                     i2u293_41:
  8636  001168  EFF8  F008         	goto	i2l442
  8637  00116C                     i2u293_40:
  8638  00116C                     
  8639                           ;ball.c: 213:     {;ball.c: 214:         if(right_board[15] != 1)
  8640  00116C  0100               	movlb	0	; () banked
  8641  00116E  059E               	decf	(_right_board+30)& (0+255),w,b
  8642  001170  119F               	iorwf	(_right_board+31)& (0+255),w,b
  8643  001172  B4D8               	btfsc	status,2,c
  8644  001174  EFBE  F008         	goto	i2u294_41
  8645  001178  EFC0  F008         	goto	i2u294_40
  8646  00117C                     i2u294_41:
  8647  00117C  EFF8  F008         	goto	i2l442
  8648  001180                     i2u294_40:
  8649  001180                     
  8650                           ; BSR set to: 0
  8651                           ;ball.c: 215:         {;ball.c: 216:             for(i=15;i>0;i--)
  8652  001180  0E00               	movlw	0
  8653  001182  6E0A               	movwf	(board@i+1)^0,c
  8654  001184  0E0F               	movlw	15
  8655  001186  6E09               	movwf	board@i^0,c
  8656  001188                     i2l2873:
  8657                           
  8658                           ;ball.c: 217:             {;ball.c: 218:                 right_board[i] = right_board[i-
      +                          1];
  8659  001188  90D8               	bcf	status,0,c
  8660  00118A  3409               	rlcf	board@i^0,w,c
  8661  00118C  6ED9               	movwf	fsr2l,c
  8662  00118E  340A               	rlcf	(board@i+1)^0,w,c
  8663  001190  6EDA               	movwf	fsr2h,c
  8664  001192  0E7E               	movlw	low (_right_board+65534)
  8665  001194  26D9               	addwf	fsr2l,f,c
  8666  001196  0E00               	movlw	high (_right_board+65534)
  8667  001198  22DA               	addwfc	fsr2h,f,c
  8668  00119A  90D8               	bcf	status,0,c
  8669  00119C  3409               	rlcf	board@i^0,w,c
  8670  00119E  6EE1               	movwf	fsr1l,c
  8671  0011A0  340A               	rlcf	(board@i+1)^0,w,c
  8672  0011A2  6EE2               	movwf	fsr1h,c
  8673  0011A4  0E80               	movlw	low _right_board
  8674  0011A6  26E1               	addwf	fsr1l,f,c
  8675  0011A8  0E00               	movlw	high _right_board
  8676  0011AA  22E2               	addwfc	fsr1h,f,c
  8677  0011AC  CFDE FFE6          	movff	postinc2,postinc1
  8678  0011B0  CFDD FFE5          	movff	postdec2,postdec1
  8679  0011B4                     
  8680                           ;ball.c: 219:             }
  8681  0011B4  0609               	decf	board@i^0,f,c
  8682  0011B6  A0D8               	btfss	status,0,c
  8683  0011B8  060A               	decf	(board@i+1)^0,f,c
  8684  0011BA  BE0A               	btfsc	(board@i+1)^0,7,c
  8685  0011BC  EFEA  F008         	goto	i2u295_40
  8686  0011C0  500A               	movf	(board@i+1)^0,w,c
  8687  0011C2  E106               	bnz	i2u295_41
  8688  0011C4  0409               	decf	board@i^0,w,c
  8689  0011C6  B0D8               	btfsc	status,0,c
  8690  0011C8  EFE8  F008         	goto	i2u295_41
  8691  0011CC  EFEA  F008         	goto	i2u295_40
  8692  0011D0                     i2u295_41:
  8693  0011D0  EFC4  F008         	goto	i2l2873
  8694  0011D4                     i2u295_40:
  8695  0011D4                     
  8696                           ;ball.c: 220:             if(right_board[0]==1)
  8697  0011D4  0100               	movlb	0	; () banked
  8698  0011D6  0580               	decf	_right_board& (0+255),w,b
  8699  0011D8  1181               	iorwf	(_right_board+1)& (0+255),w,b
  8700  0011DA  A4D8               	btfss	status,2,c
  8701  0011DC  EFF2  F008         	goto	i2u296_41
  8702  0011E0  EFF4  F008         	goto	i2u296_40
  8703  0011E4                     i2u296_41:
  8704  0011E4  EFF8  F008         	goto	i2l442
  8705  0011E8                     i2u296_40:
  8706  0011E8                     
  8707                           ; BSR set to: 0
  8708                           ;ball.c: 221:                 right_board[0]=0;
  8709  0011E8  0E00               	movlw	0
  8710  0011EA  6F81               	movwf	(_right_board+1)& (0+255),b
  8711  0011EC  0E00               	movlw	0
  8712  0011EE  6F80               	movwf	_right_board& (0+255),b
  8713  0011F0                     i2l442:
  8714                           
  8715                           ;ball.c: 224:     int k;;ball.c: 225:  for(k=0;k<16;k++)
  8716  0011F0  0E00               	movlw	0
  8717  0011F2  6E08               	movwf	(board@k+1)^0,c
  8718  0011F4  0E00               	movlw	0
  8719  0011F6  6E07               	movwf	board@k^0,c
  8720  0011F8                     i2l2887:
  8721                           
  8722                           ;ball.c: 226:  {;ball.c: 227:   LED[k][0] = 0;
  8723  0011F8  C007  F004         	movff	board@k,??_board
  8724  0011FC  C008  F005         	movff	board@k+1,??_board+1
  8725  001200  3A04               	swapf	??_board^0,f,c
  8726  001202  3A05               	swapf	(??_board+1)^0,f,c
  8727  001204  0EF0               	movlw	240
  8728  001206  1605               	andwf	(??_board+1)^0,f,c
  8729  001208  5004               	movf	??_board^0,w,c
  8730  00120A  0B0F               	andlw	15
  8731  00120C  1205               	iorwf	(??_board+1)^0,f,c
  8732  00120E  0EF0               	movlw	240
  8733  001210  1604               	andwf	??_board^0,f,c
  8734  001212  0E00               	movlw	low _LED
  8735  001214  2404               	addwf	??_board^0,w,c
  8736  001216  6ED9               	movwf	fsr2l,c
  8737  001218  0E03               	movlw	high _LED
  8738  00121A  2005               	addwfc	(??_board+1)^0,w,c
  8739  00121C  6EDA               	movwf	fsr2h,c
  8740  00121E  0E00               	movlw	0
  8741  001220  6EDF               	movwf	indf2,c
  8742                           
  8743                           ;ball.c: 228:   LED[k][15] = 0;
  8744  001222  C007  F004         	movff	board@k,??_board
  8745  001226  C008  F005         	movff	board@k+1,??_board+1
  8746  00122A  3A04               	swapf	??_board^0,f,c
  8747  00122C  3A05               	swapf	(??_board+1)^0,f,c
  8748  00122E  0EF0               	movlw	240
  8749  001230  1605               	andwf	(??_board+1)^0,f,c
  8750  001232  5004               	movf	??_board^0,w,c
  8751  001234  0B0F               	andlw	15
  8752  001236  1205               	iorwf	(??_board+1)^0,f,c
  8753  001238  0EF0               	movlw	240
  8754  00123A  1604               	andwf	??_board^0,f,c
  8755  00123C  0E0F               	movlw	low (_LED+15)
  8756  00123E  2404               	addwf	??_board^0,w,c
  8757  001240  6ED9               	movwf	fsr2l,c
  8758  001242  0E03               	movlw	high (_LED+15)
  8759  001244  2005               	addwfc	(??_board+1)^0,w,c
  8760  001246  6EDA               	movwf	fsr2h,c
  8761  001248  0E00               	movlw	0
  8762  00124A  6EDF               	movwf	indf2,c
  8763  00124C                     
  8764                           ;ball.c: 230:  }
  8765  00124C  4A07               	infsnz	board@k^0,f,c
  8766  00124E  2A08               	incf	(board@k+1)^0,f,c
  8767  001250  BE08               	btfsc	(board@k+1)^0,7,c
  8768  001252  EF34  F009         	goto	i2u297_41
  8769  001256  5008               	movf	(board@k+1)^0,w,c
  8770  001258  E109               	bnz	i2u297_40
  8771  00125A  0E10               	movlw	16
  8772  00125C  5C07               	subwf	board@k^0,w,c
  8773  00125E  A0D8               	btfss	status,0,c
  8774  001260  EF34  F009         	goto	i2u297_41
  8775  001264  EF36  F009         	goto	i2u297_40
  8776  001268                     i2u297_41:
  8777  001268  EFFC  F008         	goto	i2l2887
  8778  00126C                     i2u297_40:
  8779  00126C                     
  8780                           ;ball.c: 231:  for(k=0;k<16;k++)
  8781  00126C  0E00               	movlw	0
  8782  00126E  6E08               	movwf	(board@k+1)^0,c
  8783  001270  0E00               	movlw	0
  8784  001272  6E07               	movwf	board@k^0,c
  8785  001274                     i2l2899:
  8786                           
  8787                           ;ball.c: 232:  {;ball.c: 233:   LED[k][0] = left_board[k];
  8788  001274  90D8               	bcf	status,0,c
  8789  001276  3407               	rlcf	board@k^0,w,c
  8790  001278  6ED9               	movwf	fsr2l,c
  8791  00127A  3408               	rlcf	(board@k+1)^0,w,c
  8792  00127C  6EDA               	movwf	fsr2h,c
  8793  00127E  0EA0               	movlw	low _left_board
  8794  001280  26D9               	addwf	fsr2l,f,c
  8795  001282  0E00               	movlw	high _left_board
  8796  001284  22DA               	addwfc	fsr2h,f,c
  8797  001286  C007  F004         	movff	board@k,??_board
  8798  00128A  C008  F005         	movff	board@k+1,??_board+1
  8799  00128E  3A04               	swapf	??_board^0,f,c
  8800  001290  3A05               	swapf	(??_board+1)^0,f,c
  8801  001292  0EF0               	movlw	240
  8802  001294  1605               	andwf	(??_board+1)^0,f,c
  8803  001296  5004               	movf	??_board^0,w,c
  8804  001298  0B0F               	andlw	15
  8805  00129A  1205               	iorwf	(??_board+1)^0,f,c
  8806  00129C  0EF0               	movlw	240
  8807  00129E  1604               	andwf	??_board^0,f,c
  8808  0012A0  0E00               	movlw	low _LED
  8809  0012A2  2404               	addwf	??_board^0,w,c
  8810  0012A4  6EE1               	movwf	fsr1l,c
  8811  0012A6  0E03               	movlw	high _LED
  8812  0012A8  2005               	addwfc	(??_board+1)^0,w,c
  8813  0012AA  6EE2               	movwf	fsr1h,c
  8814  0012AC  CFDF FFE7          	movff	indf2,indf1
  8815                           
  8816                           ;ball.c: 234:   LED[k][15] = right_board[k];
  8817  0012B0  90D8               	bcf	status,0,c
  8818  0012B2  3407               	rlcf	board@k^0,w,c
  8819  0012B4  6ED9               	movwf	fsr2l,c
  8820  0012B6  3408               	rlcf	(board@k+1)^0,w,c
  8821  0012B8  6EDA               	movwf	fsr2h,c
  8822  0012BA  0E80               	movlw	low _right_board
  8823  0012BC  26D9               	addwf	fsr2l,f,c
  8824  0012BE  0E00               	movlw	high _right_board
  8825  0012C0  22DA               	addwfc	fsr2h,f,c
  8826  0012C2  C007  F004         	movff	board@k,??_board
  8827  0012C6  C008  F005         	movff	board@k+1,??_board+1
  8828  0012CA  3A04               	swapf	??_board^0,f,c
  8829  0012CC  3A05               	swapf	(??_board+1)^0,f,c
  8830  0012CE  0EF0               	movlw	240
  8831  0012D0  1605               	andwf	(??_board+1)^0,f,c
  8832  0012D2  5004               	movf	??_board^0,w,c
  8833  0012D4  0B0F               	andlw	15
  8834  0012D6  1205               	iorwf	(??_board+1)^0,f,c
  8835  0012D8  0EF0               	movlw	240
  8836  0012DA  1604               	andwf	??_board^0,f,c
  8837  0012DC  0E0F               	movlw	low (_LED+15)
  8838  0012DE  2404               	addwf	??_board^0,w,c
  8839  0012E0  6EE1               	movwf	fsr1l,c
  8840  0012E2  0E03               	movlw	high (_LED+15)
  8841  0012E4  2005               	addwfc	(??_board+1)^0,w,c
  8842  0012E6  6EE2               	movwf	fsr1h,c
  8843  0012E8  CFDF FFE7          	movff	indf2,indf1
  8844  0012EC                     
  8845                           ;ball.c: 236:  }
  8846  0012EC  4A07               	infsnz	board@k^0,f,c
  8847  0012EE  2A08               	incf	(board@k+1)^0,f,c
  8848  0012F0  BE08               	btfsc	(board@k+1)^0,7,c
  8849  0012F2  EF84  F009         	goto	i2u298_41
  8850  0012F6  5008               	movf	(board@k+1)^0,w,c
  8851  0012F8  E109               	bnz	i2u298_40
  8852  0012FA  0E10               	movlw	16
  8853  0012FC  5C07               	subwf	board@k^0,w,c
  8854  0012FE  A0D8               	btfss	status,0,c
  8855  001300  EF84  F009         	goto	i2u298_41
  8856  001304  EF86  F009         	goto	i2u298_40
  8857  001308                     i2u298_41:
  8858  001308  EF3A  F009         	goto	i2l2899
  8859  00130C                     i2u298_40:
  8860  00130C  0012               	return		;funcret
  8861  00130E                     __end_of_board:
  8862                           	opt callstack 0
  8863  0000                     
  8864                           	psect	rparam
  8865  0000                     
  8866                           	psect	temp
  8867  00006B                     btemp:
  8868                           	opt callstack 0
  8869  00006B                     	ds	1
  8870  0000                     int$flags	set	btemp
  8871  0000                     wtemp8	set	btemp+1
  8872  0000                     ttemp5	set	btemp+1
  8873  0000                     ttemp6	set	btemp+4
  8874  0000                     ttemp7	set	btemp+8
  8875                           tosu	equ	0xFFF
  8876                           tosh	equ	0xFFE
  8877                           tosl	equ	0xFFD
  8878                           stkptr	equ	0xFFC
  8879                           pclatu	equ	0xFFB
  8880                           pclath	equ	0xFFA
  8881                           pcl	equ	0xFF9
  8882                           tblptru	equ	0xFF8
  8883                           tblptrh	equ	0xFF7
  8884                           tblptrl	equ	0xFF6
  8885                           tablat	equ	0xFF5
  8886                           prodh	equ	0xFF4
  8887                           prodl	equ	0xFF3
  8888                           indf0	equ	0xFEF
  8889                           postinc0	equ	0xFEE
  8890                           postdec0	equ	0xFED
  8891                           preinc0	equ	0xFEC
  8892                           plusw0	equ	0xFEB
  8893                           fsr0h	equ	0xFEA
  8894                           fsr0l	equ	0xFE9
  8895                           wreg	equ	0xFE8
  8896                           indf1	equ	0xFE7
  8897                           postinc1	equ	0xFE6
  8898                           postdec1	equ	0xFE5
  8899                           preinc1	equ	0xFE4
  8900                           plusw1	equ	0xFE3
  8901                           fsr1h	equ	0xFE2
  8902                           fsr1l	equ	0xFE1
  8903                           bsr	equ	0xFE0
  8904                           indf2	equ	0xFDF
  8905                           postinc2	equ	0xFDE
  8906                           postdec2	equ	0xFDD
  8907                           preinc2	equ	0xFDC
  8908                           plusw2	equ	0xFDB
  8909                           fsr2h	equ	0xFDA
  8910                           fsr2l	equ	0xFD9
  8911                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        331
    BSS         589
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     58     106
    BANK0           128     20     124
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256     36      36
    BANK5           244      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    plot@pattern	PTR unsigned char [16] size(2) Largest target is 256
		 -> LED(BANK3[256]), map(BANK2[256]), outputMap1(BANK1[256]), 

    endSnake	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), mode(COMRAM[1]), 

    endBall	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), mode(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _updateMap->_printError
    _updateMap->_printWin
    _updateMap->_updateCar
    _plot->_set_register1
    _plot->_set_register2
    _plot->_set_register3
    _plot->_set_register4
    _init_max7219->_clear_matrix
    _clear_matrix->_set_register1
    _clear_matrix->_set_register2
    _clear_matrix->_set_register3
    _clear_matrix->_set_register4
    _set_register4->_shiftOut4
    _set_register3->_shiftOut3
    _set_register2->_shiftOut2
    _set_register1->_shiftOut1
    _initMap->___awmod
    _srand->_time
    _rand->___omul
    ___awmod->_rand
    _ball->_move_ball
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _ISR in COMRAM

    _ISR->_move

Critical Paths under _main in BANK0

    _main->_initMap
    _initMap->___awmod
    ___fltol->___fldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_plot

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   25774
                                             16 BANK0      4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                               _ball
                            _initMap
                       _init_max7219
                            _initial
                               _plot
                          _updateMap
 ---------------------------------------------------------------------------------
 (1) _updateMap                                           12    12      0    2081
                                             28 COMRAM    12    12      0
                         _printError
                           _printWin
                          _updateCar
 ---------------------------------------------------------------------------------
 (2) _updateCar                                           10    10      0     446
                                             20 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (2) _printWin                                             8     8      0     387
                                             20 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (2) _printError                                           8     8      0     387
                                             20 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _plot                                                43    41      2    7070
                                             26 COMRAM     7     5      2
                                              0 BANK4     36    36      0
                      _set_register1
                      _set_register2
                      _set_register3
                      _set_register4
 ---------------------------------------------------------------------------------
 (1) _initial                                              6     6      0     322
                                             20 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _init_max7219                                         0     0      0    9944
                       _clear_matrix
                      _set_register1
                      _set_register2
                      _set_register3
                      _set_register4
 ---------------------------------------------------------------------------------
 (2) _clear_matrix                                         2     2      0    5068
                                             26 COMRAM     2     2      0
                      _set_register1
                      _set_register2
                      _set_register3
                      _set_register4
 ---------------------------------------------------------------------------------
 (2) _set_register4                                        2     1      1    1219
                                             24 COMRAM     2     1      1
                          _shiftOut4
 ---------------------------------------------------------------------------------
 (3) _shiftOut4                                            4     3      1     347
                                             20 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _set_register3                                        2     1      1    1219
                                             24 COMRAM     2     1      1
                          _shiftOut3
 ---------------------------------------------------------------------------------
 (3) _shiftOut3                                            4     3      1     347
                                             20 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _set_register2                                        2     1      1    1219
                                             24 COMRAM     2     1      1
                          _shiftOut2
 ---------------------------------------------------------------------------------
 (3) _shiftOut2                                            4     3      1     347
                                             20 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _set_register1                                        2     1      1    1219
                                             24 COMRAM     2     1      1
                          _shiftOut1
 ---------------------------------------------------------------------------------
 (3) _shiftOut1                                            4     3      1     347
                                             20 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMap                                             14    14      0    2553
                                              2 BANK0     14    14      0
                            ___awmod
                             ___wmul
                               _rand
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (2) _time                                                 8     0      8     332
                                             20 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (2) _srand                                                6     4      2     121
                                             28 COMRAM     6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (2) _rand                                                10     8      2     456
                                             44 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (3) ___omul                                              24     8     16     456
                                             20 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                             54 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _ball                                                 8     8      0     405
                                             28 COMRAM     8     8      0
                          _move_ball
 ---------------------------------------------------------------------------------
 (2) _move_ball                                           10    10      0     207
                                             20 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     517
                                             46 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    2183
                                             34 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  6     6      0    1692
                                             14 COMRAM     6     6      0
                              _board
                               _move
 ---------------------------------------------------------------------------------
 (6) _move                                                14    12      2     792
                                              0 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (6) _board                                               10     7      3     900
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _ball
     _move_ball
   _initMap
     ___awmod
       _rand (ARG)
         ___omul
     ___wmul
     _rand
       ___omul
     _srand
       _time (ARG)
     _time
   _init_max7219
     _clear_matrix
       _set_register1
         _shiftOut1
       _set_register2
         _shiftOut2
       _set_register3
         _shiftOut3
       _set_register4
         _shiftOut4
     _set_register1
       _shiftOut1
     _set_register2
       _shiftOut2
     _set_register3
       _shiftOut3
     _set_register4
       _shiftOut4
   _initial
   _plot
     _set_register1
       _shiftOut1
     _set_register2
       _shiftOut2
     _set_register3
       _shiftOut3
     _set_register4
       _shiftOut4
   _updateMap
     _printError
     _printWin
     _updateCar

 _ISR (ROOT)
   _board
   _move

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100     24      24      12       14.1%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0     100      10      100.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0     100       6      100.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     14      7C       4       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3A      6A       1       84.1%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     40A      14        0.0%
DATA                 0      0     40A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jan 02 14:38:45 2020

           ___fldiv@aexp 00F4             ___fldiv@bexp 00F3                        _a 0053  
                      _b 0052                        _c 0051                        _d 0050  
           ___fldiv@sign 00EC      ___wmul@multiplicand 0017              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l201 2E80                      l204 2E62  
                    l212 282E                      l302 1F46                      l136 1570  
                    l401 1C60                      l209 2D64                      l410 1D64  
                    l306 0824                      l171 2D12                      l315 0526  
                    l340 18D6                      l332 172A                      l245 0446  
                    l424 28F8                      l192 2B82                      l185 2C0A  
                    l417 1B50                      l178 2C8E                      l195 2EBC  
                    l292 1D6E                      l454 2E44                      l198 2E9E  
                    l278 247E                      l471 2ADA                      l472 2AFA  
                    l289 236C                      l751 2584                      l698 2A5C  
           __CFG_CPB$OFF 000000                      _LED 0300             __CFG_CPD$OFF 000000  
                    _ISR 0008                      _car 00C0                      _end 0055  
                    _map 0200                      _win 004F             ___awmod@sign 00E9  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     ?_ISR 0001  
           ___fltol@exp1 0038             __CFG_WDT$OFF 000000                     l1112 20FA  
                   l1041 0DC0                     l1050 0EA8                     l1130 2E1E  
                   l1123 2092                     l1036 0F9C                     l1116 2036  
                   l1109 1F9E                     l1133 2760                     l1038 0DFC  
                   l1047 0E42                     l1049 0EBA                     l1137 2DB0  
                   l4001 16E2                     l4011 1738                     l4003 16FE  
                   l4013 1740                     l4005 1722                     l4101 0176  
                   l4031 18B6                     l4015 1748                     l4111 01D4  
                   l4103 0194                     l4033 18BA                     l4025 1808  
                   l4017 1792                     l4041 1A02                     l4105 0198  
                   l4027 1896                     l4019 1800                     l4043 1A56  
                   l4035 18D8                     l4131 0270                     l4123 01E4  
                   l4107 01B4                     l4211 04FA                     l4203 049C  
                   l4301 0C70                     l4029 189A                     l4053 1A7E  
                   l4045 1A5A                     l4141 0298                     l4133 0274  
                   l4125 0242                     l4117 01DC                     l4109 01B8  
                   l4061 0012                     l4213 0516                     l4205 04D6  
                   l4311 0CA6                     l4303 0C76                     l4055 1AF6  
                   l4047 1A76                     l4151 032C                     l4135 0290  
                   l4127 0250                     l4063 0042                     l4231 062C  
                   l4207 04DA                     l4401 0F5C                     l4321 0CE6  
                   l4313 0CB6                     l4305 0C84                     l4057 1B30  
                   l4161 0394                     l4153 0330                     l4129 0254  
                   l4081 00BC                     l4241 076E                     l4233 067A  
                   l4225 0534                     l4209 04F6                     l4411 0F92  
                   l4403 0F78                     l4323 0CF6                     l4331 0D16  
                   l4315 0CB8                     l4307 0C86                     l4059 1B34  
                   l4171 0402                     l4155 034C                     l4147 02A0  
                   l4083 00D8                     l4075 0054                     l4251 07E4  
                   l4227 0580                     l4235 0682                     l4219 051E  
                   l4405 0F7C                     l4341 0D54                     l4333 0D26  
                   l4325 0CFE                     l4309 0C96                     l4317 0CC0  
                   l4421 2496                     l4501 20DA                     l3701 2B02  
                   l4173 041E                     l4157 0350                     l4149 030E  
                   l4093 0100                     l4085 00DC                     l4077 00AA  
                   l4069 004C                     l4253 0800                     l4237 06C2  
                   l4229 05F8                     l4245 07C0                     l4181 0460  
                   l4407 0F8A                     l4351 0D9C                     l4343 0D64  
                   l4335 0D26                     l4327 0D02                     l4319 0CD0  
                   l4431 24E6                     l4503 20E8                     l4271 287E  
                   l4263 283C                     l4255 2830                     l3711 2B6E  
                   l3703 2B12                     l4167 039E                     l4159 036C  
                   l4087 00F8                     l4079 00B8                     l4247 07C4  
                   l4239 073A                     l4191 048C                     l4183 0470  
                   l4175 0448                     l4511 1324                     l4409 0F90  
                   l4361 0DEA                     l4353 0DB0                     l4345 0D74  
                   l4281 0C02                     l4441 2510                     l4433 24EA  
                   l4425 24AA                     l4505 20EA                     l4273 2882  
                   l4257 2834                     l3641 2CF6                     l3721 2EBA  
                   l3713 2B70                     l3705 2B3E                     l4169 03FC  
                   l4249 07E0                     l4185 0474                     l4177 0458  
                   l4521 1346                     l4513 1326                     l4371 0E32  
                   l4363 0DFA                     l4355 0DBE                     l4347 0D84  
                   l4339 0D3A                     l4291 0C40                     l4283 0C10  
                   l4451 2538                     l4443 251A                     l4435 24F8  
                   l4427 24D4                     l4419 2480                     l4275 289E  
                   l3643 2CF8                     l3635 2C96                     l3651 2C0E  
                   l3723 2E84                     l3731 2E6A                     l3715 2B72  
                   l3707 2B66                     l4099 0108                     l3811 22B0  
                   l3803 2264                     l4187 0484                     l4603 15E8  
                   l4531 1364                     l4523 134C                     l4515 1328  
                   l4381 0E72                     l4373 0E40                     l4365 0E0C  
                   l4357 0DCA                     l4349 0D8C                     l4293 0C50  
                   l4285 0C1E                     l4453 2544                     l4445 2524  
                   l4429 24D6                     l3901 1C3C                     l4277 28A2  
                   l4269 2844                     l3741 2A5E                     l3645 2CFE  
                   l3637 2CA6                     l3629 2C92                     l3717 2EA2  
                   l3661 2C4C                     l3725 2E88                     l3733 2E7E  
                   l3709 2B68                     l3821 234C                     l3813 22EE  
                   l3805 2276                     l4197 0494                     l4541 1398  
                   l4533 137A                     l4525 134E                     l4517 132A  
                   l4509 130E                     l4391 0EE4                     l4383 0EA0  
                   l4367 0E22                     l4375 0E52                     l4359 0DE8  
                   l4295 0C52                     l4287 0C20                     l4455 2554  
                   l4471 1FC4                     l4463 1F4A                     l3911 1CA6  
                   l3903 1C58                     l4279 28BE                     l3743 2A6A  
                   l3647 2D00                     l3639 2CD0                     l3719 2EA6  
                   l3671 2C7E                     l3663 2C72                     l3727 2E9C  
                   l3735 2E48                     l3751 2D14                     l3823 2368  
                   l3815 2328                     l3807 228A                     l3831 1D7C  
                   l4551 13C6                     l4543 13A0                     l4535 138C  
                   l4527 1350                     l4519 1340                     l4393 0F0E  
                   l4377 0E60                     l4369 0E28                     l4289 0C30  
                   l4297 0C5A                     l4457 2564                     l4481 201E  
                   l4465 1F5A                     l3921 1D08                     l3913 1CB8  
                   l3905 1C68                     l3745 2A78                     l3649 2D02  
                   l3665 2C74                     l3657 2C12                     l3681 2B9A  
                   l3673 2B86                     l3729 2E66                     l3737 2E4C  
                   l3761 2D48                     l3817 232C                     l3809 229C  
                   l3841 1DF2                     l3833 1D84                     l3825 1D66  
                   l4553 13C8                     l4561 143C                     l4545 13A8  
                   l4537 1390                     l4529 1352                     l4387 0ECA  
                   l4395 0F12                     l4379 0E64                     l4299 0C6A  
                   l4459 2574                     l4491 2082                     l4483 2020  
                   l4475 1FD8                     l4467 1F68                     l3931 1D5C  
                   l3923 1D1A                     l3907 1C7A                     l3915 1CC8  
                   l3747 2A98                     l3667 2C7A                     l3659 2C22  
                   l3691 2BF8                     l3683 2BC6                     l3739 2E60  
                   l3763 236E                     l3819 2348                     l3851 1F2A  
                   l3843 1E3A                     l3835 1D8C                     l4571 146E  
                   l4563 144C                     l4555 13DC                     l4547 13B8  
                   l4539 1394                     l4397 0F2C                     l4389 0ED6  
                   l4493 20A0                     l4485 202C                     l4477 1FE0  
                   l4469 1FAE                     l3917 1CDC                     l3925 1D2A  
                   l3909 1C9E                     l3941 29B2                     l3933 2E20  
                   l3749 2AAA                     l3861 2DF2                     l3853 2D66  
                   l3669 2C7C                     l3693 2BFA                     l3685 2BEE  
                   l3757 2D1C                     l3781 2404                     l3845 1E96  
                   l3837 1DB4                     l4581 14E0                     l4573 1472  
                   l4565 144E                     l4557 1406                     l4549 13C2  
                   l4399 0F42                     l4495 20A2                     l4487 2068  
                   l4479 1FEC                     l3927 1D38                     l3919 1D00  
                   l3871 1B70                     l3951 29E2                     l3943 29C0  
                   l3935 2E3C                     l3863 2686                     l3855 2D78  
                   l3687 2BF0                     l3679 2B8A                     l3695 2AFE  
                   l3759 2D44                     l3783 243E                     l3775 2386  
                   l3791 224C                     l3847 1ECE                     l3839 1DE4  
                   l4655 1600                     l4591 1574                     l4583 14F0  
                   l4575 1476                     l4567 1452                     l4559 142C  
                   l4497 20A6                     l4489 2074                     l3929 1D40  
                   l3881 1BB6                     l3873 1B7C                     l3961 2A28  
                   l3953 29F4                     l3945 29C8                     l3865 271A  
                   l3857 2DA0                     l3689 2BF6                     l3785 2442  
                   l3777 239E                     l3769 237E                     l3849 1F26  
                   l4593 1592                     l4585 1502                     l4569 145E  
                   l4577 14CC                     l4499 20CA                     l3891 1C00  
                   l3883 1BC8                     l3875 1B84                     l3971 2A54  
                   l3963 2A30                     l3955 29FC                     l3947 29CC  
                   l3939 29AC                     l3787 245E                     l3779 23C6  
                   l4595 15A6                     l4587 1516                     l4579 14DE  
                   l3893 1C08                     l3885 1BD0                     l3877 1BA2  
                   l3869 1B52                     l3965 2A36                     l3957 2A04  
                   l3949 29DA                     l3981 1672                     l3789 2462  
                   l3797 225C                     l4597 15BC                     l4589 151A  
                   l3895 1C1A                     l3887 1BE2                     l3879 1BAE  
                   l3959 2A12                     l3967 2A3C                     l3975 2762  
                   l4599 15D2                     l3897 1C26                     l3889 1BEE  
                   l3969 2A4C                     l3993 1684                     l3977 162A  
                   l3899 1C34                     l3995 16BE                     l3987 167C  
                   l3979 163A                     l3997 16C2                     l3999 16DE  
                   _LATA 000F89                     u4000 2CB8                     u4001 2CB0  
                   u4020 2CE2                     u4100 2C8E                     u4021 2CDA  
                   u4101 2C8A                     u4110 2B9A                     u4111 2B96  
                   u4040 2D12                     u4120 2BAC                     u4200 2B50  
                   u5000 076E                     u4041 2D0E                     u4121 2BA4  
                   u4201 2B48                     u5001 076A                     u4018 2CBA  
                   u4050 2C22                     u5010 07BC                     u4051 2C1E  
                   u5011 07B8                     u5100 0C96                     u4060 2C34  
                   u4140 2BD8                     u4220 2B82                     u4300 247E  
                   u5020 07E0                     u5101 0C92                     u4061 2C2C  
                   u4141 2BD0                     u4221 2B7E                     u4301 247A  
                   u5021 07DC                     u5110 0CA6                     u4038 2CE4  
                   u4310 2276                     u5030 0800                     u5111 0CA2  
                   u4231 2A64                     u4311 2272                     u5031 07FC  
                   u5200 0E60                     u5120 0CE6                     u5040 289E  
                   u4240 2A78                     u4080 2C5E                     u4160 2C0A  
                   u4320 228A                     u4400 1ECE                     u5201 0E5C  
                   u5121 0CE2                     u5041 289A                     u4241 2A74  
                   u4081 2C56                     u4161 2C06                     u4321 2286  
                   u4401 1ECA                     u5210 0E72                     u5130 0D26  
                   u5050 28BE                     u4250 2ADA                     u4138 2BAE  
                   u4218 2B52                     u4170 2B12                     u4330 229C  
                   u4410 1F46                     u5211 0E6E                     u5131 0D22  
                   u5051 28BA                     u4251 2AD6                     u4171 2B0E  
                   u4331 2298                     u4411 1F42                     u5220 0EA0  
                   u5140 0D9C                     u5060 0C1E                     u5300 24CA  
                   u4500 1C34                     u4420 2D78                     u4180 2B24  
                   u4260 2D64                     u4340 22B0                     u5221 0E9C  
                   u5141 0D98                     u5061 0C1A                     u4501 1C30  
                   u4421 2D74                     u4181 2B1C                     u4261 2D60  
                   u4341 22AC                     u5230 0EB6                     u5150 0DBE  
                   u5070 0C30                     u5310 24F8                     u4510 1C58  
                   u4430 2752                     u4078 2C36                     u4158 2BDA  
                   u4270 239E                     u4350 2348                     u5231 0EB2  
                   u5151 0DBA                     u5071 0C2C                     u5311 24F4  
                   u4511 1C54                     u4271 239A                     u4351 2344  
                   u5240 0ECA                     u5160 0DE8                     u5080 0C40  
                   u5320 250C                     u5400 2064                     u4520 1C7A  
                   u4440 1B70                     u4600 29C0                     u4280 23C6  
                   u4360 2368                     u5241 0EC6                     u5161 0DE4  
                   u5081 0C3C                     u5321 2508                     u5305 24C0  
                   u5401 2060                     u4521 1C76                     u4441 1B6C  
                   u4601 29BC                     u4281 23C2                     u4361 2364  
                   u5250 0EE4                     u5170 0E0C                     u5090 0C84  
                   u5330 2534                     u5410 2082                     u4530 1C9E  
                   u4450 1BA2                     u4610 29DA                     u4098 2C60  
                   u4290 245E                     u4370 1D7C                     u5251 0EE0  
                   u5171 0E08                     u5091 0C80                     u5331 2530  
                   u5411 207E                     u4531 1C9A                     u4451 1B9E  
                   u4611 29D6                     u4435 2740                     u4291 245A  
                   u4371 1D78                     u5260 0F2C                     u5180 0E22  
                   u5340 2554                     u5420 2092                     u4540 1CB8  
                   u4460 1BC8                     u4620 29F4                     u4700 18D6  
                   u4380 1DF2                     u5500 146E                     u5261 0F28  
                   u5181 0E1E                     u5341 2550                     u5421 208E  
                   u4541 1CB4                     u4461 1BC4                     u4621 29F0  
                   u4701 18D2                     u4381 1DEE                     u5501 146A  
                   u5270 0F5C                     u5190 0E40                     u5350 2564  
                   u5430 20A0                     u4550 1CDC                     u4470 1BE2  
                   u4630 2A12                     u4198 2B26                     u4710 1A76  
                   u4390 1E3A                     u5510 14DE                     u5271 0F58  
                   u5191 0E3C                     u5351 2560                     u5431 209C  
                   u4551 1CD8                     u4471 1BDE                     u4631 2A0E  
                   u4711 1A72                     u4391 1E36                     u5511 14DA  
                   u5280 0F8A                     u5440 20DA                     u5360 1F5A  
                   u4560 1D00                     u4480 1C00                     u4640 2A28  
                   u4720 1B50                     u4800 0176                     u5520 1502  
                   u5281 0F86                     u5441 20D6                     u5361 1F56  
                   u4561 1CFC                     u4481 1BFC                     u4641 2A24  
                   u4721 1B4C                     u4801 0172                     u5521 14FE  
                   u5290 2496                     u5450 20E8                     u5370 1F68  
                   u4570 1D1A                     u4490 1C1A                     u4650 2A4C  
                   u4810 01B4                     u5530 1516                     u5291 2492  
                   u5451 20E4                     u5371 1F64                     u4571 1D16  
                   u4491 1C16                     u4651 2A48                     u4811 01B0  
                   u4731 0018                     u5531 1512                     u5380 1FC4  
                   u4580 1D38                     u4660 16DE                     u4820 01D4  
                   u4900 0458                     u5460 1364                     u5381 1FC0  
                   u4581 1D34                     u4661 16DA                     u4821 01D0  
                   u4741 0024                     u4901 0454                     u5461 1360  
                   u5390 201A                     u4590 1D5C                     u4670 16FE  
                   u4830 0242                     u4910 0470                     u5470 13B8  
                   u5391 2016                     u4591 1D58                     u4671 16FA  
                   u4831 023E                     u4751 0030                     u4911 046C  
                   u5471 13B4                     u4680 1738                     u4840 0270  
                   u4920 0484                     u5480 13DC                     u4681 1734  
                   u4841 026C                     u4761 003C                     u4921 0480  
                   u5481 13D8                     u4690 18B6                     u4850 0290  
                   u4770 00AA                     u4930 04F6                     u5490 144C  
                   u4691 18B2                     u4851 028C                     u4771 00A6  
                   u4931 04F2                     u5491 1448                     u4860 030E  
                   u4780 00D8                     u4940 0516                     u4861 030A  
                   u4781 00D4                     u4941 0512                     u5557 1580  
                   u3990 2CA6                     u4870 034C                     u4790 00F8  
                   u4950 0534                     u3991 2CA2                     u4871 0348  
                   u4791 00F4                     u4951 0530                     u5567 159A  
                   u4880 036C                     u4960 0580                     u4881 0368  
                   u4961 057C                     u5577 15AE                     u4890 041E  
                   u4970 062C                     u4891 041A                     u4971 0628  
                   u5587 15C4                     u4980 067A                     u4981 0676  
                   u5597 15DA                     u4990 06C2                     u4991 06BE  
                   _ball 2830                     _main 130E                     _mode 005F  
                   _rand 2686                     _seed 0057                     _move 0826  
                   _plot 0012                     _time 2D66                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 006B  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          __CFG_IESO$OFF 000000          ___fldiv@new_exp 00ED            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_ISR 000F                    ?_ball 0001  
          ___fltol@sign1 0037                    ?_main 0001          __end_of___fldiv 0F9E  
                  ?_rand 002D                    _ADRES 000FC3                    ?_move 0001  
        __end_of___awmod 2A5E                    ?_plot 001B                    ?_time 0015  
        __end_of___fltol 2586                    _T0CON 000FD5                    i2l120 2204  
                  i2l112 2162                    i2l113 21BC                    i2l114 2180  
                  i2l116 219E                    i2l125 2230                    i2l442 11F0  
                  i2l451 130C                    i2l365 0C00                    i2l357 0926  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTD 000F83  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000     __end_of_clear_matrix 2D66            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _board 0F9E                    ball@i 0021                    ball@j 0023  
        __end_of_initMap 18D8                    _error 0056          __end_of_initial 1B52  
                  _input 006A             updateCar@num 0019                    _srand 2DF2  
                  tablat 000FF5                    move@i 000B                    move@j 000D  
                  plot@i 0422                    plot@j 0420                    time@t 0015  
                  plusw2 000FDB                    ttemp5 006C                    ttemp6 006F  
                  ttemp7 0073                    status 000FD8                    wtemp8 006C  
         board@left_down 0001          __initialization 28FA             __end_of_ball 28FA  
           __end_of_main 162A             __end_of_rand 2762             __end_of_move 0C02  
           __end_of_plot 0448             __end_of_time 2DB2       set_register1@value 0019  
     set_register2@value 0019       set_register3@value 0019       set_register4@value 0019  
                 ??_ball 001D                   ??_main 00F8                   ??_rand 002F  
                 ??_move 0003                   ??_plot 001D                   ??_time 001D  
          __activetblptr 000002                   ?_board 0001                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0            ?_init_max7219 0001  
                 ?_srand 001D                   i2l3441 2124                   i2l2803 0FA0  
                 i2l2731 0826                   i2l3451 2170                   i2l3443 2132  
                 i2l2901 12EC                   i2l2821 102C                   i2l2813 0FCC  
                 i2l2805 0FB0                   i2l2741 087C                   i2l2733 084E  
                 i2l3461 2212                   i2l3453 218E                   i2l3445 2134  
                 i2l2903 12F0                   i2l2815 0FF8                   i2l2807 0FC4  
                 i2l2823 1034                   i2l2743 0882                   i2l2735 0854  
                 i2l2751 08CE                   i2l3463 2222                   i2l3455 21AC  
                 i2l3447 2144                   i2l3439 2116                   i2l2841 10C0  
                 i2l2833 1060                   i2l2825 1044                   i2l2817 0FFC  
                 i2l2753 08DE                   i2l2745 0894                   i2l2737 0866  
                 i2l3465 222A                   i2l3449 2152                   i2l3457 21C0  
                 i2l2835 108C                   i2l2827 1058                   i2l2843 10C8  
                 i2l2819 1018                   i2l2771 0934                   i2l2755 08EE  
                 i2l2739 086C                   i2l3459 21D2                   i2l3467 222E  
                 i2l2861 1154                   i2l2853 10F4                   i2l2845 10D8  
                 i2l2837 1092                   i2l2773 0980                   i2l2781 0A82  
                 i2l2765 091E                   i2l2757 08F2                   i2l2749 089A  
                 i2l2855 1120                   i2l2847 10EC                   i2l2863 115C  
                 i2l2839 10AC                   i2l2783 0AC2                   i2l2775 09F8  
                 i2l2791 0BC0                   i2l2759 0916                   i2l2881 11E8  
                 i2l2873 1188                   i2l2865 116C                   i2l2857 1124  
                 i2l2793 0BC4                   i2l2785 0B3A                   i2l2777 0A2C  
                 i2l2891 1250                   i2l2875 11B4                   i2l2867 1180  
                 i2l2859 1140                   i2l2795 0BE0                   i2l2787 0B6E  
                 i2l2779 0A7A                   i2l2893 126C                   i2l2877 11BA  
                 i2l2797 0BE4                   i2l2887 11F8                   i2l2879 11D4  
                 i2l2889 124C                   i2l4657 08B0                   i2l2899 1274  
                 _TMR0IE 007F95                   _TMR0IF 007F92         __end_of___xxtofl 20FC  
         __CFG_XINST$OFF 000000                   ___omul 2A5E                   ___wmul 2E20  
                 _ball_x 0068                   _ball_y 0066                ??___fldiv 002B  
         __CFG_STVREN$ON 000000                ??___awmod 003B                ??___fltol 0033  
                 clear_0 2966                   clear_1 297A                   clear_2 298C  
                 clear_3 2998                   board@i 0009                   board@k 0007  
        ___awmod@divisor 0039                   _select 0054                   _player 0060  
        ___awmod@counter 00E8                ??_initMap 00EA             __pdataCOMRAM 0060  
              ??_initial 0015         __end_of_printWin 236E                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   srand@s 001D  
         ??_init_max7219 001D             ___xxtofl@arg 001F             ___xxtofl@exp 001E  
           ___xxtofl@val 0015               __accesstop 0080  __end_of__initialization 299E  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001               ___fltol@f1 002F  
         __pcstackCOMRAM 0001             __pidataBANK0 2DB2             __pidataBANK1 2586  
          __end_of_board 130E            __end_of_srand 2E20    __size_of_clear_matrix 0052  
  __end_of_set_register1 2EBE    __end_of_set_register2 2EA0    __end_of_set_register3 2E82  
  __end_of_set_register4 2E64                  ??_board 0004                  ??_srand 001F  
             __pbssBANK0 00C0               __pbssBANK2 0200               __pbssBANK3 0300  
        board@right_down 0003             _clear_matrix 2D14                  ?___omul 0015  
                ?___wmul 0015      ___omul@multiplicand 001D       __size_of_move_ball 0214  
     __size_of_shiftOut1 0084       __size_of_shiftOut2 0084       __size_of_shiftOut3 0088  
     __size_of_shiftOut4 0088                ?___xxtofl 0015       __size_of_updateCar 01E2  
     __size_of_updateMap 03DE               _left_board 00A0                  __Hparam 0000  
                __Lparam 0000                ?_printWin 0001                  ___fldiv 0C02  
                ___awmod 29AC          __size_of___omul 009E     __end_of_init_max7219 2830  
                ___fltol 2480          __size_of___wmul 0026                  _endBall 004B  
                __pcinit 28FA              plot@pattern 001B                  __ramtop 0600  
                __ptext0 130E                  __ptext1 0448                  __ptext2 1D66  
                __ptext3 224C                  __ptext4 236E                  __ptext5 0012  
                __ptext6 18D8                  __ptext7 2762                  __ptext8 2D14  
                __ptext9 2E46             __size_of_ISR 2244                  _initMap 162A  
                _initial 18D8               ??___xxtofl 0019         ___awmod@dividend 0037  
         __pintcode_body 20FC     end_of_initialization 299E        shiftOut1@bitOrder 0017  
         ___omul@product 0025        __end_of_move_ball 1D66        __end_of_shiftOut1 2D14  
      __end_of_shiftOut2 2C90        __end_of_shiftOut3 2C0C        __end_of_shiftOut4 2B84  
      shiftOut2@bitOrder 0017            __Lmediumconst 0000                  int_func 20FC  
      shiftOut3@bitOrder 0017        __end_of_updateCar 1F48        shiftOut4@bitOrder 0017  
      __end_of_updateMap 0826                  postdec1 000FE5                  postdec2 000FDD  
             ??_printWin 0015                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE                _PORTDbits 000F83               _printError 236E  
          ___xxtofl@sign 001D                _TRISAbits 000F92              ___fldiv@grs 00EF  
            ___fldiv@rem 00E8              printError@i 0019              printError@j 001B  
             _outputMap1 0100     set_register1@address 001A           __end_of___omul 2AFC  
         __end_of___wmul 2E46     set_register2@address 001A            __pidataCOMRAM 2EBE  
   set_register3@address 001A     set_register4@address 001A      start_initialization 28FA  
            __end_of_ISR 224C        plot@char_pattern1 0400        plot@char_pattern2 0408  
      plot@char_pattern3 0410        plot@char_pattern4 0418            board@right_up 0002  
             initMap@num 00F2        ___omul@multiplier 0015         __CFG_OSC$INTIO67 000000  
  __size_of_init_max7219 00CE              _ball_last_x 0064              _ball_last_y 0062  
          clear_matrix@i 001B                 ??___omul 0025                 ??___wmul 0019  
            __pdataBANK0 0080              __pdataBANK1 0100         __CFG_LPT1OSC$OFF 000000  
            ?_printError 0001                ___fldiv@a 0027                ___fldiv@b 0023  
            __pbssCOMRAM 003B            __pcstackBANK0 00E8            __pcstackBANK4 0400  
      __size_of___xxtofl 01B4             _init_max7219 2762   __size_of_set_register1 001E  
 __size_of_set_register2 001E   __size_of_set_register3 001E   __size_of_set_register4 001E  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008                 ?___fldiv 0023  
               ?___awmod 0037                 ?___fltol 002F               move@direct 0001  
      __size_of_printWin 0122                 ?_initMap 0001                 ?_initial 0001  
         __size_of_board 0370               shiftOut1@i 0018               shiftOut2@i 0018  
             shiftOut3@i 0018               shiftOut4@i 0018           __size_of_srand 002E  
         ___wmul@product 0019                 _LATBbits 000F8A                 _LATCbits 000F8B  
               _LATDbits 000F8C      __size_of_printError 0112                _move_ball 1B52  
              _shiftOut1 2C90                _shiftOut2 2C0C                _shiftOut3 2B84  
              _shiftOut4 2AFC                 i2u270_40 08DE                 i2u270_41 08DA  
               i2u271_40 08EE                 i2u271_41 08EA                 i2u280_40 0C00  
               i2u272_40 0934                 i2u280_41 0BFC                 i2u272_41 0930  
               i2u281_40 0FB0                 i2u273_40 0980                 i2u281_41 0FAC  
               i2u273_41 097C                 i2u290_40 10EC                 i2u282_40 0FC4  
               i2u274_40 0A2C                 i2u290_41 10E8                 i2u282_41 0FC0  
               i2u274_41 0A28                 i2u291_40 1140                 i2u283_40 1018  
               i2u275_40 0A7A                 i2u267_40 0866                 i2u291_41 113C  
               i2u283_41 1014                 i2u275_41 0A76                 i2u267_41 0862  
               i2u292_40 1154                 i2u284_40 102C                 i2u276_40 0AC2  
               i2u268_40 087C                 i2u380_40 2132                 i2u292_41 1150  
               i2u284_41 1028                 i2u276_41 0ABE                 i2u268_41 0878  
               i2u380_41 212E                 i2u293_40 116C                 i2u285_40 1044  
               i2u277_40 0B6E                 i2u269_40 0894                 i2u381_40 2144  
               i2u293_41 1168                 i2u285_41 1040                 i2u277_41 0B6A  
               i2u269_41 0890                 i2u381_41 2140                 i2u294_40 1180  
               i2u286_40 1058                 i2u278_40 0BBC                 i2u382_40 2152  
               i2u294_41 117C                 i2u286_41 1054                 i2u278_41 0BB8  
               i2u382_41 214E                 i2u295_40 11D4                 i2u287_40 10AC  
               i2u279_40 0BE0                 i2u383_40 2170                 i2u295_41 11D0  
               i2u287_41 10A8                 i2u279_41 0BDC                 i2u383_41 216C  
               i2u296_40 11E8                 i2u288_40 10C0                 i2u384_40 218E  
               i2u296_41 11E4                 i2u288_41 10BC                 i2u384_41 218A  
               i2u297_40 126C                 i2u289_40 10D8                 i2u385_40 21AC  
               i2u297_41 1268                 i2u289_41 10D4                 i2u385_41 21A8  
               i2u298_40 130C                 i2u386_40 21D2                 i2u298_41 1308  
               i2u386_41 21CE                 i2u387_40 21FA                 i2u379_40 2124  
               i2u387_41 21F4                 i2u379_41 2120                 i2u387_46 21FC  
               i2u388_40 2212                 i2u388_41 220E                 i2u389_40 2222  
               i2u389_41 221E                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
              _updateCar 1D66                _updateMap 0448               _ADCON0bits 000FC2  
      ___wmul@multiplier 0015            _set_register1 2EA0            _set_register2 2E82  
          _set_register3 2E64            _set_register4 2E46                main@speed 00FA  
              copy_data0 290E                copy_data1 2932                copy_data2 2952  
             updateCar@j 001B               updateMap@i 0025               updateMap@j 0027  
           board@left_up 0006                 __Hrparam 0000               ?_move_ball 0001  
             ?_shiftOut1 0015               ?_shiftOut2 0015               ?_shiftOut3 0015  
             ?_shiftOut4 0015                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___fldiv 039C         __size_of___awmod 00B2         __size_of___fltol 0106  
             ?_updateCar 0001               ?_updateMap 0001           ?_set_register1 0019  
         ?_set_register2 0019           ?_set_register3 0019           ?_set_register4 0019  
           shiftOut1@val 0015             shiftOut2@val 0015             shiftOut3@val 0015  
           shiftOut4@val 0015                 ___xxtofl 1F48                plot@F2600 00D8  
              plot@F2594 0043                plot@F2596 003B                plot@F2598 00E0  
       __size_of_initMap 02AE         __size_of_initial 027A                 _endSnake 004D  
               __ptext10 2AFC                 __ptext11 2E64                 __ptext20 2686  
               __ptext12 2B84                 __ptext21 2A5E                 __ptext13 2E82  
               __ptext30 0826                 __ptext22 2E20                 __ptext14 2C0C  
               __ptext31 0F9E                 __ptext23 29AC                 __ptext15 2EA0  
               __ptext24 2830                 __ptext16 2C90                 __ptext25 1B52  
               __ptext17 162A                 __ptext26 1F48                 __ptext18 2D66  
               __ptext27 2480                 __ptext19 2DF2                 __ptext28 0C02  
          __size_of_ball 00CA            __size_of_main 031C            __size_of_rand 00DC  
          __size_of_move 03DC            __size_of_plot 0436            __size_of_time 004C  
          ?_clear_matrix 0001                 _printWin 224C                 int$flags 006B  
              printWin@i 0019                printWin@j 001B             ??_printError 0015  
             _INTCONbits 000FF2                 initMap@i 00F4                 initMap@j 00F6  
               initial@k 0019                 intlevel2 0000              _right_board 0080  
         ??_clear_matrix 001B       __end_of_printError 2480              ??_move_ball 0015  
            ??_shiftOut1 0016              ??_shiftOut2 0016              ??_shiftOut3 0016  
            ??_shiftOut4 0016          ??_set_register1 001A          ??_set_register2 001A  
        ??_set_register3 001A          ??_set_register4 001A              ??_updateCar 0015  
            ??_updateMap 001D        move_ball@x_direct 0017        move_ball@y_direct 0019  
       move_ball@rebound 001B  
