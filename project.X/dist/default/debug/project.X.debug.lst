

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 30 20:39:10 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4520 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  002B88                     __pidataCOMRAM:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _player
    95  002B88  04                 	db	4
    96  002B89  0F                 	db	15
    97                           
    98                           ;initializer for _ball_last_y
    99  002B8A  0005               	dw	5
   100                           
   101                           ;initializer for _ball_last_x
   102  002B8C  0003               	dw	3
   103                           
   104                           ;initializer for _ball_y
   105  002B8E  0006               	dw	6
   106                           
   107                           ;initializer for _ball_x
   108  002B90  0004               	dw	4
   109                           
   110                           ;initializer for _input
   111  002B92  09                 	db	9
   112                           
   113                           	psect	idataBANK0
   114  002A7C                     __pidataBANK0:
   115                           	opt callstack 0
   116                           
   117                           ;initializer for _right_board
   118  002A7C  0000               	dw	0
   119  002A7E  0000               	dw	0
   120  002A80  0000               	dw	0
   121  002A82  0000               	dw	0
   122  002A84  0001               	dw	1
   123  002A86  0001               	dw	1
   124  002A88  0001               	dw	1
   125  002A8A  0001               	dw	1
   126  002A8C  0001               	dw	1
   127  002A8E  0001               	dw	1
   128  002A90  0001               	dw	1
   129  002A92  0001               	dw	1
   130  002A94  0000               	dw	0
   131  002A96  0000               	dw	0
   132  002A98  0000               	dw	0
   133  002A9A  0000               	dw	0
   134                           
   135                           ;initializer for _left_board
   136  002A9C  0000               	dw	0
   137  002A9E  0000               	dw	0
   138  002AA0  0000               	dw	0
   139  002AA2  0000               	dw	0
   140  002AA4  0001               	dw	1
   141  002AA6  0001               	dw	1
   142  002AA8  0001               	dw	1
   143  002AAA  0001               	dw	1
   144  002AAC  0001               	dw	1
   145  002AAE  0001               	dw	1
   146  002AB0  0001               	dw	1
   147  002AB2  0001               	dw	1
   148  002AB4  0000               	dw	0
   149  002AB6  0000               	dw	0
   150  002AB8  0000               	dw	0
   151  002ABA  0000               	dw	0
   152                           
   153                           	psect	idataBANK1
   154  002174                     __pidataBANK1:
   155                           	opt callstack 0
   156                           
   157                           ;initializer for _outputMap1
   158  002174  01                 	db	1
   159  002175  01                 	db	1
   160  002176  01                 	db	1
   161  002177  01                 	db	1
   162  002178  01                 	db	1
   163  002179  01                 	db	1
   164  00217A  01                 	db	1
   165  00217B  01                 	db	1
   166  00217C  01                 	db	1
   167  00217D  01                 	db	1
   168  00217E  01                 	db	1
   169  00217F  01                 	db	1
   170  002180  01                 	db	1
   171  002181  01                 	db	1
   172  002182  01                 	db	1
   173  002183  01                 	db	1
   174  002184  01                 	db	1
   175  002185  00                 	db	0
   176  002186  00                 	db	0
   177  002187  00                 	db	0
   178  002188  00                 	db	0
   179  002189  00                 	db	0
   180  00218A  00                 	db	0
   181  00218B  00                 	db	0
   182  00218C  00                 	db	0
   183  00218D  00                 	db	0
   184  00218E  00                 	db	0
   185  00218F  00                 	db	0
   186  002190  00                 	db	0
   187  002191  00                 	db	0
   188  002192  00                 	db	0
   189  002193  01                 	db	1
   190  002194  01                 	db	1
   191  002195  00                 	db	0
   192  002196  00                 	db	0
   193  002197  00                 	db	0
   194  002198  00                 	db	0
   195  002199  00                 	db	0
   196  00219A  00                 	db	0
   197  00219B  00                 	db	0
   198  00219C  00                 	db	0
   199  00219D  00                 	db	0
   200  00219E  00                 	db	0
   201  00219F  00                 	db	0
   202  0021A0  00                 	db	0
   203  0021A1  00                 	db	0
   204  0021A2  00                 	db	0
   205  0021A3  01                 	db	1
   206  0021A4  01                 	db	1
   207  0021A5  00                 	db	0
   208  0021A6  00                 	db	0
   209  0021A7  00                 	db	0
   210  0021A8  00                 	db	0
   211  0021A9  00                 	db	0
   212  0021AA  00                 	db	0
   213  0021AB  00                 	db	0
   214  0021AC  00                 	db	0
   215  0021AD  00                 	db	0
   216  0021AE  00                 	db	0
   217  0021AF  00                 	db	0
   218  0021B0  00                 	db	0
   219  0021B1  00                 	db	0
   220  0021B2  00                 	db	0
   221  0021B3  01                 	db	1
   222  0021B4  01                 	db	1
   223  0021B5  00                 	db	0
   224  0021B6  00                 	db	0
   225  0021B7  00                 	db	0
   226  0021B8  00                 	db	0
   227  0021B9  00                 	db	0
   228  0021BA  01                 	db	1
   229  0021BB  01                 	db	1
   230  0021BC  01                 	db	1
   231  0021BD  01                 	db	1
   232  0021BE  01                 	db	1
   233  0021BF  01                 	db	1
   234  0021C0  01                 	db	1
   235  0021C1  01                 	db	1
   236  0021C2  00                 	db	0
   237  0021C3  01                 	db	1
   238  0021C4  01                 	db	1
   239  0021C5  00                 	db	0
   240  0021C6  00                 	db	0
   241  0021C7  00                 	db	0
   242  0021C8  00                 	db	0
   243  0021C9  00                 	db	0
   244  0021CA  01                 	db	1
   245  0021CB  01                 	db	1
   246  0021CC  01                 	db	1
   247  0021CD  01                 	db	1
   248  0021CE  01                 	db	1
   249  0021CF  01                 	db	1
   250  0021D0  01                 	db	1
   251  0021D1  01                 	db	1
   252  0021D2  00                 	db	0
   253  0021D3  01                 	db	1
   254  0021D4  01                 	db	1
   255  0021D5  00                 	db	0
   256  0021D6  00                 	db	0
   257  0021D7  00                 	db	0
   258  0021D8  00                 	db	0
   259  0021D9  00                 	db	0
   260  0021DA  00                 	db	0
   261  0021DB  00                 	db	0
   262  0021DC  00                 	db	0
   263  0021DD  00                 	db	0
   264  0021DE  00                 	db	0
   265  0021DF  00                 	db	0
   266  0021E0  00                 	db	0
   267  0021E1  00                 	db	0
   268  0021E2  00                 	db	0
   269  0021E3  01                 	db	1
   270  0021E4  01                 	db	1
   271  0021E5  00                 	db	0
   272  0021E6  00                 	db	0
   273  0021E7  00                 	db	0
   274  0021E8  00                 	db	0
   275  0021E9  00                 	db	0
   276  0021EA  00                 	db	0
   277  0021EB  00                 	db	0
   278  0021EC  00                 	db	0
   279  0021ED  00                 	db	0
   280  0021EE  00                 	db	0
   281  0021EF  00                 	db	0
   282  0021F0  00                 	db	0
   283  0021F1  00                 	db	0
   284  0021F2  00                 	db	0
   285  0021F3  01                 	db	1
   286  0021F4  01                 	db	1
   287  0021F5  00                 	db	0
   288  0021F6  00                 	db	0
   289  0021F7  00                 	db	0
   290  0021F8  00                 	db	0
   291  0021F9  00                 	db	0
   292  0021FA  00                 	db	0
   293  0021FB  00                 	db	0
   294  0021FC  00                 	db	0
   295  0021FD  00                 	db	0
   296  0021FE  00                 	db	0
   297  0021FF  00                 	db	0
   298  002200  00                 	db	0
   299  002201  00                 	db	0
   300  002202  00                 	db	0
   301  002203  01                 	db	1
   302  002204  01                 	db	1
   303  002205  00                 	db	0
   304  002206  00                 	db	0
   305  002207  00                 	db	0
   306  002208  00                 	db	0
   307  002209  00                 	db	0
   308  00220A  01                 	db	1
   309  00220B  01                 	db	1
   310  00220C  01                 	db	1
   311  00220D  01                 	db	1
   312  00220E  01                 	db	1
   313  00220F  01                 	db	1
   314  002210  01                 	db	1
   315  002211  01                 	db	1
   316  002212  00                 	db	0
   317  002213  01                 	db	1
   318  002214  01                 	db	1
   319  002215  00                 	db	0
   320  002216  00                 	db	0
   321  002217  00                 	db	0
   322  002218  00                 	db	0
   323  002219  00                 	db	0
   324  00221A  01                 	db	1
   325  00221B  01                 	db	1
   326  00221C  01                 	db	1
   327  00221D  01                 	db	1
   328  00221E  01                 	db	1
   329  00221F  01                 	db	1
   330  002220  01                 	db	1
   331  002221  01                 	db	1
   332  002222  00                 	db	0
   333  002223  01                 	db	1
   334  002224  01                 	db	1
   335  002225  00                 	db	0
   336  002226  00                 	db	0
   337  002227  00                 	db	0
   338  002228  00                 	db	0
   339  002229  00                 	db	0
   340  00222A  00                 	db	0
   341  00222B  00                 	db	0
   342  00222C  00                 	db	0
   343  00222D  00                 	db	0
   344  00222E  00                 	db	0
   345  00222F  00                 	db	0
   346  002230  00                 	db	0
   347  002231  00                 	db	0
   348  002232  00                 	db	0
   349  002233  01                 	db	1
   350  002234  01                 	db	1
   351  002235  00                 	db	0
   352  002236  00                 	db	0
   353  002237  00                 	db	0
   354  002238  00                 	db	0
   355  002239  00                 	db	0
   356  00223A  00                 	db	0
   357  00223B  00                 	db	0
   358  00223C  00                 	db	0
   359  00223D  00                 	db	0
   360  00223E  00                 	db	0
   361  00223F  00                 	db	0
   362  002240  00                 	db	0
   363  002241  00                 	db	0
   364  002242  00                 	db	0
   365  002243  01                 	db	1
   366  002244  01                 	db	1
   367  002245  00                 	db	0
   368  002246  00                 	db	0
   369  002247  00                 	db	0
   370  002248  00                 	db	0
   371  002249  00                 	db	0
   372  00224A  00                 	db	0
   373  00224B  00                 	db	0
   374  00224C  00                 	db	0
   375  00224D  00                 	db	0
   376  00224E  00                 	db	0
   377  00224F  00                 	db	0
   378  002250  00                 	db	0
   379  002251  00                 	db	0
   380  002252  00                 	db	0
   381  002253  01                 	db	1
   382  002254  01                 	db	1
   383  002255  00                 	db	0
   384  002256  00                 	db	0
   385  002257  00                 	db	0
   386  002258  00                 	db	0
   387  002259  00                 	db	0
   388  00225A  00                 	db	0
   389  00225B  00                 	db	0
   390  00225C  00                 	db	0
   391  00225D  00                 	db	0
   392  00225E  00                 	db	0
   393  00225F  00                 	db	0
   394  002260  00                 	db	0
   395  002261  00                 	db	0
   396  002262  00                 	db	0
   397  002263  01                 	db	1
   398  002264  01                 	db	1
   399  002265  01                 	db	1
   400  002266  01                 	db	1
   401  002267  01                 	db	1
   402  002268  01                 	db	1
   403  002269  01                 	db	1
   404  00226A  01                 	db	1
   405  00226B  01                 	db	1
   406  00226C  01                 	db	1
   407  00226D  01                 	db	1
   408  00226E  01                 	db	1
   409  00226F  01                 	db	1
   410  002270  01                 	db	1
   411  002271  01                 	db	1
   412  002272  01                 	db	1
   413  002273  01                 	db	1
   414  0000                     _PORTD	set	3971
   415  0000                     _TRISAbits	set	3986
   416  0000                     _LATA	set	3977
   417  0000                     _PORTA	set	3968
   418  0000                     _LATCbits	set	3979
   419  0000                     _LATDbits	set	3980
   420  0000                     _LATBbits	set	3978
   421  0000                     _TRISD	set	3989
   422  0000                     _TRISC	set	3988
   423  0000                     _TRISB	set	3987
   424  0000                     _PORTDbits	set	3971
   425  0000                     _ADRES	set	4035
   426  0000                     _ADCON0bits	set	4034
   427  0000                     _RCONbits	set	4048
   428  0000                     _ADCON2	set	4032
   429  0000                     _ADCON1	set	4033
   430  0000                     _ADCON0	set	4034
   431  0000                     _T0CON	set	4053
   432  0000                     _TMR0L	set	4054
   433  0000                     _INTCONbits	set	4082
   434  0000                     _TMR0IE	set	32661
   435  0000                     _TMR0IF	set	32658
   436                           
   437                           ; #config settings
   438  0000                     
   439                           	psect	cinit
   440  0025C4                     __pcinit:
   441                           	opt callstack 0
   442  0025C4                     start_initialization:
   443                           	opt callstack 0
   444  0025C4                     __initialization:
   445                           	opt callstack 0
   446                           
   447                           ; Initialize objects allocated to BANK1 (256 bytes)
   448                           ; load TBLPTR registers with __pidataBANK1
   449  0025C4  0E74               	movlw	low __pidataBANK1
   450  0025C6  6EF6               	movwf	tblptrl,c
   451  0025C8  0E21               	movlw	high __pidataBANK1
   452  0025CA  6EF7               	movwf	tblptrh,c
   453  0025CC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   454  0025CE  6EF8               	movwf	tblptru,c
   455  0025D0  EE01  F000         	lfsr	0,__pdataBANK1
   456  0025D4  EE11 F000          	lfsr	1,256
   457  0025D8                     copy_data0:
   458  0025D8  0009               	tblrd		*+
   459  0025DA  CFF5 FFEE          	movff	tablat,postinc0
   460  0025DE  50E5               	movf	postdec1,w,c
   461  0025E0  50E1               	movf	fsr1l,w,c
   462  0025E2  E1FA               	bnz	copy_data0
   463  0025E4  50E2               	movf	fsr1h,w,c
   464  0025E6  E1F8               	bnz	copy_data0
   465                           
   466                           ; Initialize objects allocated to BANK0 (64 bytes)
   467                           ; load TBLPTR registers with __pidataBANK0
   468  0025E8  0E7C               	movlw	low __pidataBANK0
   469  0025EA  6EF6               	movwf	tblptrl,c
   470  0025EC  0E2A               	movlw	high __pidataBANK0
   471  0025EE  6EF7               	movwf	tblptrh,c
   472  0025F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   473  0025F2  6EF8               	movwf	tblptru,c
   474  0025F4  EE00  F080         	lfsr	0,__pdataBANK0
   475  0025F8  EE10 F040          	lfsr	1,64
   476  0025FC                     copy_data1:
   477  0025FC  0009               	tblrd		*+
   478  0025FE  CFF5 FFEE          	movff	tablat,postinc0
   479  002602  50E5               	movf	postdec1,w,c
   480  002604  50E1               	movf	fsr1l,w,c
   481  002606  E1FA               	bnz	copy_data1
   482                           
   483                           ; Initialize objects allocated to COMRAM (11 bytes)
   484                           ; load TBLPTR registers with __pidataCOMRAM
   485  002608  0E88               	movlw	low __pidataCOMRAM
   486  00260A  6EF6               	movwf	tblptrl,c
   487  00260C  0E2B               	movlw	high __pidataCOMRAM
   488  00260E  6EF7               	movwf	tblptrh,c
   489  002610  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   490  002612  6EF8               	movwf	tblptru,c
   491  002614  EE00  F060         	lfsr	0,__pdataCOMRAM
   492  002618  EE10 F00B          	lfsr	1,11
   493  00261C                     copy_data2:
   494  00261C  0009               	tblrd		*+
   495  00261E  CFF5 FFEE          	movff	tablat,postinc0
   496  002622  50E5               	movf	postdec1,w,c
   497  002624  50E1               	movf	fsr1l,w,c
   498  002626  E1FA               	bnz	copy_data2
   499                           
   500                           ; Clear objects allocated to BANK3 (256 bytes)
   501  002628  EE03  F000         	lfsr	0,__pbssBANK3
   502  00262C  EE11 F000          	lfsr	1,256
   503  002630                     clear_0:
   504  002630  6AEE               	clrf	postinc0,c
   505  002632  50E5               	movf	postdec1,w,c
   506  002634  50E1               	movf	fsr1l,w,c
   507  002636  E1FC               	bnz	clear_0
   508  002638  50E2               	movf	fsr1h,w,c
   509  00263A  E1FA               	bnz	clear_0
   510                           
   511                           ; Clear objects allocated to BANK2 (256 bytes)
   512  00263C  EE02  F000         	lfsr	0,__pbssBANK2
   513  002640  EE11 F000          	lfsr	1,256
   514  002644                     clear_1:
   515  002644  6AEE               	clrf	postinc0,c
   516  002646  50E5               	movf	postdec1,w,c
   517  002648  50E1               	movf	fsr1l,w,c
   518  00264A  E1FC               	bnz	clear_1
   519  00264C  50E2               	movf	fsr1h,w,c
   520  00264E  E1FA               	bnz	clear_1
   521                           
   522                           ; Clear objects allocated to BANK0 (40 bytes)
   523  002650  EE00  F0C0         	lfsr	0,__pbssBANK0
   524  002654  0E28               	movlw	40
   525  002656                     clear_2:
   526  002656  6AEE               	clrf	postinc0,c
   527  002658  06E8               	decf	wreg,f,c
   528  00265A  E1FD               	bnz	clear_2
   529                           
   530                           ; Clear objects allocated to COMRAM (36 bytes)
   531  00265C  EE00  F03C         	lfsr	0,__pbssCOMRAM
   532  002660  0E24               	movlw	36
   533  002662                     clear_3:
   534  002662  6AEE               	clrf	postinc0,c
   535  002664  06E8               	decf	wreg,f,c
   536  002666  E1FD               	bnz	clear_3
   537  002668                     end_of_initialization:
   538                           	opt callstack 0
   539  002668                     __end_of__initialization:
   540                           	opt callstack 0
   541  002668  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   542  00266A  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   543  00266C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   544  00266E  6EF8               	movwf	tblptru,c
   545  002670  0100               	movlb	0
   546  002672  EF4E  F009         	goto	_main	;jump to C main() function
   547                           
   548                           	psect	bssCOMRAM
   549  00003C                     __pbssCOMRAM:
   550                           	opt callstack 0
   551  00003C                     	ds	8
   552  000044                     	ds	8
   553  00004C                     _endBall:
   554                           	opt callstack 0
   555  00004C                     	ds	2
   556  00004E                     _endSnake:
   557                           	opt callstack 0
   558  00004E                     	ds	2
   559  000050                     _d:
   560                           	opt callstack 0
   561  000050                     	ds	1
   562  000051                     _c:
   563                           	opt callstack 0
   564  000051                     	ds	1
   565  000052                     _b:
   566                           	opt callstack 0
   567  000052                     	ds	1
   568  000053                     _a:
   569                           	opt callstack 0
   570  000053                     	ds	1
   571  000054                     _select:
   572                           	opt callstack 0
   573  000054                     	ds	1
   574  000055                     _end:
   575                           	opt callstack 0
   576  000055                     	ds	1
   577  000056                     _error:
   578                           	opt callstack 0
   579  000056                     	ds	1
   580  000057                     _seed:
   581                           	opt callstack 0
   582  000057                     	ds	8
   583  00005F                     _mode:
   584                           	opt callstack 0
   585  00005F                     	ds	1
   586                           
   587                           	psect	dataCOMRAM
   588  000060                     __pdataCOMRAM:
   589                           	opt callstack 0
   590  000060                     _player:
   591                           	opt callstack 0
   592  000060                     	ds	2
   593  000062                     _ball_last_y:
   594                           	opt callstack 0
   595  000062                     	ds	2
   596  000064                     _ball_last_x:
   597                           	opt callstack 0
   598  000064                     	ds	2
   599  000066                     _ball_y:
   600                           	opt callstack 0
   601  000066                     	ds	2
   602  000068                     _ball_x:
   603                           	opt callstack 0
   604  000068                     	ds	2
   605  00006A                     _input:
   606                           	opt callstack 0
   607  00006A                     	ds	1
   608                           
   609                           	psect	bssBANK0
   610  0000C0                     __pbssBANK0:
   611                           	opt callstack 0
   612  0000C0                     _car:
   613                           	opt callstack 0
   614  0000C0                     	ds	24
   615  0000D8                     	ds	8
   616  0000E0                     	ds	8
   617                           
   618                           	psect	dataBANK0
   619  000080                     __pdataBANK0:
   620                           	opt callstack 0
   621  000080                     _right_board:
   622                           	opt callstack 0
   623  000080                     	ds	32
   624  0000A0                     _left_board:
   625                           	opt callstack 0
   626  0000A0                     	ds	32
   627                           
   628                           	psect	dataBANK1
   629  000100                     __pdataBANK1:
   630                           	opt callstack 0
   631  000100                     _outputMap1:
   632                           	opt callstack 0
   633  000100                     	ds	256
   634                           
   635                           	psect	bssBANK2
   636  000200                     __pbssBANK2:
   637                           	opt callstack 0
   638  000200                     _map:
   639                           	opt callstack 0
   640  000200                     	ds	256
   641                           
   642                           	psect	bssBANK3
   643  000300                     __pbssBANK3:
   644                           	opt callstack 0
   645  000300                     _LED:
   646                           	opt callstack 0
   647  000300                     	ds	256
   648                           
   649                           	psect	cstackBANK4
   650  000400                     __pcstackBANK4:
   651                           	opt callstack 0
   652  000400                     plot@char_pattern1:
   653                           	opt callstack 0
   654                           
   655                           ; 8 bytes @ 0x0
   656  000400                     	ds	8
   657  000408                     plot@char_pattern2:
   658                           	opt callstack 0
   659                           
   660                           ; 8 bytes @ 0x8
   661  000408                     	ds	8
   662  000410                     plot@char_pattern3:
   663                           	opt callstack 0
   664                           
   665                           ; 8 bytes @ 0x10
   666  000410                     	ds	8
   667  000418                     plot@char_pattern4:
   668                           	opt callstack 0
   669                           
   670                           ; 8 bytes @ 0x18
   671  000418                     	ds	8
   672  000420                     plot@j:
   673                           	opt callstack 0
   674                           
   675                           ; 2 bytes @ 0x20
   676  000420                     	ds	2
   677  000422                     plot@i:
   678                           	opt callstack 0
   679                           
   680                           ; 2 bytes @ 0x22
   681  000422                     	ds	2
   682                           
   683                           	psect	cstackBANK0
   684  0000E8                     __pcstackBANK0:
   685                           	opt callstack 0
   686  0000E8                     ?___fltol:
   687                           	opt callstack 0
   688  0000E8                     ___awmod@counter:
   689                           	opt callstack 0
   690  0000E8                     ___fltol@f1:
   691                           	opt callstack 0
   692                           
   693                           ; 4 bytes @ 0x0
   694  0000E8                     	ds	1
   695  0000E9                     ___awmod@sign:
   696                           	opt callstack 0
   697                           
   698                           ; 1 bytes @ 0x1
   699  0000E9                     	ds	1
   700  0000EA                     ??_initMap:
   701                           
   702                           ; 1 bytes @ 0x2
   703  0000EA                     	ds	2
   704  0000EC                     ??___fltol:
   705                           
   706                           ; 1 bytes @ 0x4
   707  0000EC                     	ds	4
   708  0000F0                     ___fltol@sign1:
   709                           	opt callstack 0
   710                           
   711                           ; 1 bytes @ 0x8
   712  0000F0                     	ds	1
   713  0000F1                     ___fltol@exp1:
   714                           	opt callstack 0
   715                           
   716                           ; 1 bytes @ 0x9
   717  0000F1                     	ds	1
   718  0000F2                     initMap@num:
   719                           	opt callstack 0
   720                           
   721                           ; 2 bytes @ 0xA
   722  0000F2                     	ds	2
   723  0000F4                     initMap@i:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0xC
   727  0000F4                     	ds	2
   728  0000F6                     initMap@j:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0xE
   732  0000F6                     	ds	2
   733  0000F8                     ??_main:
   734                           
   735                           ; 1 bytes @ 0x10
   736  0000F8                     	ds	2
   737  0000FA                     main@speed:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x12
   741  0000FA                     	ds	2
   742                           
   743                           	psect	cstackCOMRAM
   744  000001                     __pcstackCOMRAM:
   745                           	opt callstack 0
   746  000001                     board@left_down:
   747                           	opt callstack 0
   748  000001                     move@direct:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x0
   752  000001                     	ds	1
   753  000002                     board@right_up:
   754                           	opt callstack 0
   755                           
   756                           ; 1 bytes @ 0x1
   757  000002                     	ds	1
   758  000003                     ??_move:
   759  000003                     board@right_down:
   760                           	opt callstack 0
   761                           
   762                           ; 1 bytes @ 0x2
   763  000003                     	ds	1
   764  000004                     ??_board:
   765                           
   766                           ; 1 bytes @ 0x3
   767  000004                     	ds	2
   768  000006                     board@left_up:
   769                           	opt callstack 0
   770                           
   771                           ; 1 bytes @ 0x5
   772  000006                     	ds	1
   773  000007                     board@k:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x6
   777  000007                     	ds	2
   778  000009                     board@i:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0x8
   782  000009                     	ds	2
   783  00000B                     move@i:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0xA
   787  00000B                     	ds	2
   788  00000D                     move@j:
   789                           	opt callstack 0
   790                           
   791                           ; 2 bytes @ 0xC
   792  00000D                     	ds	2
   793  00000F                     ??_ISR:
   794                           
   795                           ; 1 bytes @ 0xE
   796  00000F                     	ds	6
   797  000015                     ??_initial:
   798  000015                     ??_printError:
   799  000015                     ??_updateCar:
   800  000015                     ??_move_ball:
   801  000015                     ?___wmul:
   802                           	opt callstack 0
   803  000015                     ?___xxtofl:
   804                           	opt callstack 0
   805  000015                     ?_time:
   806                           	opt callstack 0
   807  000015                     ?___omul:
   808                           	opt callstack 0
   809  000015                     shiftOut1@val:
   810                           	opt callstack 0
   811  000015                     shiftOut2@val:
   812                           	opt callstack 0
   813  000015                     shiftOut3@val:
   814                           	opt callstack 0
   815  000015                     shiftOut4@val:
   816                           	opt callstack 0
   817  000015                     ___wmul@multiplier:
   818                           	opt callstack 0
   819  000015                     time@t:
   820                           	opt callstack 0
   821  000015                     ___xxtofl@val:
   822                           	opt callstack 0
   823  000015                     ___omul@multiplier:
   824                           	opt callstack 0
   825                           
   826                           ; 8 bytes @ 0x14
   827  000015                     	ds	1
   828  000016                     ??_shiftOut1:
   829  000016                     ??_shiftOut2:
   830  000016                     ??_shiftOut3:
   831  000016                     ??_shiftOut4:
   832                           
   833                           ; 1 bytes @ 0x15
   834  000016                     	ds	1
   835  000017                     shiftOut1@bitOrder:
   836                           	opt callstack 0
   837  000017                     shiftOut2@bitOrder:
   838                           	opt callstack 0
   839  000017                     shiftOut3@bitOrder:
   840                           	opt callstack 0
   841  000017                     shiftOut4@bitOrder:
   842                           	opt callstack 0
   843  000017                     move_ball@x_direct:
   844                           	opt callstack 0
   845  000017                     ___wmul@multiplicand:
   846                           	opt callstack 0
   847                           
   848                           ; 2 bytes @ 0x16
   849  000017                     	ds	1
   850  000018                     shiftOut1@i:
   851                           	opt callstack 0
   852  000018                     shiftOut2@i:
   853                           	opt callstack 0
   854  000018                     shiftOut3@i:
   855                           	opt callstack 0
   856  000018                     shiftOut4@i:
   857                           	opt callstack 0
   858                           
   859                           ; 1 bytes @ 0x17
   860  000018                     	ds	1
   861  000019                     ??___xxtofl:
   862  000019                     set_register1@value:
   863                           	opt callstack 0
   864  000019                     set_register2@value:
   865                           	opt callstack 0
   866  000019                     set_register3@value:
   867                           	opt callstack 0
   868  000019                     set_register4@value:
   869                           	opt callstack 0
   870  000019                     printError@i:
   871                           	opt callstack 0
   872  000019                     updateCar@num:
   873                           	opt callstack 0
   874  000019                     move_ball@y_direct:
   875                           	opt callstack 0
   876  000019                     initial@k:
   877                           	opt callstack 0
   878  000019                     ___wmul@product:
   879                           	opt callstack 0
   880                           
   881                           ; 2 bytes @ 0x18
   882  000019                     	ds	1
   883  00001A                     set_register1@address:
   884                           	opt callstack 0
   885  00001A                     set_register2@address:
   886                           	opt callstack 0
   887  00001A                     set_register3@address:
   888                           	opt callstack 0
   889  00001A                     set_register4@address:
   890                           	opt callstack 0
   891                           
   892                           ; 1 bytes @ 0x19
   893  00001A                     	ds	1
   894  00001B                     clear_matrix@i:
   895                           	opt callstack 0
   896  00001B                     plot@pattern:
   897                           	opt callstack 0
   898  00001B                     printError@j:
   899                           	opt callstack 0
   900  00001B                     updateCar@j:
   901                           	opt callstack 0
   902  00001B                     move_ball@rebound:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x1A
   906  00001B                     	ds	2
   907  00001D                     ??_plot:
   908  00001D                     ??_updateMap:
   909  00001D                     ??_ball:
   910  00001D                     ___xxtofl@sign:
   911                           	opt callstack 0
   912  00001D                     srand@s:
   913                           	opt callstack 0
   914  00001D                     ___omul@multiplicand:
   915                           	opt callstack 0
   916                           
   917                           ; 8 bytes @ 0x1C
   918  00001D                     	ds	1
   919  00001E                     ___xxtofl@exp:
   920                           	opt callstack 0
   921                           
   922                           ; 1 bytes @ 0x1D
   923  00001E                     	ds	1
   924  00001F                     ??_srand:
   925  00001F                     ___xxtofl@arg:
   926                           	opt callstack 0
   927                           
   928                           ; 4 bytes @ 0x1E
   929  00001F                     	ds	2
   930  000021                     ball@i:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x20
   934  000021                     	ds	2
   935  000023                     ?___fldiv:
   936                           	opt callstack 0
   937  000023                     ball@j:
   938                           	opt callstack 0
   939  000023                     ___fldiv@b:
   940                           	opt callstack 0
   941                           
   942                           ; 4 bytes @ 0x22
   943  000023                     	ds	2
   944  000025                     updateMap@i:
   945                           	opt callstack 0
   946  000025                     ___omul@product:
   947                           	opt callstack 0
   948                           
   949                           ; 8 bytes @ 0x24
   950  000025                     	ds	2
   951  000027                     updateMap@j:
   952                           	opt callstack 0
   953  000027                     ___fldiv@a:
   954                           	opt callstack 0
   955                           
   956                           ; 4 bytes @ 0x26
   957  000027                     	ds	4
   958  00002B                     ??___fldiv:
   959                           
   960                           ; 1 bytes @ 0x2A
   961  00002B                     	ds	2
   962  00002D                     ?_rand:
   963                           	opt callstack 0
   964                           
   965                           ; 2 bytes @ 0x2C
   966  00002D                     	ds	2
   967  00002F                     ??_rand:
   968  00002F                     ___fldiv@rem:
   969                           	opt callstack 0
   970                           
   971                           ; 4 bytes @ 0x2E
   972  00002F                     	ds	4
   973  000033                     ___fldiv@sign:
   974                           	opt callstack 0
   975                           
   976                           ; 1 bytes @ 0x32
   977  000033                     	ds	1
   978  000034                     ___fldiv@new_exp:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x33
   982  000034                     	ds	2
   983  000036                     ___fldiv@grs:
   984                           	opt callstack 0
   985                           
   986                           ; 4 bytes @ 0x35
   987  000036                     	ds	1
   988  000037                     ?___awmod:
   989                           	opt callstack 0
   990  000037                     ___awmod@dividend:
   991                           	opt callstack 0
   992                           
   993                           ; 2 bytes @ 0x36
   994  000037                     	ds	2
   995  000039                     ___awmod@divisor:
   996                           	opt callstack 0
   997                           
   998                           ; 2 bytes @ 0x38
   999  000039                     	ds	1
  1000  00003A                     ___fldiv@bexp:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x39
  1004  00003A                     	ds	1
  1005  00003B                     ___fldiv@aexp:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x3A
  1009  00003B                     	ds	1
  1010                           
  1011 ;;
  1012 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1013 ;;
  1014 ;; *************** function _main *****************
  1015 ;; Defined at:
  1016 ;;		line 151 in file "main.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  speed           2   18[BANK0 ] int 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1030 ;;      Params:         0       0       0       0       0       0       0
  1031 ;;      Locals:         0       2       0       0       0       0       0
  1032 ;;      Temps:          0       2       0       0       0       0       0
  1033 ;;      Totals:         0       4       0       0       0       0       0
  1034 ;;Total ram usage:        4 bytes
  1035 ;; Hardware stack levels required when called:    6
  1036 ;; This function calls:
  1037 ;;		___fldiv
  1038 ;;		___fltol
  1039 ;;		___xxtofl
  1040 ;;		_ball
  1041 ;;		_initMap
  1042 ;;		_init_max7219
  1043 ;;		_initial
  1044 ;;		_plot
  1045 ;;		_updateMap
  1046 ;; This function is called by:
  1047 ;;		Startup code after reset
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text0
  1052  00129C                     __ptext0:
  1053                           	opt callstack 0
  1054  00129C                     _main:
  1055                           	opt callstack 25
  1056  00129C                     
  1057                           ;main.c: 152:     int speed=1;
  1058  00129C  0E00               	movlw	0
  1059  00129E  0100               	movlb	0	; () banked
  1060  0012A0  6FFB               	movwf	(main@speed+1)& (0+255),b
  1061  0012A2  0E01               	movlw	1
  1062  0012A4  6FFA               	movwf	main@speed& (0+255),b
  1063                           
  1064                           ;main.c: 153:     TRISB = 0;
  1065  0012A6  0E00               	movlw	0
  1066  0012A8  6E93               	movwf	147,c	;volatile
  1067                           
  1068                           ;main.c: 154:     TRISC = 0;
  1069  0012AA  0E00               	movlw	0
  1070  0012AC  6E94               	movwf	148,c	;volatile
  1071                           
  1072                           ;main.c: 155:     TRISD = 0b00001111;
  1073  0012AE  0E0F               	movlw	15
  1074  0012B0  6E95               	movwf	149,c	;volatile
  1075  0012B2                     
  1076                           ; BSR set to: 0
  1077                           ;main.c: 156:     LATBbits.LATB4 = 0x01;
  1078  0012B2  888A               	bsf	138,4,c	;volatile
  1079  0012B4                     
  1080                           ; BSR set to: 0
  1081                           ;main.c: 157:     LATBbits.LATB1 = 0x01;
  1082  0012B4  828A               	bsf	138,1,c	;volatile
  1083  0012B6                     
  1084                           ; BSR set to: 0
  1085                           ;main.c: 158:     LATDbits.LATD5 = 0x01;
  1086  0012B6  8A8C               	bsf	140,5,c	;volatile
  1087  0012B8                     
  1088                           ; BSR set to: 0
  1089                           ;main.c: 159:     LATCbits.LATC5 = 0x01;
  1090  0012B8  8A8B               	bsf	139,5,c	;volatile
  1091                           
  1092                           ;main.c: 160:     ADCON0=0b00000001;
  1093  0012BA  0E01               	movlw	1
  1094  0012BC  6EC2               	movwf	194,c	;volatile
  1095                           
  1096                           ;main.c: 161:     ADCON1=0b00001110;
  1097  0012BE  0E0E               	movlw	14
  1098  0012C0  6EC1               	movwf	193,c	;volatile
  1099                           
  1100                           ;main.c: 162:     ADCON2=0b10001000;
  1101  0012C2  0E88               	movlw	136
  1102  0012C4  6EC0               	movwf	192,c	;volatile
  1103                           
  1104                           ;main.c: 165:     PORTA = 0x00;
  1105  0012C6  0E00               	movlw	0
  1106  0012C8  6E80               	movwf	128,c	;volatile
  1107                           
  1108                           ;main.c: 166:     LATA = 0x00;
  1109  0012CA  0E00               	movlw	0
  1110  0012CC  6E89               	movwf	137,c	;volatile
  1111  0012CE                     
  1112                           ; BSR set to: 0
  1113                           ;main.c: 167:     TRISAbits.RA4 = 1;
  1114  0012CE  8892               	bsf	146,4,c	;volatile
  1115                           
  1116                           ;main.c: 168:     PORTD = 0x00;
  1117  0012D0  0E00               	movlw	0
  1118  0012D2  6E83               	movwf	131,c	;volatile
  1119  0012D4                     
  1120                           ; BSR set to: 0
  1121                           ;main.c: 170:     TMR0L = 255;
  1122  0012D4  68D6               	setf	214,c	;volatile
  1123                           
  1124                           ;main.c: 172:     T0CON = 0b11101000;
  1125  0012D6  0EE8               	movlw	232
  1126  0012D8  6ED5               	movwf	213,c	;volatile
  1127  0012DA                     
  1128                           ; BSR set to: 0
  1129                           ;main.c: 173:     RCONbits.IPEN = 1;
  1130  0012DA  8ED0               	bsf	208,7,c	;volatile
  1131  0012DC                     
  1132                           ; BSR set to: 0
  1133                           ;main.c: 174:     INTCONbits.GIE = 1;
  1134  0012DC  8EF2               	bsf	242,7,c	;volatile
  1135  0012DE                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 175:     INTCONbits.TMR0IE = 1;
  1138  0012DE  8AF2               	bsf	242,5,c	;volatile
  1139  0012E0                     
  1140                           ; BSR set to: 0
  1141                           ;main.c: 176:     INTCONbits.TMR0IF = 0;
  1142  0012E0  94F2               	bcf	242,2,c	;volatile
  1143                           
  1144                           ;main.c: 179:     if(select==0){
  1145  0012E2  5054               	movf	_select^0,w,c
  1146  0012E4  A4D8               	btfss	status,2,c
  1147  0012E6  EF77  F009         	goto	u5121
  1148  0012EA  EF79  F009         	goto	u5120
  1149  0012EE                     u5121:
  1150  0012EE  EF84  F009         	goto	l4327
  1151  0012F2                     u5120:
  1152  0012F2                     
  1153                           ; BSR set to: 0
  1154                           ;main.c: 180:         outputMap1[4][2]=1;
  1155  0012F2  0E01               	movlw	1
  1156  0012F4  0101               	movlb	1	; () banked
  1157  0012F6  6F42               	movwf	(_outputMap1+66)& (0+255),b
  1158                           
  1159                           ;main.c: 181:         outputMap1[4][3]=1;
  1160  0012F8  0E01               	movlw	1
  1161  0012FA  6F43               	movwf	(_outputMap1+67)& (0+255),b
  1162                           
  1163                           ;main.c: 182:         outputMap1[5][2]=1;
  1164  0012FC  0E01               	movlw	1
  1165  0012FE  6F52               	movwf	(_outputMap1+82)& (0+255),b
  1166                           
  1167                           ;main.c: 183:         outputMap1[5][3]=1;
  1168  001300  0E01               	movlw	1
  1169  001302  6F53               	movwf	(_outputMap1+83)& (0+255),b
  1170                           
  1171                           ;main.c: 184:     }
  1172  001304  EF8D  F009         	goto	l4329
  1173  001308                     l4327:
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;main.c: 186:         outputMap1[10][2]=1;
  1177  001308  0E01               	movlw	1
  1178  00130A  0101               	movlb	1	; () banked
  1179  00130C  6FA2               	movwf	(_outputMap1+162)& (0+255),b
  1180                           
  1181                           ;main.c: 187:         outputMap1[10][3]=1;
  1182  00130E  0E01               	movlw	1
  1183  001310  6FA3               	movwf	(_outputMap1+163)& (0+255),b
  1184                           
  1185                           ;main.c: 188:         outputMap1[11][2]=1;
  1186  001312  0E01               	movlw	1
  1187  001314  6FB2               	movwf	(_outputMap1+178)& (0+255),b
  1188                           
  1189                           ;main.c: 189:         outputMap1[11][3]=1;
  1190  001316  0E01               	movlw	1
  1191  001318  6FB3               	movwf	(_outputMap1+179)& (0+255),b
  1192  00131A                     l4329:
  1193                           
  1194                           ; BSR set to: 1
  1195                           ;main.c: 191:     init_max7219();
  1196  00131A  EC16  F012         	call	_init_max7219	;wreg free
  1197  00131E                     
  1198                           ;main.c: 192:     initial();
  1199  00131E  EC3A  F011         	call	_initial	;wreg free
  1200  001322                     
  1201                           ;main.c: 193:     initMap();
  1202  001322  ECDB  F00A         	call	_initMap	;wreg free
  1203  001326                     
  1204                           ;main.c: 194:     endBall=&mode;
  1205  001326  0E5F               	movlw	low _mode
  1206  001328  6E4C               	movwf	_endBall^0,c
  1207  00132A  0E00               	movlw	high _mode
  1208  00132C  6E4D               	movwf	(_endBall+1)^0,c
  1209  00132E                     
  1210                           ;main.c: 195:     endSnake=&mode;
  1211  00132E  0E5F               	movlw	low _mode
  1212  001330  6E4E               	movwf	_endSnake^0,c
  1213  001332  0E00               	movlw	high _mode
  1214  001334  6E4F               	movwf	(_endSnake+1)^0,c
  1215  001336                     l4339:
  1216                           
  1217                           ;main.c: 197:     {;main.c: 198:         if(mode==0){
  1218  001336  505F               	movf	_mode^0,w,c
  1219  001338  A4D8               	btfss	status,2,c
  1220  00133A  EFA1  F009         	goto	u5131
  1221  00133E  EFA3  F009         	goto	u5130
  1222  001342                     u5131:
  1223  001342  EFE4  F009         	goto	l4353
  1224  001346                     u5130:
  1225  001346                     
  1226                           ;main.c: 199:             speed=5;
  1227  001346  0E00               	movlw	0
  1228  001348  0100               	movlb	0	; () banked
  1229  00134A  6FFB               	movwf	(main@speed+1)& (0+255),b
  1230  00134C  0E05               	movlw	5
  1231  00134E  6FFA               	movwf	main@speed& (0+255),b
  1232  001350                     
  1233                           ; BSR set to: 0
  1234                           ;main.c: 200:             ADCON0bits.GO=1;
  1235  001350  82C2               	bsf	194,1,c	;volatile
  1236  001352                     
  1237                           ; BSR set to: 0
  1238                           ;main.c: 201:             if(ADRES<512){
  1239  001352  0E00               	movlw	0
  1240  001354  5CC3               	subwf	195,w,c	;volatile
  1241  001356  0E02               	movlw	2
  1242  001358  58C4               	subwfb	196,w,c	;volatile
  1243  00135A  B0D8               	btfsc	status,0,c
  1244  00135C  EFB2  F009         	goto	u5141
  1245  001360  EFB4  F009         	goto	u5140
  1246  001364                     u5141:
  1247  001364  EFC9  F009         	goto	l4349
  1248  001368                     u5140:
  1249  001368                     
  1250                           ; BSR set to: 0
  1251                           ;main.c: 202:                 select=1;
  1252  001368  0E01               	movlw	1
  1253  00136A  6E54               	movwf	_select^0,c
  1254                           
  1255                           ;main.c: 203:                 outputMap1[4][2]=0;
  1256  00136C  0E00               	movlw	0
  1257  00136E  0101               	movlb	1	; () banked
  1258  001370  6F42               	movwf	(_outputMap1+66)& (0+255),b
  1259                           
  1260                           ;main.c: 204:                 outputMap1[4][3]=0;
  1261  001372  0E00               	movlw	0
  1262  001374  6F43               	movwf	(_outputMap1+67)& (0+255),b
  1263                           
  1264                           ;main.c: 205:                 outputMap1[5][2]=0;
  1265  001376  0E00               	movlw	0
  1266  001378  6F52               	movwf	(_outputMap1+82)& (0+255),b
  1267                           
  1268                           ;main.c: 206:                 outputMap1[5][3]=0;
  1269  00137A  0E00               	movlw	0
  1270  00137C  6F53               	movwf	(_outputMap1+83)& (0+255),b
  1271                           
  1272                           ;main.c: 207:                 outputMap1[9][2]=1;
  1273  00137E  0E01               	movlw	1
  1274  001380  6F92               	movwf	(_outputMap1+146)& (0+255),b
  1275                           
  1276                           ;main.c: 208:                 outputMap1[9][3]=1;
  1277  001382  0E01               	movlw	1
  1278  001384  6F93               	movwf	(_outputMap1+147)& (0+255),b
  1279                           
  1280                           ;main.c: 209:                 outputMap1[10][2]=1;
  1281  001386  0E01               	movlw	1
  1282  001388  6FA2               	movwf	(_outputMap1+162)& (0+255),b
  1283                           
  1284                           ;main.c: 210:                 outputMap1[10][3]=1;
  1285  00138A  0E01               	movlw	1
  1286  00138C  6FA3               	movwf	(_outputMap1+163)& (0+255),b
  1287                           
  1288                           ;main.c: 211:             }
  1289  00138E  EFDC  F009         	goto	l4351
  1290  001392                     l4349:
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;main.c: 213:                 select=0;
  1294  001392  0E00               	movlw	0
  1295  001394  6E54               	movwf	_select^0,c
  1296                           
  1297                           ;main.c: 214:                 outputMap1[4][2]=1;
  1298  001396  0E01               	movlw	1
  1299  001398  0101               	movlb	1	; () banked
  1300  00139A  6F42               	movwf	(_outputMap1+66)& (0+255),b
  1301                           
  1302                           ;main.c: 215:                 outputMap1[4][3]=1;
  1303  00139C  0E01               	movlw	1
  1304  00139E  6F43               	movwf	(_outputMap1+67)& (0+255),b
  1305                           
  1306                           ;main.c: 216:                 outputMap1[5][2]=1;
  1307  0013A0  0E01               	movlw	1
  1308  0013A2  6F52               	movwf	(_outputMap1+82)& (0+255),b
  1309                           
  1310                           ;main.c: 217:                 outputMap1[5][3]=1;
  1311  0013A4  0E01               	movlw	1
  1312  0013A6  6F53               	movwf	(_outputMap1+83)& (0+255),b
  1313                           
  1314                           ;main.c: 218:                 outputMap1[9][2]=0;
  1315  0013A8  0E00               	movlw	0
  1316  0013AA  6F92               	movwf	(_outputMap1+146)& (0+255),b
  1317                           
  1318                           ;main.c: 219:                 outputMap1[9][3]=0;
  1319  0013AC  0E00               	movlw	0
  1320  0013AE  6F93               	movwf	(_outputMap1+147)& (0+255),b
  1321                           
  1322                           ;main.c: 220:                 outputMap1[10][2]=0;
  1323  0013B0  0E00               	movlw	0
  1324  0013B2  6FA2               	movwf	(_outputMap1+162)& (0+255),b
  1325                           
  1326                           ;main.c: 221:                 outputMap1[10][3]=0;
  1327  0013B4  0E00               	movlw	0
  1328  0013B6  6FA3               	movwf	(_outputMap1+163)& (0+255),b
  1329  0013B8                     l4351:
  1330                           
  1331                           ; BSR set to: 1
  1332                           ;main.c: 223:             plot(outputMap1);
  1333  0013B8  0E00               	movlw	low _outputMap1
  1334  0013BA  6E1B               	movwf	plot@pattern^0,c
  1335  0013BC  0E01               	movlw	high _outputMap1
  1336  0013BE  6E1C               	movwf	(plot@pattern+1)^0,c
  1337  0013C0  EC09  F000         	call	_plot	;wreg free
  1338                           
  1339                           ;main.c: 224:         }
  1340  0013C4  EFBA  F00A         	goto	l4395
  1341  0013C8                     l4353:
  1342  0013C8  045F               	decf	_mode^0,w,c
  1343  0013CA  A4D8               	btfss	status,2,c
  1344  0013CC  EFEA  F009         	goto	u5151
  1345  0013D0  EFEC  F009         	goto	u5150
  1346  0013D4                     u5151:
  1347  0013D4  EF2C  F00A         	goto	l4369
  1348  0013D8                     u5150:
  1349  0013D8                     
  1350                           ;main.c: 226:             ADCON0bits.GO=1;
  1351  0013D8  82C2               	bsf	194,1,c	;volatile
  1352  0013DA                     
  1353                           ;main.c: 243:             updateMap();
  1354  0013DA  EC24  F002         	call	_updateMap	;wreg free
  1355  0013DE                     
  1356                           ;main.c: 244:             plot(map);
  1357  0013DE  0E00               	movlw	low _map
  1358  0013E0  6E1B               	movwf	plot@pattern^0,c
  1359  0013E2  0E02               	movlw	high _map
  1360  0013E4  6E1C               	movwf	(plot@pattern+1)^0,c
  1361  0013E6  EC09  F000         	call	_plot	;wreg free
  1362  0013EA                     
  1363                           ;main.c: 245:             if(error==1){
  1364  0013EA  0456               	decf	_error^0,w,c
  1365  0013EC  A4D8               	btfss	status,2,c
  1366  0013EE  EFFB  F009         	goto	u5161
  1367  0013F2  EFFD  F009         	goto	u5160
  1368  0013F6                     u5161:
  1369  0013F6  EF01  F00A         	goto	l4367
  1370  0013FA                     u5160:
  1371  0013FA                     
  1372                           ;main.c: 246:                 initMap();
  1373  0013FA  ECDB  F00A         	call	_initMap	;wreg free
  1374  0013FE                     
  1375                           ;main.c: 247:                  mode=0;
  1376  0013FE  0E00               	movlw	0
  1377  001400  6E5F               	movwf	_mode^0,c
  1378  001402                     l4367:
  1379                           
  1380                           ;main.c: 249:             speed=ADRES/204.6;
  1381  001402  0E9A               	movlw	154
  1382  001404  6E27               	movwf	___fldiv@a^0,c
  1383  001406  0E99               	movlw	153
  1384  001408  6E28               	movwf	(___fldiv@a+1)^0,c
  1385  00140A  0E4C               	movlw	76
  1386  00140C  6E29               	movwf	(___fldiv@a+2)^0,c
  1387  00140E  0E43               	movlw	67
  1388  001410  6E2A               	movwf	(___fldiv@a+3)^0,c
  1389  001412  CFC3 F015          	movff	4035,___xxtofl@val	;volatile
  1390  001416  CFC4 F016          	movff	4036,___xxtofl@val+1	;volatile
  1391  00141A  6A17               	clrf	(___xxtofl@val+2)^0,c
  1392  00141C  6A18               	clrf	(___xxtofl@val+3)^0,c
  1393  00141E  0E00               	movlw	0
  1394  001420  EC2B  F00E         	call	___xxtofl
  1395  001424  C015  F023         	movff	?___xxtofl,___fldiv@b
  1396  001428  C016  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1397  00142C  C017  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1398  001430  C018  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1399  001434  EC07  F004         	call	___fldiv	;wreg free
  1400  001438  C023  F0E8         	movff	?___fldiv,___fltol@f1
  1401  00143C  C024  F0E9         	movff	?___fldiv+1,___fltol@f1+1
  1402  001440  C025  F0EA         	movff	?___fldiv+2,___fltol@f1+2
  1403  001444  C026  F0EB         	movff	?___fldiv+3,___fltol@f1+3
  1404  001448  EC36  F010         	call	___fltol	;wreg free
  1405  00144C  C0E8  F0FA         	movff	?___fltol,main@speed
  1406  001450  C0E9  F0FB         	movff	?___fltol+1,main@speed+1
  1407                           
  1408                           ;main.c: 250:         }
  1409  001454  EFBA  F00A         	goto	l4395
  1410  001458                     l4369:
  1411  001458  0E02               	movlw	2
  1412  00145A  185F               	xorwf	_mode^0,w,c
  1413  00145C  A4D8               	btfss	status,2,c
  1414  00145E  EF33  F00A         	goto	u5171
  1415  001462  EF35  F00A         	goto	u5170
  1416  001466                     u5171:
  1417  001466  EF7E  F00A         	goto	l136
  1418  00146A                     u5170:
  1419  00146A                     
  1420                           ;main.c: 252:             ADCON0bits.GO=1;
  1421  00146A  82C2               	bsf	194,1,c	;volatile
  1422  00146C                     
  1423                           ;main.c: 253:             ball();
  1424  00146C  EC7D  F012         	call	_ball	;wreg free
  1425                           
  1426                           ;main.c: 255:             plot(LED);
  1427  001470  0E00               	movlw	low _LED
  1428  001472  6E1B               	movwf	plot@pattern^0,c
  1429  001474  0E03               	movlw	high _LED
  1430  001476  6E1C               	movwf	(plot@pattern+1)^0,c
  1431  001478  EC09  F000         	call	_plot	;wreg free
  1432  00147C                     
  1433                           ;main.c: 256:             if(ball_x == 0 || ball_x == 15)
  1434  00147C  5068               	movf	_ball_x^0,w,c
  1435  00147E  1069               	iorwf	(_ball_x+1)^0,w,c
  1436  001480  B4D8               	btfsc	status,2,c
  1437  001482  EF45  F00A         	goto	u5181
  1438  001486  EF47  F00A         	goto	u5180
  1439  00148A                     u5181:
  1440  00148A  EF51  F00A         	goto	l4379
  1441  00148E                     u5180:
  1442  00148E  0E0F               	movlw	15
  1443  001490  1868               	xorwf	_ball_x^0,w,c
  1444  001492  1069               	iorwf	(_ball_x+1)^0,w,c
  1445  001494  A4D8               	btfss	status,2,c
  1446  001496  EF4F  F00A         	goto	u5191
  1447  00149A  EF51  F00A         	goto	u5190
  1448  00149E                     u5191:
  1449  00149E  EF53  F00A         	goto	l4381
  1450  0014A2                     u5190:
  1451  0014A2                     l4379:
  1452                           
  1453                           ;main.c: 257:                 mode=0;
  1454  0014A2  0E00               	movlw	0
  1455  0014A4  6E5F               	movwf	_mode^0,c
  1456  0014A6                     l4381:
  1457                           
  1458                           ;main.c: 258:             speed=ADRES/204.6;
  1459  0014A6  0E9A               	movlw	154
  1460  0014A8  6E27               	movwf	___fldiv@a^0,c
  1461  0014AA  0E99               	movlw	153
  1462  0014AC  6E28               	movwf	(___fldiv@a+1)^0,c
  1463  0014AE  0E4C               	movlw	76
  1464  0014B0  6E29               	movwf	(___fldiv@a+2)^0,c
  1465  0014B2  0E43               	movlw	67
  1466  0014B4  6E2A               	movwf	(___fldiv@a+3)^0,c
  1467  0014B6  CFC3 F015          	movff	4035,___xxtofl@val	;volatile
  1468  0014BA  CFC4 F016          	movff	4036,___xxtofl@val+1	;volatile
  1469  0014BE  6A17               	clrf	(___xxtofl@val+2)^0,c
  1470  0014C0  6A18               	clrf	(___xxtofl@val+3)^0,c
  1471  0014C2  0E00               	movlw	0
  1472  0014C4  EC2B  F00E         	call	___xxtofl
  1473  0014C8  C015  F023         	movff	?___xxtofl,___fldiv@b
  1474  0014CC  C016  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1475  0014D0  C017  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1476  0014D4  C018  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1477  0014D8  EC07  F004         	call	___fldiv	;wreg free
  1478  0014DC  C023  F0E8         	movff	?___fldiv,___fltol@f1
  1479  0014E0  C024  F0E9         	movff	?___fldiv+1,___fltol@f1+1
  1480  0014E4  C025  F0EA         	movff	?___fldiv+2,___fltol@f1+2
  1481  0014E8  C026  F0EB         	movff	?___fldiv+3,___fltol@f1+3
  1482  0014EC  EC36  F010         	call	___fltol	;wreg free
  1483  0014F0  C0E8  F0FA         	movff	?___fltol,main@speed
  1484  0014F4  C0E9  F0FB         	movff	?___fltol+1,main@speed+1
  1485  0014F8  EFBA  F00A         	goto	l4395
  1486  0014FC                     l136:
  1487                           
  1488                           ;main.c: 264:         switch(speed){
  1489  0014FC  EFBA  F00A         	goto	l4395
  1490  001500                     l4383:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;main.c: 266:                 _delay(250000);
  1494  001500  0E02               	movlw	2
  1495  001502  0100               	movlb	0	; () banked
  1496  001504  6FF9               	movwf	(??_main+1)& (0+255),b
  1497  001506  0E45               	movlw	69
  1498  001508  6FF8               	movwf	??_main& (0+255),b
  1499  00150A  0EA9               	movlw	169
  1500  00150C                     u5217:
  1501  00150C  2EE8               	decfsz	wreg,f,c
  1502  00150E  D7FE               	bra	u5217
  1503  001510  2FF8               	decfsz	??_main& (0+255),f,b
  1504  001512  D7FC               	bra	u5217
  1505  001514  2FF9               	decfsz	(??_main+1)& (0+255),f,b
  1506  001516  D7FA               	bra	u5217
  1507  001518  D000               	nop2	
  1508                           
  1509                           ;main.c: 267:                 break;
  1510  00151A  EF9B  F009         	goto	l4339
  1511  00151E                     l4385:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;main.c: 269:                 _delay(125000);
  1515  00151E  0EA3               	movlw	163
  1516  001520  0100               	movlb	0	; () banked
  1517  001522  6FF8               	movwf	??_main& (0+255),b
  1518  001524  0E55               	movlw	85
  1519  001526                     u5227:
  1520  001526  2EE8               	decfsz	wreg,f,c
  1521  001528  D7FE               	bra	u5227
  1522  00152A  2FF8               	decfsz	??_main& (0+255),f,b
  1523  00152C  D7FC               	bra	u5227
  1524                           
  1525                           ;main.c: 270:                 break;
  1526  00152E  EF9B  F009         	goto	l4339
  1527  001532                     l4387:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;main.c: 272:                 _delay(100000);
  1531  001532  0E82               	movlw	130
  1532  001534  0100               	movlb	0	; () banked
  1533  001536  6FF8               	movwf	??_main& (0+255),b
  1534  001538  0EDD               	movlw	221
  1535  00153A                     u5237:
  1536  00153A  2EE8               	decfsz	wreg,f,c
  1537  00153C  D7FE               	bra	u5237
  1538  00153E  2FF8               	decfsz	??_main& (0+255),f,b
  1539  001540  D7FC               	bra	u5237
  1540  001542  D000               	nop2	
  1541                           
  1542                           ;main.c: 273:                 break;
  1543  001544  EF9B  F009         	goto	l4339
  1544  001548                     l4389:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 275:                 _delay(50000);
  1548  001548  0E41               	movlw	65
  1549  00154A  0100               	movlb	0	; () banked
  1550  00154C  6FF8               	movwf	??_main& (0+255),b
  1551  00154E  0EEE               	movlw	238
  1552  001550                     u5247:
  1553  001550  2EE8               	decfsz	wreg,f,c
  1554  001552  D7FE               	bra	u5247
  1555  001554  2FF8               	decfsz	??_main& (0+255),f,b
  1556  001556  D7FC               	bra	u5247
  1557  001558  F000               	nop	
  1558                           
  1559                           ;main.c: 276:                 break;
  1560  00155A  EF9B  F009         	goto	l4339
  1561  00155E                     l4391:
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;main.c: 278:                 _delay(25000);
  1565  00155E  0E21               	movlw	33
  1566  001560  0100               	movlb	0	; () banked
  1567  001562  6FF8               	movwf	??_main& (0+255),b
  1568  001564  0E76               	movlw	118
  1569  001566                     u5257:
  1570  001566  2EE8               	decfsz	wreg,f,c
  1571  001568  D7FE               	bra	u5257
  1572  00156A  2FF8               	decfsz	??_main& (0+255),f,b
  1573  00156C  D7FC               	bra	u5257
  1574  00156E  F000               	nop	
  1575                           
  1576                           ;main.c: 279:                 break;
  1577  001570  EF9B  F009         	goto	l4339
  1578  001574                     l4395:
  1579  001574  C0FA  F0F8         	movff	main@speed,??_main
  1580  001578  C0FB  F0F9         	movff	main@speed+1,??_main+1
  1581                           
  1582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1583                           ; Switch size 1, requested type "simple"
  1584                           ; Number of cases is 1, Range of values is 0 to 0
  1585                           ; switch strategies available:
  1586                           ; Name         Instructions Cycles
  1587                           ; simple_byte            4     3 (average)
  1588                           ;	Chosen strategy is simple_byte
  1589  00157C  0100               	movlb	0	; () banked
  1590  00157E  51F9               	movf	(??_main+1)& (0+255),w,b
  1591  001580  0A00               	xorlw	0	; case 0
  1592  001582  B4D8               	btfsc	status,2,c
  1593  001584  EFC6  F00A         	goto	l4447
  1594  001588  EFAF  F00A         	goto	l4391
  1595  00158C                     l4447:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ; Switch size 1, requested type "simple"
  1599                           ; Number of cases is 4, Range of values is 2 to 5
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte           13     7 (average)
  1603                           ;	Chosen strategy is simple_byte
  1604  00158C  51F8               	movf	??_main& (0+255),w,b
  1605  00158E  0A02               	xorlw	2	; case 2
  1606  001590  B4D8               	btfsc	status,2,c
  1607  001592  EFA4  F00A         	goto	l4389
  1608  001596  0A01               	xorlw	1	; case 3
  1609  001598  B4D8               	btfsc	status,2,c
  1610  00159A  EF99  F00A         	goto	l4387
  1611  00159E  0A07               	xorlw	7	; case 4
  1612  0015A0  B4D8               	btfsc	status,2,c
  1613  0015A2  EF8F  F00A         	goto	l4385
  1614  0015A6  0A01               	xorlw	1	; case 5
  1615  0015A8  B4D8               	btfsc	status,2,c
  1616  0015AA  EF80  F00A         	goto	l4383
  1617  0015AE  EFAF  F00A         	goto	l4391
  1618  0015B2  EF07  F000         	goto	start
  1619  0015B6                     __end_of_main:
  1620                           	opt callstack 0
  1621                           
  1622 ;; *************** function _updateMap *****************
  1623 ;; Defined at:
  1624 ;;		line 65 in file "snake.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  j               2   38[COMRAM] int 
  1629 ;;  i               2   36[COMRAM] int 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1639 ;;      Params:         0       0       0       0       0       0       0
  1640 ;;      Locals:         4       0       0       0       0       0       0
  1641 ;;      Temps:          8       0       0       0       0       0       0
  1642 ;;      Totals:        12       0       0       0       0       0       0
  1643 ;;Total ram usage:       12 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    3
  1646 ;; This function calls:
  1647 ;;		_printError
  1648 ;;		_updateCar
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text1
  1655  000448                     __ptext1:
  1656                           	opt callstack 0
  1657  000448                     _updateMap:
  1658                           	opt callstack 27
  1659  000448                     
  1660                           ;snake.c: 66:  int i,j;;snake.c: 67:     if(error!=1)
  1661  000448  0456               	decf	_error^0,w,c
  1662  00044A  B4D8               	btfsc	status,2,c
  1663  00044C  EF2A  F002         	goto	u4571
  1664  000450  EF2C  F002         	goto	u4570
  1665  000454                     u4571:
  1666  000454  EF2E  F002         	goto	l3979
  1667  000458                     u4570:
  1668  000458                     
  1669                           ;snake.c: 68:         updateCar();
  1670  000458  EC3A  F00D         	call	_updateCar	;wreg free
  1671  00045C                     l3979:
  1672                           
  1673                           ;snake.c: 69:  if(error==1){
  1674  00045C  0456               	decf	_error^0,w,c
  1675  00045E  A4D8               	btfss	status,2,c
  1676  000460  EF34  F002         	goto	u4581
  1677  000464  EF36  F002         	goto	u4580
  1678  000468                     u4581:
  1679  000468  EF3A  F002         	goto	l3985
  1680  00046C                     u4580:
  1681  00046C                     
  1682                           ;snake.c: 70:   printError();
  1683  00046C  ECAD  F00F         	call	_printError	;wreg free
  1684  000470  EF06  F004         	goto	l294
  1685  000474                     l3985:
  1686                           
  1687                           ;snake.c: 73:  for(j=0;j<16;++j){
  1688  000474  0E00               	movlw	0
  1689  000476  6E28               	movwf	(updateMap@j+1)^0,c
  1690  000478  0E00               	movlw	0
  1691  00047A  6E27               	movwf	updateMap@j^0,c
  1692  00047C                     l3991:
  1693                           
  1694                           ;snake.c: 74:   for(i=0;i<16;++i){
  1695  00047C  0E00               	movlw	0
  1696  00047E  6E26               	movwf	(updateMap@i+1)^0,c
  1697  000480  0E00               	movlw	0
  1698  000482  6E25               	movwf	updateMap@i^0,c
  1699  000484                     l3997:
  1700                           
  1701                           ;snake.c: 75:    map[j][i]=0;
  1702  000484  C027  F01D         	movff	updateMap@j,??_updateMap
  1703  000488  C028  F01E         	movff	updateMap@j+1,??_updateMap+1
  1704  00048C  3A1D               	swapf	??_updateMap^0,f,c
  1705  00048E  3A1E               	swapf	(??_updateMap+1)^0,f,c
  1706  000490  0EF0               	movlw	240
  1707  000492  161E               	andwf	(??_updateMap+1)^0,f,c
  1708  000494  501D               	movf	??_updateMap^0,w,c
  1709  000496  0B0F               	andlw	15
  1710  000498  121E               	iorwf	(??_updateMap+1)^0,f,c
  1711  00049A  0EF0               	movlw	240
  1712  00049C  161D               	andwf	??_updateMap^0,f,c
  1713  00049E  0E00               	movlw	low _map
  1714  0004A0  6E1F               	movwf	(??_updateMap+2)^0,c
  1715  0004A2  0E02               	movlw	high _map
  1716  0004A4  6E20               	movwf	(??_updateMap+3)^0,c
  1717  0004A6  501D               	movf	??_updateMap^0,w,c
  1718  0004A8  261F               	addwf	(??_updateMap+2)^0,f,c
  1719  0004AA  501E               	movf	(??_updateMap+1)^0,w,c
  1720  0004AC  2220               	addwfc	(??_updateMap+3)^0,f,c
  1721  0004AE  5025               	movf	updateMap@i^0,w,c
  1722  0004B0  241F               	addwf	(??_updateMap+2)^0,w,c
  1723  0004B2  6ED9               	movwf	fsr2l,c
  1724  0004B4  5026               	movf	(updateMap@i+1)^0,w,c
  1725  0004B6  2020               	addwfc	(??_updateMap+3)^0,w,c
  1726  0004B8  6EDA               	movwf	fsr2h,c
  1727  0004BA  0E00               	movlw	0
  1728  0004BC  6EDF               	movwf	indf2,c
  1729  0004BE                     
  1730                           ;snake.c: 76:   }
  1731  0004BE  4A25               	infsnz	updateMap@i^0,f,c
  1732  0004C0  2A26               	incf	(updateMap@i+1)^0,f,c
  1733  0004C2  BE26               	btfsc	(updateMap@i+1)^0,7,c
  1734  0004C4  EF6D  F002         	goto	u4591
  1735  0004C8  5026               	movf	(updateMap@i+1)^0,w,c
  1736  0004CA  E109               	bnz	u4590
  1737  0004CC  0E10               	movlw	16
  1738  0004CE  5C25               	subwf	updateMap@i^0,w,c
  1739  0004D0  A0D8               	btfss	status,0,c
  1740  0004D2  EF6D  F002         	goto	u4591
  1741  0004D6  EF6F  F002         	goto	u4590
  1742  0004DA                     u4591:
  1743  0004DA  EF42  F002         	goto	l3997
  1744  0004DE                     u4590:
  1745  0004DE                     
  1746                           ;snake.c: 77:  }
  1747  0004DE  4A27               	infsnz	updateMap@j^0,f,c
  1748  0004E0  2A28               	incf	(updateMap@j+1)^0,f,c
  1749  0004E2  BE28               	btfsc	(updateMap@j+1)^0,7,c
  1750  0004E4  EF7D  F002         	goto	u4601
  1751  0004E8  5028               	movf	(updateMap@j+1)^0,w,c
  1752  0004EA  E109               	bnz	u4600
  1753  0004EC  0E10               	movlw	16
  1754  0004EE  5C27               	subwf	updateMap@j^0,w,c
  1755  0004F0  A0D8               	btfss	status,0,c
  1756  0004F2  EF7D  F002         	goto	u4601
  1757  0004F6  EF7F  F002         	goto	u4600
  1758  0004FA                     u4601:
  1759  0004FA  EF3E  F002         	goto	l3991
  1760  0004FE                     u4600:
  1761  0004FE                     
  1762                           ;snake.c: 78:  for(j=0;j<6;++j){
  1763  0004FE  0E00               	movlw	0
  1764  000500  6E28               	movwf	(updateMap@j+1)^0,c
  1765  000502  0E00               	movlw	0
  1766  000504  6E27               	movwf	updateMap@j^0,c
  1767  000506                     l4013:
  1768                           
  1769                           ;snake.c: 79:   for(i=0;i<3;++i){
  1770  000506  0E00               	movlw	0
  1771  000508  6E26               	movwf	(updateMap@i+1)^0,c
  1772  00050A  0E00               	movlw	0
  1773  00050C  6E25               	movwf	updateMap@i^0,c
  1774  00050E                     l301:
  1775                           
  1776                           ;snake.c: 80:    if(j%2==0){
  1777  00050E  B027               	btfsc	updateMap@j^0,0,c
  1778  000510  EF8C  F002         	goto	u4611
  1779  000514  EF8E  F002         	goto	u4610
  1780  000518                     u4611:
  1781  000518  EF35  F003         	goto	l4029
  1782  00051C                     u4610:
  1783  00051C                     
  1784                           ;snake.c: 81:     if(car[j][0]-i<=15){
  1785  00051C  0EC0               	movlw	low _car
  1786  00051E  6E1D               	movwf	??_updateMap^0,c
  1787  000520  0E00               	movlw	high _car
  1788  000522  6E1E               	movwf	(??_updateMap+1)^0,c
  1789  000524  90D8               	bcf	status,0,c
  1790  000526  3427               	rlcf	updateMap@j^0,w,c
  1791  000528  6ED9               	movwf	fsr2l,c
  1792  00052A  3428               	rlcf	(updateMap@j+1)^0,w,c
  1793  00052C  6EDA               	movwf	fsr2h,c
  1794  00052E  90D8               	bcf	status,0,c
  1795  000530  36D9               	rlcf	fsr2l,f,c
  1796  000532  36DA               	rlcf	fsr2h,f,c
  1797  000534  501D               	movf	??_updateMap^0,w,c
  1798  000536  26D9               	addwf	fsr2l,f,c
  1799  000538  501E               	movf	(??_updateMap+1)^0,w,c
  1800  00053A  22DA               	addwfc	fsr2h,f,c
  1801  00053C  CFDE F01F          	movff	postinc2,??_updateMap+2
  1802  000540  CFDD F020          	movff	postdec2,??_updateMap+3
  1803  000544  5025               	movf	updateMap@i^0,w,c
  1804  000546  5E1F               	subwf	(??_updateMap+2)^0,f,c
  1805  000548  5026               	movf	(updateMap@i+1)^0,w,c
  1806  00054A  5A20               	subwfb	(??_updateMap+3)^0,f,c
  1807  00054C  BE20               	btfsc	(??_updateMap+3)^0,7,c
  1808  00054E  EFB4  F002         	goto	u4620
  1809  000552  5020               	movf	(??_updateMap+3)^0,w,c
  1810  000554  E107               	bnz	u4621
  1811  000556  0E10               	movlw	16
  1812  000558  5C1F               	subwf	(??_updateMap+2)^0,w,c
  1813  00055A  B0D8               	btfsc	status,0,c
  1814  00055C  EFB2  F002         	goto	u4621
  1815  000560  EFB4  F002         	goto	u4620
  1816  000564                     u4621:
  1817  000564  EFD4  F003         	goto	l4039
  1818  000568                     u4620:
  1819  000568                     
  1820                           ;snake.c: 82:      map[2+2*j][car[j][0]-i]=1;
  1821  000568  0EC0               	movlw	low _car
  1822  00056A  6E1D               	movwf	??_updateMap^0,c
  1823  00056C  0E00               	movlw	high _car
  1824  00056E  6E1E               	movwf	(??_updateMap+1)^0,c
  1825  000570  90D8               	bcf	status,0,c
  1826  000572  3427               	rlcf	updateMap@j^0,w,c
  1827  000574  6ED9               	movwf	fsr2l,c
  1828  000576  3428               	rlcf	(updateMap@j+1)^0,w,c
  1829  000578  6EDA               	movwf	fsr2h,c
  1830  00057A  90D8               	bcf	status,0,c
  1831  00057C  36D9               	rlcf	fsr2l,f,c
  1832  00057E  36DA               	rlcf	fsr2h,f,c
  1833  000580  501D               	movf	??_updateMap^0,w,c
  1834  000582  26D9               	addwf	fsr2l,f,c
  1835  000584  501E               	movf	(??_updateMap+1)^0,w,c
  1836  000586  22DA               	addwfc	fsr2h,f,c
  1837  000588  CFDE F01F          	movff	postinc2,??_updateMap+2
  1838  00058C  CFDD F020          	movff	postdec2,??_updateMap+3
  1839  000590  C027  F021         	movff	updateMap@j,??_updateMap+4
  1840  000594  C028  F022         	movff	updateMap@j+1,??_updateMap+5
  1841  000598  90D8               	bcf	status,0,c
  1842  00059A  3621               	rlcf	(??_updateMap+4)^0,f,c
  1843  00059C  3622               	rlcf	(??_updateMap+5)^0,f,c
  1844  00059E  3A21               	swapf	(??_updateMap+4)^0,f,c
  1845  0005A0  3A22               	swapf	(??_updateMap+5)^0,f,c
  1846  0005A2  0EF0               	movlw	240
  1847  0005A4  1622               	andwf	(??_updateMap+5)^0,f,c
  1848  0005A6  5021               	movf	(??_updateMap+4)^0,w,c
  1849  0005A8  0B0F               	andlw	15
  1850  0005AA  1222               	iorwf	(??_updateMap+5)^0,f,c
  1851  0005AC  0EF0               	movlw	240
  1852  0005AE  1621               	andwf	(??_updateMap+4)^0,f,c
  1853  0005B0  0E00               	movlw	low _map
  1854  0005B2  6E23               	movwf	(??_updateMap+6)^0,c
  1855  0005B4  0E02               	movlw	high _map
  1856  0005B6  6E24               	movwf	(??_updateMap+7)^0,c
  1857  0005B8  0E20               	movlw	32
  1858  0005BA  2623               	addwf	(??_updateMap+6)^0,f,c
  1859  0005BC  0E00               	movlw	0
  1860  0005BE  2224               	addwfc	(??_updateMap+7)^0,f,c
  1861  0005C0  5021               	movf	(??_updateMap+4)^0,w,c
  1862  0005C2  2623               	addwf	(??_updateMap+6)^0,f,c
  1863  0005C4  5022               	movf	(??_updateMap+5)^0,w,c
  1864  0005C6  2224               	addwfc	(??_updateMap+7)^0,f,c
  1865  0005C8  5025               	movf	updateMap@i^0,w,c
  1866  0005CA  5E23               	subwf	(??_updateMap+6)^0,f,c
  1867  0005CC  5026               	movf	(updateMap@i+1)^0,w,c
  1868  0005CE  5A24               	subwfb	(??_updateMap+7)^0,f,c
  1869  0005D0  501F               	movf	(??_updateMap+2)^0,w,c
  1870  0005D2  2423               	addwf	(??_updateMap+6)^0,w,c
  1871  0005D4  6ED9               	movwf	fsr2l,c
  1872  0005D6  5020               	movf	(??_updateMap+3)^0,w,c
  1873  0005D8  2024               	addwfc	(??_updateMap+7)^0,w,c
  1874  0005DA  6EDA               	movwf	fsr2h,c
  1875  0005DC  0E01               	movlw	1
  1876  0005DE  6EDF               	movwf	indf2,c
  1877  0005E0                     
  1878                           ;snake.c: 83:      if(player[1]==2+2*j && player[0]==car[j][0]-i)
  1879  0005E0  5061               	movf	(_player+1)^0,w,c
  1880  0005E2  6E1D               	movwf	??_updateMap^0,c
  1881  0005E4  6A1E               	clrf	(??_updateMap+1)^0,c
  1882  0005E6  C027  F01F         	movff	updateMap@j,??_updateMap+2
  1883  0005EA  C028  F020         	movff	updateMap@j+1,??_updateMap+3
  1884  0005EE  90D8               	bcf	status,0,c
  1885  0005F0  361F               	rlcf	(??_updateMap+2)^0,f,c
  1886  0005F2  3620               	rlcf	(??_updateMap+3)^0,f,c
  1887  0005F4  0E02               	movlw	2
  1888  0005F6  261F               	addwf	(??_updateMap+2)^0,f,c
  1889  0005F8  0E00               	movlw	0
  1890  0005FA  2220               	addwfc	(??_updateMap+3)^0,f,c
  1891  0005FC  501D               	movf	??_updateMap^0,w,c
  1892  0005FE  181F               	xorwf	(??_updateMap+2)^0,w,c
  1893  000600  E107               	bnz	u4631
  1894  000602  501E               	movf	(??_updateMap+1)^0,w,c
  1895  000604  1820               	xorwf	(??_updateMap+3)^0,w,c
  1896  000606  A4D8               	btfss	status,2,c
  1897  000608  EF08  F003         	goto	u4631
  1898  00060C  EF0A  F003         	goto	u4630
  1899  000610                     u4631:
  1900  000610  EFD4  F003         	goto	l4039
  1901  000614                     u4630:
  1902  000614  0EC0               	movlw	low _car
  1903  000616  6E1D               	movwf	??_updateMap^0,c
  1904  000618  0E00               	movlw	high _car
  1905  00061A  6E1E               	movwf	(??_updateMap+1)^0,c
  1906  00061C  90D8               	bcf	status,0,c
  1907  00061E  3427               	rlcf	updateMap@j^0,w,c
  1908  000620  6ED9               	movwf	fsr2l,c
  1909  000622  3428               	rlcf	(updateMap@j+1)^0,w,c
  1910  000624  6EDA               	movwf	fsr2h,c
  1911  000626  90D8               	bcf	status,0,c
  1912  000628  36D9               	rlcf	fsr2l,f,c
  1913  00062A  36DA               	rlcf	fsr2h,f,c
  1914  00062C  501D               	movf	??_updateMap^0,w,c
  1915  00062E  26D9               	addwf	fsr2l,f,c
  1916  000630  501E               	movf	(??_updateMap+1)^0,w,c
  1917  000632  22DA               	addwfc	fsr2h,f,c
  1918  000634  CFDE F01F          	movff	postinc2,??_updateMap+2
  1919  000638  CFDD F020          	movff	postdec2,??_updateMap+3
  1920  00063C  5025               	movf	updateMap@i^0,w,c
  1921  00063E  5E1F               	subwf	(??_updateMap+2)^0,f,c
  1922  000640  5026               	movf	(updateMap@i+1)^0,w,c
  1923  000642  5A20               	subwfb	(??_updateMap+3)^0,f,c
  1924  000644  5060               	movf	_player^0,w,c
  1925  000646  6E21               	movwf	(??_updateMap+4)^0,c
  1926  000648  6A22               	clrf	(??_updateMap+5)^0,c
  1927  00064A  501F               	movf	(??_updateMap+2)^0,w,c
  1928  00064C  1821               	xorwf	(??_updateMap+4)^0,w,c
  1929  00064E  E107               	bnz	u4641
  1930  000650  5020               	movf	(??_updateMap+3)^0,w,c
  1931  000652  1822               	xorwf	(??_updateMap+5)^0,w,c
  1932  000654  A4D8               	btfss	status,2,c
  1933  000656  EF2F  F003         	goto	u4641
  1934  00065A  EF31  F003         	goto	u4640
  1935  00065E                     u4641:
  1936  00065E  EFD4  F003         	goto	l4039
  1937  000662                     u4640:
  1938  000662                     l4027:
  1939                           
  1940                           ;snake.c: 84:       error=1;
  1941  000662  0E01               	movlw	1
  1942  000664  6E56               	movwf	_error^0,c
  1943  000666  EFD4  F003         	goto	l4039
  1944  00066A                     l4029:
  1945                           
  1946                           ;snake.c: 88:     if(car[j][0]+i>=0){
  1947  00066A  0EC0               	movlw	low _car
  1948  00066C  6E1D               	movwf	??_updateMap^0,c
  1949  00066E  0E00               	movlw	high _car
  1950  000670  6E1E               	movwf	(??_updateMap+1)^0,c
  1951  000672  90D8               	bcf	status,0,c
  1952  000674  3427               	rlcf	updateMap@j^0,w,c
  1953  000676  6ED9               	movwf	fsr2l,c
  1954  000678  3428               	rlcf	(updateMap@j+1)^0,w,c
  1955  00067A  6EDA               	movwf	fsr2h,c
  1956  00067C  90D8               	bcf	status,0,c
  1957  00067E  36D9               	rlcf	fsr2l,f,c
  1958  000680  36DA               	rlcf	fsr2h,f,c
  1959  000682  501D               	movf	??_updateMap^0,w,c
  1960  000684  26D9               	addwf	fsr2l,f,c
  1961  000686  501E               	movf	(??_updateMap+1)^0,w,c
  1962  000688  22DA               	addwfc	fsr2h,f,c
  1963  00068A  CFDE F01F          	movff	postinc2,??_updateMap+2
  1964  00068E  CFDD F020          	movff	postdec2,??_updateMap+3
  1965  000692  5025               	movf	updateMap@i^0,w,c
  1966  000694  241F               	addwf	(??_updateMap+2)^0,w,c
  1967  000696  5026               	movf	(updateMap@i+1)^0,w,c
  1968  000698  2020               	addwfc	(??_updateMap+3)^0,w,c
  1969  00069A  0B80               	andlw	128
  1970  00069C  A4D8               	btfss	status,2,c
  1971  00069E  EF53  F003         	goto	u4651
  1972  0006A2  EF55  F003         	goto	u4650
  1973  0006A6                     u4651:
  1974  0006A6  EFD4  F003         	goto	l4039
  1975  0006AA                     u4650:
  1976  0006AA                     
  1977                           ;snake.c: 89:      map[2+2*j][car[j][0]+i]=1;
  1978  0006AA  0EC0               	movlw	low _car
  1979  0006AC  6E1D               	movwf	??_updateMap^0,c
  1980  0006AE  0E00               	movlw	high _car
  1981  0006B0  6E1E               	movwf	(??_updateMap+1)^0,c
  1982  0006B2  90D8               	bcf	status,0,c
  1983  0006B4  3427               	rlcf	updateMap@j^0,w,c
  1984  0006B6  6ED9               	movwf	fsr2l,c
  1985  0006B8  3428               	rlcf	(updateMap@j+1)^0,w,c
  1986  0006BA  6EDA               	movwf	fsr2h,c
  1987  0006BC  90D8               	bcf	status,0,c
  1988  0006BE  36D9               	rlcf	fsr2l,f,c
  1989  0006C0  36DA               	rlcf	fsr2h,f,c
  1990  0006C2  501D               	movf	??_updateMap^0,w,c
  1991  0006C4  26D9               	addwf	fsr2l,f,c
  1992  0006C6  501E               	movf	(??_updateMap+1)^0,w,c
  1993  0006C8  22DA               	addwfc	fsr2h,f,c
  1994  0006CA  CFDE F01F          	movff	postinc2,??_updateMap+2
  1995  0006CE  CFDD F020          	movff	postdec2,??_updateMap+3
  1996  0006D2  C027  F021         	movff	updateMap@j,??_updateMap+4
  1997  0006D6  C028  F022         	movff	updateMap@j+1,??_updateMap+5
  1998  0006DA  90D8               	bcf	status,0,c
  1999  0006DC  3621               	rlcf	(??_updateMap+4)^0,f,c
  2000  0006DE  3622               	rlcf	(??_updateMap+5)^0,f,c
  2001  0006E0  3A21               	swapf	(??_updateMap+4)^0,f,c
  2002  0006E2  3A22               	swapf	(??_updateMap+5)^0,f,c
  2003  0006E4  0EF0               	movlw	240
  2004  0006E6  1622               	andwf	(??_updateMap+5)^0,f,c
  2005  0006E8  5021               	movf	(??_updateMap+4)^0,w,c
  2006  0006EA  0B0F               	andlw	15
  2007  0006EC  1222               	iorwf	(??_updateMap+5)^0,f,c
  2008  0006EE  0EF0               	movlw	240
  2009  0006F0  1621               	andwf	(??_updateMap+4)^0,f,c
  2010  0006F2  0E00               	movlw	low _map
  2011  0006F4  6E23               	movwf	(??_updateMap+6)^0,c
  2012  0006F6  0E02               	movlw	high _map
  2013  0006F8  6E24               	movwf	(??_updateMap+7)^0,c
  2014  0006FA  0E20               	movlw	32
  2015  0006FC  2623               	addwf	(??_updateMap+6)^0,f,c
  2016  0006FE  0E00               	movlw	0
  2017  000700  2224               	addwfc	(??_updateMap+7)^0,f,c
  2018  000702  5021               	movf	(??_updateMap+4)^0,w,c
  2019  000704  2623               	addwf	(??_updateMap+6)^0,f,c
  2020  000706  5022               	movf	(??_updateMap+5)^0,w,c
  2021  000708  2224               	addwfc	(??_updateMap+7)^0,f,c
  2022  00070A  501F               	movf	(??_updateMap+2)^0,w,c
  2023  00070C  2623               	addwf	(??_updateMap+6)^0,f,c
  2024  00070E  5020               	movf	(??_updateMap+3)^0,w,c
  2025  000710  2224               	addwfc	(??_updateMap+7)^0,f,c
  2026  000712  5025               	movf	updateMap@i^0,w,c
  2027  000714  2423               	addwf	(??_updateMap+6)^0,w,c
  2028  000716  6ED9               	movwf	fsr2l,c
  2029  000718  5026               	movf	(updateMap@i+1)^0,w,c
  2030  00071A  2024               	addwfc	(??_updateMap+7)^0,w,c
  2031  00071C  6EDA               	movwf	fsr2h,c
  2032  00071E  0E01               	movlw	1
  2033  000720  6EDF               	movwf	indf2,c
  2034  000722                     
  2035                           ;snake.c: 90:      if(player[1]==2+2*j && player[0]==car[j][0]+i)
  2036  000722  5061               	movf	(_player+1)^0,w,c
  2037  000724  6E1D               	movwf	??_updateMap^0,c
  2038  000726  6A1E               	clrf	(??_updateMap+1)^0,c
  2039  000728  C027  F01F         	movff	updateMap@j,??_updateMap+2
  2040  00072C  C028  F020         	movff	updateMap@j+1,??_updateMap+3
  2041  000730  90D8               	bcf	status,0,c
  2042  000732  361F               	rlcf	(??_updateMap+2)^0,f,c
  2043  000734  3620               	rlcf	(??_updateMap+3)^0,f,c
  2044  000736  0E02               	movlw	2
  2045  000738  261F               	addwf	(??_updateMap+2)^0,f,c
  2046  00073A  0E00               	movlw	0
  2047  00073C  2220               	addwfc	(??_updateMap+3)^0,f,c
  2048  00073E  501D               	movf	??_updateMap^0,w,c
  2049  000740  181F               	xorwf	(??_updateMap+2)^0,w,c
  2050  000742  E107               	bnz	u4661
  2051  000744  501E               	movf	(??_updateMap+1)^0,w,c
  2052  000746  1820               	xorwf	(??_updateMap+3)^0,w,c
  2053  000748  A4D8               	btfss	status,2,c
  2054  00074A  EFA9  F003         	goto	u4661
  2055  00074E  EFAB  F003         	goto	u4660
  2056  000752                     u4661:
  2057  000752  EFD4  F003         	goto	l4039
  2058  000756                     u4660:
  2059  000756  5060               	movf	_player^0,w,c
  2060  000758  6E1D               	movwf	??_updateMap^0,c
  2061  00075A  6A1E               	clrf	(??_updateMap+1)^0,c
  2062  00075C  0EC0               	movlw	low _car
  2063  00075E  6E1F               	movwf	(??_updateMap+2)^0,c
  2064  000760  0E00               	movlw	high _car
  2065  000762  6E20               	movwf	(??_updateMap+3)^0,c
  2066  000764  90D8               	bcf	status,0,c
  2067  000766  3427               	rlcf	updateMap@j^0,w,c
  2068  000768  6ED9               	movwf	fsr2l,c
  2069  00076A  3428               	rlcf	(updateMap@j+1)^0,w,c
  2070  00076C  6EDA               	movwf	fsr2h,c
  2071  00076E  90D8               	bcf	status,0,c
  2072  000770  36D9               	rlcf	fsr2l,f,c
  2073  000772  36DA               	rlcf	fsr2h,f,c
  2074  000774  501F               	movf	(??_updateMap+2)^0,w,c
  2075  000776  26D9               	addwf	fsr2l,f,c
  2076  000778  5020               	movf	(??_updateMap+3)^0,w,c
  2077  00077A  22DA               	addwfc	fsr2h,f,c
  2078  00077C  CFDE F021          	movff	postinc2,??_updateMap+4
  2079  000780  CFDD F022          	movff	postdec2,??_updateMap+5
  2080  000784  5025               	movf	updateMap@i^0,w,c
  2081  000786  2621               	addwf	(??_updateMap+4)^0,f,c
  2082  000788  5026               	movf	(updateMap@i+1)^0,w,c
  2083  00078A  2222               	addwfc	(??_updateMap+5)^0,f,c
  2084  00078C  501D               	movf	??_updateMap^0,w,c
  2085  00078E  1821               	xorwf	(??_updateMap+4)^0,w,c
  2086  000790  E107               	bnz	u4671
  2087  000792  501E               	movf	(??_updateMap+1)^0,w,c
  2088  000794  1822               	xorwf	(??_updateMap+5)^0,w,c
  2089  000796  A4D8               	btfss	status,2,c
  2090  000798  EFD0  F003         	goto	u4671
  2091  00079C  EFD2  F003         	goto	u4670
  2092  0007A0                     u4671:
  2093  0007A0  EFD4  F003         	goto	l4039
  2094  0007A4                     u4670:
  2095  0007A4  EF31  F003         	goto	l4027
  2096  0007A8                     l4039:
  2097                           
  2098                           ;snake.c: 94:   }
  2099  0007A8  4A25               	infsnz	updateMap@i^0,f,c
  2100  0007AA  2A26               	incf	(updateMap@i+1)^0,f,c
  2101  0007AC  BE26               	btfsc	(updateMap@i+1)^0,7,c
  2102  0007AE  EFE2  F003         	goto	u4681
  2103  0007B2  5026               	movf	(updateMap@i+1)^0,w,c
  2104  0007B4  E109               	bnz	u4680
  2105  0007B6  0E03               	movlw	3
  2106  0007B8  5C25               	subwf	updateMap@i^0,w,c
  2107  0007BA  A0D8               	btfss	status,0,c
  2108  0007BC  EFE2  F003         	goto	u4681
  2109  0007C0  EFE4  F003         	goto	u4680
  2110  0007C4                     u4681:
  2111  0007C4  EF87  F002         	goto	l301
  2112  0007C8                     u4680:
  2113  0007C8                     
  2114                           ;snake.c: 96:  }
  2115  0007C8  4A27               	infsnz	updateMap@j^0,f,c
  2116  0007CA  2A28               	incf	(updateMap@j+1)^0,f,c
  2117  0007CC  BE28               	btfsc	(updateMap@j+1)^0,7,c
  2118  0007CE  EFF2  F003         	goto	u4691
  2119  0007D2  5028               	movf	(updateMap@j+1)^0,w,c
  2120  0007D4  E109               	bnz	u4690
  2121  0007D6  0E06               	movlw	6
  2122  0007D8  5C27               	subwf	updateMap@j^0,w,c
  2123  0007DA  A0D8               	btfss	status,0,c
  2124  0007DC  EFF2  F003         	goto	u4691
  2125  0007E0  EFF4  F003         	goto	u4690
  2126  0007E4                     u4691:
  2127  0007E4  EF83  F002         	goto	l4013
  2128  0007E8                     u4690:
  2129  0007E8                     
  2130                           ;snake.c: 97:  map[player[1]][player[0]]=1;
  2131  0007E8  5061               	movf	(_player+1)^0,w,c
  2132  0007EA  0D10               	mullw	16
  2133  0007EC  0E00               	movlw	low _map
  2134  0007EE  6E1D               	movwf	??_updateMap^0,c
  2135  0007F0  0E02               	movlw	high _map
  2136  0007F2  6E1E               	movwf	(??_updateMap+1)^0,c
  2137  0007F4  50F3               	movf	243,w,c
  2138  0007F6  261D               	addwf	??_updateMap^0,f,c
  2139  0007F8  50F4               	movf	244,w,c
  2140  0007FA  221E               	addwfc	(??_updateMap+1)^0,f,c
  2141  0007FC  5060               	movf	_player^0,w,c
  2142  0007FE  241D               	addwf	??_updateMap^0,w,c
  2143  000800  6ED9               	movwf	fsr2l,c
  2144  000802  0E00               	movlw	0
  2145  000804  201E               	addwfc	(??_updateMap+1)^0,w,c
  2146  000806  6EDA               	movwf	fsr2h,c
  2147  000808  0E01               	movlw	1
  2148  00080A  6EDF               	movwf	indf2,c
  2149  00080C                     l294:
  2150  00080C  0012               	return		;funcret
  2151  00080E                     __end_of_updateMap:
  2152                           	opt callstack 0
  2153                           
  2154 ;; *************** function _updateCar *****************
  2155 ;; Defined at:
  2156 ;;		line 44 in file "snake.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  num             2   24[COMRAM] int 
  2161 ;;  j               2   26[COMRAM] int 
  2162 ;;  i               2    0        int 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2172 ;;      Params:         0       0       0       0       0       0       0
  2173 ;;      Locals:         4       0       0       0       0       0       0
  2174 ;;      Temps:          4       0       0       0       0       0       0
  2175 ;;      Totals:         8       0       0       0       0       0       0
  2176 ;;Total ram usage:        8 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    2
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_updateMap
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text2
  2187  001A74                     __ptext2:
  2188                           	opt callstack 0
  2189  001A74                     _updateCar:
  2190                           	opt callstack 27
  2191  001A74                     
  2192                           ;snake.c: 45:  int i,j;;snake.c: 46:  for(j=0;j<6;++j){
  2193  001A74  0E00               	movlw	0
  2194  001A76  6E1C               	movwf	(updateCar@j+1)^0,c
  2195  001A78  0E00               	movlw	0
  2196  001A7A  6E1B               	movwf	updateCar@j^0,c
  2197  001A7C                     l279:
  2198                           
  2199                           ;snake.c: 47:   int num=(j%2==0)?1:-1;
  2200  001A7C  A01B               	btfss	updateCar@j^0,0,c
  2201  001A7E  EF43  F00D         	goto	u4051
  2202  001A82  EF45  F00D         	goto	u4050
  2203  001A86                     u4051:
  2204  001A86  EF49  F00D         	goto	l3645
  2205  001A8A                     u4050:
  2206  001A8A  6819               	setf	updateCar@num^0,c
  2207  001A8C  681A               	setf	(updateCar@num+1)^0,c
  2208  001A8E  EF4D  F00D         	goto	l3647
  2209  001A92                     l3645:
  2210  001A92  0E00               	movlw	0
  2211  001A94  6E1A               	movwf	(updateCar@num+1)^0,c
  2212  001A96  0E01               	movlw	1
  2213  001A98  6E19               	movwf	updateCar@num^0,c
  2214  001A9A                     l3647:
  2215                           
  2216                           ;snake.c: 48:   car[j][0]+=num;
  2217  001A9A  0EC0               	movlw	low _car
  2218  001A9C  6E15               	movwf	??_updateCar^0,c
  2219  001A9E  0E00               	movlw	high _car
  2220  001AA0  6E16               	movwf	(??_updateCar+1)^0,c
  2221  001AA2  90D8               	bcf	status,0,c
  2222  001AA4  341B               	rlcf	updateCar@j^0,w,c
  2223  001AA6  6ED9               	movwf	fsr2l,c
  2224  001AA8  341C               	rlcf	(updateCar@j+1)^0,w,c
  2225  001AAA  6EDA               	movwf	fsr2h,c
  2226  001AAC  90D8               	bcf	status,0,c
  2227  001AAE  36D9               	rlcf	fsr2l,f,c
  2228  001AB0  36DA               	rlcf	fsr2h,f,c
  2229  001AB2  5015               	movf	??_updateCar^0,w,c
  2230  001AB4  26D9               	addwf	fsr2l,f,c
  2231  001AB6  5016               	movf	(??_updateCar+1)^0,w,c
  2232  001AB8  22DA               	addwfc	fsr2h,f,c
  2233  001ABA  5019               	movf	updateCar@num^0,w,c
  2234  001ABC  26DE               	addwf	postinc2,f,c
  2235  001ABE  501A               	movf	(updateCar@num+1)^0,w,c
  2236  001AC0  22DD               	addwfc	postdec2,f,c
  2237  001AC2                     
  2238                           ;snake.c: 49:   car[j][1]+=num;
  2239  001AC2  0EC0               	movlw	low _car
  2240  001AC4  6E15               	movwf	??_updateCar^0,c
  2241  001AC6  0E00               	movlw	high _car
  2242  001AC8  6E16               	movwf	(??_updateCar+1)^0,c
  2243  001ACA  0E02               	movlw	2
  2244  001ACC  2615               	addwf	??_updateCar^0,f,c
  2245  001ACE  0E00               	movlw	0
  2246  001AD0  2216               	addwfc	(??_updateCar+1)^0,f,c
  2247  001AD2  90D8               	bcf	status,0,c
  2248  001AD4  341B               	rlcf	updateCar@j^0,w,c
  2249  001AD6  6ED9               	movwf	fsr2l,c
  2250  001AD8  341C               	rlcf	(updateCar@j+1)^0,w,c
  2251  001ADA  6EDA               	movwf	fsr2h,c
  2252  001ADC  90D8               	bcf	status,0,c
  2253  001ADE  36D9               	rlcf	fsr2l,f,c
  2254  001AE0  36DA               	rlcf	fsr2h,f,c
  2255  001AE2  5015               	movf	??_updateCar^0,w,c
  2256  001AE4  26D9               	addwf	fsr2l,f,c
  2257  001AE6  5016               	movf	(??_updateCar+1)^0,w,c
  2258  001AE8  22DA               	addwfc	fsr2h,f,c
  2259  001AEA  5019               	movf	updateCar@num^0,w,c
  2260  001AEC  26DE               	addwf	postinc2,f,c
  2261  001AEE  501A               	movf	(updateCar@num+1)^0,w,c
  2262  001AF0  22DD               	addwfc	postdec2,f,c
  2263  001AF2                     
  2264                           ;snake.c: 50:   if(j%2==0){
  2265  001AF2  B01B               	btfsc	updateCar@j^0,0,c
  2266  001AF4  EF7E  F00D         	goto	u4061
  2267  001AF8  EF80  F00D         	goto	u4060
  2268  001AFC                     u4061:
  2269  001AFC  EFD2  F00D         	goto	l3657
  2270  001B00                     u4060:
  2271  001B00                     
  2272                           ;snake.c: 51:    if(car[j][1]>15){
  2273  001B00  0EC0               	movlw	low _car
  2274  001B02  6E15               	movwf	??_updateCar^0,c
  2275  001B04  0E00               	movlw	high _car
  2276  001B06  6E16               	movwf	(??_updateCar+1)^0,c
  2277  001B08  0E02               	movlw	2
  2278  001B0A  2615               	addwf	??_updateCar^0,f,c
  2279  001B0C  0E00               	movlw	0
  2280  001B0E  2216               	addwfc	(??_updateCar+1)^0,f,c
  2281  001B10  90D8               	bcf	status,0,c
  2282  001B12  341B               	rlcf	updateCar@j^0,w,c
  2283  001B14  6ED9               	movwf	fsr2l,c
  2284  001B16  341C               	rlcf	(updateCar@j+1)^0,w,c
  2285  001B18  6EDA               	movwf	fsr2h,c
  2286  001B1A  90D8               	bcf	status,0,c
  2287  001B1C  36D9               	rlcf	fsr2l,f,c
  2288  001B1E  36DA               	rlcf	fsr2h,f,c
  2289  001B20  5015               	movf	??_updateCar^0,w,c
  2290  001B22  26D9               	addwf	fsr2l,f,c
  2291  001B24  5016               	movf	(??_updateCar+1)^0,w,c
  2292  001B26  22DA               	addwfc	fsr2h,f,c
  2293  001B28  0E01               	movlw	1
  2294  001B2A  BEDB               	btfsc	plusw2,7,c
  2295  001B2C  EFA2  F00D         	goto	u4071
  2296  001B30  0E01               	movlw	1
  2297  001B32  50DB               	movf	plusw2,w,c
  2298  001B34  E109               	bnz	u4070
  2299  001B36  0E10               	movlw	16
  2300  001B38  5CDE               	subwf	postinc2,w,c
  2301  001B3A  A0D8               	btfss	status,0,c
  2302  001B3C  EFA2  F00D         	goto	u4071
  2303  001B40  EFA4  F00D         	goto	u4070
  2304  001B44                     u4071:
  2305  001B44  EF1A  F00E         	goto	l3661
  2306  001B48                     u4070:
  2307  001B48                     
  2308                           ;snake.c: 52:     car[j][0]=0;
  2309  001B48  0EC0               	movlw	low _car
  2310  001B4A  6E15               	movwf	??_updateCar^0,c
  2311  001B4C  0E00               	movlw	high _car
  2312  001B4E  6E16               	movwf	(??_updateCar+1)^0,c
  2313  001B50  90D8               	bcf	status,0,c
  2314  001B52  341B               	rlcf	updateCar@j^0,w,c
  2315  001B54  6ED9               	movwf	fsr2l,c
  2316  001B56  341C               	rlcf	(updateCar@j+1)^0,w,c
  2317  001B58  6EDA               	movwf	fsr2h,c
  2318  001B5A  90D8               	bcf	status,0,c
  2319  001B5C  36D9               	rlcf	fsr2l,f,c
  2320  001B5E  36DA               	rlcf	fsr2h,f,c
  2321  001B60  5015               	movf	??_updateCar^0,w,c
  2322  001B62  26D9               	addwf	fsr2l,f,c
  2323  001B64  5016               	movf	(??_updateCar+1)^0,w,c
  2324  001B66  22DA               	addwfc	fsr2h,f,c
  2325  001B68  0E00               	movlw	0
  2326  001B6A  6EDE               	movwf	postinc2,c
  2327  001B6C  0E00               	movlw	0
  2328  001B6E  6EDD               	movwf	postdec2,c
  2329                           
  2330                           ;snake.c: 53:     car[j][1]=-2;
  2331  001B70  0EC0               	movlw	low _car
  2332  001B72  6E15               	movwf	??_updateCar^0,c
  2333  001B74  0E00               	movlw	high _car
  2334  001B76  6E16               	movwf	(??_updateCar+1)^0,c
  2335  001B78  0E02               	movlw	2
  2336  001B7A  2615               	addwf	??_updateCar^0,f,c
  2337  001B7C  0E00               	movlw	0
  2338  001B7E  2216               	addwfc	(??_updateCar+1)^0,f,c
  2339  001B80  90D8               	bcf	status,0,c
  2340  001B82  341B               	rlcf	updateCar@j^0,w,c
  2341  001B84  6ED9               	movwf	fsr2l,c
  2342  001B86  341C               	rlcf	(updateCar@j+1)^0,w,c
  2343  001B88  6EDA               	movwf	fsr2h,c
  2344  001B8A  90D8               	bcf	status,0,c
  2345  001B8C  36D9               	rlcf	fsr2l,f,c
  2346  001B8E  36DA               	rlcf	fsr2h,f,c
  2347  001B90  5015               	movf	??_updateCar^0,w,c
  2348  001B92  26D9               	addwf	fsr2l,f,c
  2349  001B94  5016               	movf	(??_updateCar+1)^0,w,c
  2350  001B96  22DA               	addwfc	fsr2h,f,c
  2351  001B98  0EFE               	movlw	254
  2352  001B9A  6EDE               	movwf	postinc2,c
  2353  001B9C  0EFF               	movlw	255
  2354  001B9E  6EDD               	movwf	postdec2,c
  2355  001BA0  EF1A  F00E         	goto	l3661
  2356  001BA4                     l3657:
  2357                           
  2358                           ;snake.c: 57:    if(car[j][1]<0){
  2359  001BA4  0EC0               	movlw	low _car
  2360  001BA6  6E15               	movwf	??_updateCar^0,c
  2361  001BA8  0E00               	movlw	high _car
  2362  001BAA  6E16               	movwf	(??_updateCar+1)^0,c
  2363  001BAC  0E02               	movlw	2
  2364  001BAE  2615               	addwf	??_updateCar^0,f,c
  2365  001BB0  0E00               	movlw	0
  2366  001BB2  2216               	addwfc	(??_updateCar+1)^0,f,c
  2367  001BB4  90D8               	bcf	status,0,c
  2368  001BB6  341B               	rlcf	updateCar@j^0,w,c
  2369  001BB8  6ED9               	movwf	fsr2l,c
  2370  001BBA  341C               	rlcf	(updateCar@j+1)^0,w,c
  2371  001BBC  6EDA               	movwf	fsr2h,c
  2372  001BBE  90D8               	bcf	status,0,c
  2373  001BC0  36D9               	rlcf	fsr2l,f,c
  2374  001BC2  36DA               	rlcf	fsr2h,f,c
  2375  001BC4  5015               	movf	??_updateCar^0,w,c
  2376  001BC6  26D9               	addwf	fsr2l,f,c
  2377  001BC8  5016               	movf	(??_updateCar+1)^0,w,c
  2378  001BCA  22DA               	addwfc	fsr2h,f,c
  2379  001BCC  0E01               	movlw	1
  2380  001BCE  BEDB               	btfsc	plusw2,7,c
  2381  001BD0  EFEE  F00D         	goto	u4080
  2382  001BD4  EFEC  F00D         	goto	u4081
  2383  001BD8                     u4081:
  2384  001BD8  EF1A  F00E         	goto	l3661
  2385  001BDC                     u4080:
  2386  001BDC                     
  2387                           ;snake.c: 58:     car[j][0]=15;
  2388  001BDC  0EC0               	movlw	low _car
  2389  001BDE  6E15               	movwf	??_updateCar^0,c
  2390  001BE0  0E00               	movlw	high _car
  2391  001BE2  6E16               	movwf	(??_updateCar+1)^0,c
  2392  001BE4  90D8               	bcf	status,0,c
  2393  001BE6  341B               	rlcf	updateCar@j^0,w,c
  2394  001BE8  6ED9               	movwf	fsr2l,c
  2395  001BEA  341C               	rlcf	(updateCar@j+1)^0,w,c
  2396  001BEC  6EDA               	movwf	fsr2h,c
  2397  001BEE  90D8               	bcf	status,0,c
  2398  001BF0  36D9               	rlcf	fsr2l,f,c
  2399  001BF2  36DA               	rlcf	fsr2h,f,c
  2400  001BF4  5015               	movf	??_updateCar^0,w,c
  2401  001BF6  26D9               	addwf	fsr2l,f,c
  2402  001BF8  5016               	movf	(??_updateCar+1)^0,w,c
  2403  001BFA  22DA               	addwfc	fsr2h,f,c
  2404  001BFC  0E0F               	movlw	15
  2405  001BFE  6EDE               	movwf	postinc2,c
  2406  001C00  0E00               	movlw	0
  2407  001C02  6EDD               	movwf	postdec2,c
  2408                           
  2409                           ;snake.c: 59:     car[j][1]=17;
  2410  001C04  0EC0               	movlw	low _car
  2411  001C06  6E15               	movwf	??_updateCar^0,c
  2412  001C08  0E00               	movlw	high _car
  2413  001C0A  6E16               	movwf	(??_updateCar+1)^0,c
  2414  001C0C  0E02               	movlw	2
  2415  001C0E  2615               	addwf	??_updateCar^0,f,c
  2416  001C10  0E00               	movlw	0
  2417  001C12  2216               	addwfc	(??_updateCar+1)^0,f,c
  2418  001C14  90D8               	bcf	status,0,c
  2419  001C16  341B               	rlcf	updateCar@j^0,w,c
  2420  001C18  6ED9               	movwf	fsr2l,c
  2421  001C1A  341C               	rlcf	(updateCar@j+1)^0,w,c
  2422  001C1C  6EDA               	movwf	fsr2h,c
  2423  001C1E  90D8               	bcf	status,0,c
  2424  001C20  36D9               	rlcf	fsr2l,f,c
  2425  001C22  36DA               	rlcf	fsr2h,f,c
  2426  001C24  5015               	movf	??_updateCar^0,w,c
  2427  001C26  26D9               	addwf	fsr2l,f,c
  2428  001C28  5016               	movf	(??_updateCar+1)^0,w,c
  2429  001C2A  22DA               	addwfc	fsr2h,f,c
  2430  001C2C  0E11               	movlw	17
  2431  001C2E  6EDE               	movwf	postinc2,c
  2432  001C30  0E00               	movlw	0
  2433  001C32  6EDD               	movwf	postdec2,c
  2434  001C34                     l3661:
  2435                           
  2436                           ;snake.c: 62:  }
  2437  001C34  4A1B               	infsnz	updateCar@j^0,f,c
  2438  001C36  2A1C               	incf	(updateCar@j+1)^0,f,c
  2439  001C38  BE1C               	btfsc	(updateCar@j+1)^0,7,c
  2440  001C3A  EF28  F00E         	goto	u4091
  2441  001C3E  501C               	movf	(updateCar@j+1)^0,w,c
  2442  001C40  E109               	bnz	u4090
  2443  001C42  0E06               	movlw	6
  2444  001C44  5C1B               	subwf	updateCar@j^0,w,c
  2445  001C46  A0D8               	btfss	status,0,c
  2446  001C48  EF28  F00E         	goto	u4091
  2447  001C4C  EF2A  F00E         	goto	u4090
  2448  001C50                     u4091:
  2449  001C50  EF3E  F00D         	goto	l279
  2450  001C54                     u4090:
  2451  001C54  0012               	return		;funcret
  2452  001C56                     __end_of_updateCar:
  2453                           	opt callstack 0
  2454                           
  2455 ;; *************** function _printError *****************
  2456 ;; Defined at:
  2457 ;;		line 30 in file "snake.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  j               2   26[COMRAM] int 
  2462 ;;  i               2   24[COMRAM] int 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2472 ;;      Params:         0       0       0       0       0       0       0
  2473 ;;      Locals:         4       0       0       0       0       0       0
  2474 ;;      Temps:          4       0       0       0       0       0       0
  2475 ;;      Totals:         8       0       0       0       0       0       0
  2476 ;;Total ram usage:        8 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    2
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_updateMap
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text3
  2487  001F5A                     __ptext3:
  2488                           	opt callstack 0
  2489  001F5A                     _printError:
  2490                           	opt callstack 27
  2491  001F5A                     
  2492                           ;snake.c: 31:  int i,j=0;
  2493  001F5A  0E00               	movlw	0
  2494  001F5C  6E1C               	movwf	(printError@j+1)^0,c
  2495  001F5E  0E00               	movlw	0
  2496  001F60  6E1B               	movwf	printError@j^0,c
  2497                           
  2498                           ;snake.c: 33:  for(j=0;j<16;++j){
  2499  001F62  0E00               	movlw	0
  2500  001F64  6E1C               	movwf	(printError@j+1)^0,c
  2501  001F66  0E00               	movlw	0
  2502  001F68  6E1B               	movwf	printError@j^0,c
  2503  001F6A                     l3615:
  2504                           
  2505                           ;snake.c: 34:   for(i=0;i<16;++i){
  2506  001F6A  0E00               	movlw	0
  2507  001F6C  6E1A               	movwf	(printError@i+1)^0,c
  2508  001F6E  0E00               	movlw	0
  2509  001F70  6E19               	movwf	printError@i^0,c
  2510  001F72                     l3621:
  2511                           
  2512                           ;snake.c: 35:    if(i==j||i==15-j)
  2513  001F72  501B               	movf	printError@j^0,w,c
  2514  001F74  1819               	xorwf	printError@i^0,w,c
  2515  001F76  E109               	bnz	u4010
  2516  001F78  501C               	movf	(printError@j+1)^0,w,c
  2517  001F7A  181A               	xorwf	(printError@i+1)^0,w,c
  2518  001F7C  B4D8               	btfsc	status,2,c
  2519  001F7E  EFC3  F00F         	goto	u4011
  2520  001F82  EFC5  F00F         	goto	u4010
  2521  001F86                     u4011:
  2522  001F86  EFD9  F00F         	goto	l3625
  2523  001F8A                     u4010:
  2524  001F8A  0E0F               	movlw	15
  2525  001F8C  6E15               	movwf	??_printError^0,c
  2526  001F8E  0E00               	movlw	0
  2527  001F90  6E16               	movwf	(??_printError+1)^0,c
  2528  001F92  501B               	movf	printError@j^0,w,c
  2529  001F94  5E15               	subwf	??_printError^0,f,c
  2530  001F96  501C               	movf	(printError@j+1)^0,w,c
  2531  001F98  5A16               	subwfb	(??_printError+1)^0,f,c
  2532  001F9A  5019               	movf	printError@i^0,w,c
  2533  001F9C  1815               	xorwf	??_printError^0,w,c
  2534  001F9E  E107               	bnz	u4021
  2535  001FA0  501A               	movf	(printError@i+1)^0,w,c
  2536  001FA2  1816               	xorwf	(??_printError+1)^0,w,c
  2537  001FA4  A4D8               	btfss	status,2,c
  2538  001FA6  EFD7  F00F         	goto	u4021
  2539  001FAA  EFD9  F00F         	goto	u4020
  2540  001FAE                     u4021:
  2541  001FAE  EFF8  F00F         	goto	l3627
  2542  001FB2                     u4020:
  2543  001FB2                     l3625:
  2544                           
  2545                           ;snake.c: 36:     map[j][i]=1;
  2546  001FB2  C01B  F015         	movff	printError@j,??_printError
  2547  001FB6  C01C  F016         	movff	printError@j+1,??_printError+1
  2548  001FBA  3A15               	swapf	??_printError^0,f,c
  2549  001FBC  3A16               	swapf	(??_printError+1)^0,f,c
  2550  001FBE  0EF0               	movlw	240
  2551  001FC0  1616               	andwf	(??_printError+1)^0,f,c
  2552  001FC2  5015               	movf	??_printError^0,w,c
  2553  001FC4  0B0F               	andlw	15
  2554  001FC6  1216               	iorwf	(??_printError+1)^0,f,c
  2555  001FC8  0EF0               	movlw	240
  2556  001FCA  1615               	andwf	??_printError^0,f,c
  2557  001FCC  0E00               	movlw	low _map
  2558  001FCE  6E17               	movwf	(??_printError+2)^0,c
  2559  001FD0  0E02               	movlw	high _map
  2560  001FD2  6E18               	movwf	(??_printError+3)^0,c
  2561  001FD4  5015               	movf	??_printError^0,w,c
  2562  001FD6  2617               	addwf	(??_printError+2)^0,f,c
  2563  001FD8  5016               	movf	(??_printError+1)^0,w,c
  2564  001FDA  2218               	addwfc	(??_printError+3)^0,f,c
  2565  001FDC  5019               	movf	printError@i^0,w,c
  2566  001FDE  2417               	addwf	(??_printError+2)^0,w,c
  2567  001FE0  6ED9               	movwf	fsr2l,c
  2568  001FE2  501A               	movf	(printError@i+1)^0,w,c
  2569  001FE4  2018               	addwfc	(??_printError+3)^0,w,c
  2570  001FE6  6EDA               	movwf	fsr2h,c
  2571  001FE8  0E01               	movlw	1
  2572  001FEA  6EDF               	movwf	indf2,c
  2573  001FEC  EF15  F010         	goto	l3629
  2574  001FF0                     l3627:
  2575                           
  2576                           ;snake.c: 38:     map[j][i]=0;
  2577  001FF0  C01B  F015         	movff	printError@j,??_printError
  2578  001FF4  C01C  F016         	movff	printError@j+1,??_printError+1
  2579  001FF8  3A15               	swapf	??_printError^0,f,c
  2580  001FFA  3A16               	swapf	(??_printError+1)^0,f,c
  2581  001FFC  0EF0               	movlw	240
  2582  001FFE  1616               	andwf	(??_printError+1)^0,f,c
  2583  002000  5015               	movf	??_printError^0,w,c
  2584  002002  0B0F               	andlw	15
  2585  002004  1216               	iorwf	(??_printError+1)^0,f,c
  2586  002006  0EF0               	movlw	240
  2587  002008  1615               	andwf	??_printError^0,f,c
  2588  00200A  0E00               	movlw	low _map
  2589  00200C  6E17               	movwf	(??_printError+2)^0,c
  2590  00200E  0E02               	movlw	high _map
  2591  002010  6E18               	movwf	(??_printError+3)^0,c
  2592  002012  5015               	movf	??_printError^0,w,c
  2593  002014  2617               	addwf	(??_printError+2)^0,f,c
  2594  002016  5016               	movf	(??_printError+1)^0,w,c
  2595  002018  2218               	addwfc	(??_printError+3)^0,f,c
  2596  00201A  5019               	movf	printError@i^0,w,c
  2597  00201C  2417               	addwf	(??_printError+2)^0,w,c
  2598  00201E  6ED9               	movwf	fsr2l,c
  2599  002020  501A               	movf	(printError@i+1)^0,w,c
  2600  002022  2018               	addwfc	(??_printError+3)^0,w,c
  2601  002024  6EDA               	movwf	fsr2h,c
  2602  002026  0E00               	movlw	0
  2603  002028  6EDF               	movwf	indf2,c
  2604  00202A                     l3629:
  2605                           
  2606                           ;snake.c: 39:   }
  2607  00202A  4A19               	infsnz	printError@i^0,f,c
  2608  00202C  2A1A               	incf	(printError@i+1)^0,f,c
  2609  00202E  BE1A               	btfsc	(printError@i+1)^0,7,c
  2610  002030  EF23  F010         	goto	u4031
  2611  002034  501A               	movf	(printError@i+1)^0,w,c
  2612  002036  E109               	bnz	u4030
  2613  002038  0E10               	movlw	16
  2614  00203A  5C19               	subwf	printError@i^0,w,c
  2615  00203C  A0D8               	btfss	status,0,c
  2616  00203E  EF23  F010         	goto	u4031
  2617  002042  EF25  F010         	goto	u4030
  2618  002046                     u4031:
  2619  002046  EFB9  F00F         	goto	l3621
  2620  00204A                     u4030:
  2621  00204A                     
  2622                           ;snake.c: 40:  }
  2623  00204A  4A1B               	infsnz	printError@j^0,f,c
  2624  00204C  2A1C               	incf	(printError@j+1)^0,f,c
  2625  00204E  BE1C               	btfsc	(printError@j+1)^0,7,c
  2626  002050  EF33  F010         	goto	u4041
  2627  002054  501C               	movf	(printError@j+1)^0,w,c
  2628  002056  E109               	bnz	u4040
  2629  002058  0E10               	movlw	16
  2630  00205A  5C1B               	subwf	printError@j^0,w,c
  2631  00205C  A0D8               	btfss	status,0,c
  2632  00205E  EF33  F010         	goto	u4041
  2633  002062  EF35  F010         	goto	u4040
  2634  002066                     u4041:
  2635  002066  EFB5  F00F         	goto	l3615
  2636  00206A                     u4040:
  2637  00206A  0012               	return		;funcret
  2638  00206C                     __end_of_printError:
  2639                           	opt callstack 0
  2640                           
  2641 ;; *************** function _plot *****************
  2642 ;; Defined at:
  2643 ;;		line 182 in file "led-metrix.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  pattern         2   26[COMRAM] PTR unsigned char [16]
  2646 ;;		 -> LED(256), map(256), outputMap1(256), 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  char_pattern    8   24[BANK4 ] unsigned char [8]
  2649 ;;  char_pattern    8   16[BANK4 ] unsigned char [8]
  2650 ;;  char_pattern    8    8[BANK4 ] unsigned char [8]
  2651 ;;  char_pattern    8    0[BANK4 ] unsigned char [8]
  2652 ;;  i               2   34[BANK4 ] int 
  2653 ;;  j               2   32[BANK4 ] int 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2663 ;;      Params:         2       0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0      36       0
  2665 ;;      Temps:          5       0       0       0       0       0       0
  2666 ;;      Totals:         7       0       0       0       0      36       0
  2667 ;;Total ram usage:       43 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    4
  2670 ;; This function calls:
  2671 ;;		_set_register1
  2672 ;;		_set_register2
  2673 ;;		_set_register3
  2674 ;;		_set_register4
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text4
  2681  000012                     __ptext4:
  2682                           	opt callstack 0
  2683  000012                     _plot:
  2684                           	opt callstack 26
  2685  000012                     
  2686                           ;led-metrix.c: 182: void plot(unsigned char pattern[16][16]);led-metrix.c: 183: {;led-me
      +                          trix.c: 184:     int i,j;;led-metrix.c: 185:     unsigned char char_pattern1[8]={0};
  2687  000012  EE24  F000         	lfsr	2,plot@char_pattern1
  2688  000016  0E07               	movlw	7
  2689  000018                     u4401:
  2690  000018  6ADE               	clrf	postinc2,c
  2691  00001A  06E8               	decf	wreg,f,c
  2692  00001C  E2FD               	bc	u4401
  2693                           
  2694                           ;led-metrix.c: 186:     unsigned char char_pattern2[8]={0};
  2695  00001E  EE24  F008         	lfsr	2,plot@char_pattern2
  2696  000022  0E07               	movlw	7
  2697  000024                     u4411:
  2698  000024  6ADE               	clrf	postinc2,c
  2699  000026  06E8               	decf	wreg,f,c
  2700  000028  E2FD               	bc	u4411
  2701                           
  2702                           ;led-metrix.c: 187:     unsigned char char_pattern3[8]={0};
  2703  00002A  EE24  F010         	lfsr	2,plot@char_pattern3
  2704  00002E  0E07               	movlw	7
  2705  000030                     u4421:
  2706  000030  6ADE               	clrf	postinc2,c
  2707  000032  06E8               	decf	wreg,f,c
  2708  000034  E2FD               	bc	u4421
  2709                           
  2710                           ;led-metrix.c: 188:     unsigned char char_pattern4[8]={0};
  2711  000036  EE24  F018         	lfsr	2,plot@char_pattern4
  2712  00003A  0E07               	movlw	7
  2713  00003C                     u4431:
  2714  00003C  6ADE               	clrf	postinc2,c
  2715  00003E  06E8               	decf	wreg,f,c
  2716  000040  E2FD               	bc	u4431
  2717  000042                     
  2718                           ;led-metrix.c: 190:     for(i=0;i<8;++i)
  2719  000042  0E00               	movlw	0
  2720  000044  0104               	movlb	4	; () banked
  2721  000046  6F23               	movwf	(plot@i+1)& (0+255),b
  2722  000048  0E00               	movlw	0
  2723  00004A  6F22               	movwf	plot@i& (0+255),b
  2724  00004C                     l3869:
  2725                           
  2726                           ; BSR set to: 4
  2727                           ;led-metrix.c: 191:     {;led-metrix.c: 192:         for(j=0;j<8;++j)
  2728  00004C  0E00               	movlw	0
  2729  00004E  6F21               	movwf	(plot@j+1)& (0+255),b
  2730  000050  0E00               	movlw	0
  2731  000052  6F20               	movwf	plot@j& (0+255),b
  2732  000054                     l3875:
  2733                           
  2734                           ; BSR set to: 4
  2735                           ;led-metrix.c: 193:         {;led-metrix.c: 194:             char_pattern1[i] <<= 1;
  2736  000054  0E00               	movlw	low plot@char_pattern1
  2737  000056  2522               	addwf	plot@i& (0+255),w,b
  2738  000058  6ED9               	movwf	fsr2l,c
  2739  00005A  0E04               	movlw	high plot@char_pattern1
  2740  00005C  2123               	addwfc	(plot@i+1)& (0+255),w,b
  2741  00005E  6EDA               	movwf	fsr2h,c
  2742  000060  90D8               	bcf	status,0,c
  2743  000062  36DF               	rlcf	indf2,f,c
  2744                           
  2745                           ;led-metrix.c: 195:             if(pattern[i][j]==1)
  2746  000064  C422  F01D         	movff	plot@i,??_plot
  2747  000068  C423  F01E         	movff	plot@i+1,??_plot+1
  2748  00006C  3A1D               	swapf	??_plot^0,f,c
  2749  00006E  3A1E               	swapf	(??_plot+1)^0,f,c
  2750  000070  0EF0               	movlw	240
  2751  000072  161E               	andwf	(??_plot+1)^0,f,c
  2752  000074  501D               	movf	??_plot^0,w,c
  2753  000076  0B0F               	andlw	15
  2754  000078  121E               	iorwf	(??_plot+1)^0,f,c
  2755  00007A  0EF0               	movlw	240
  2756  00007C  161D               	andwf	??_plot^0,f,c
  2757  00007E  C01B  F01F         	movff	plot@pattern,??_plot+2
  2758  000082  C01C  F020         	movff	plot@pattern+1,??_plot+3
  2759  000086  501D               	movf	??_plot^0,w,c
  2760  000088  261F               	addwf	(??_plot+2)^0,f,c
  2761  00008A  501E               	movf	(??_plot+1)^0,w,c
  2762  00008C  2220               	addwfc	(??_plot+3)^0,f,c
  2763  00008E  5120               	movf	plot@j& (0+255),w,b
  2764  000090  241F               	addwf	(??_plot+2)^0,w,c
  2765  000092  6ED9               	movwf	fsr2l,c
  2766  000094  5121               	movf	(plot@j+1)& (0+255),w,b
  2767  000096  2020               	addwfc	(??_plot+3)^0,w,c
  2768  000098  6EDA               	movwf	fsr2h,c
  2769  00009A  04DE               	decf	postinc2,w,c
  2770  00009C  A4D8               	btfss	status,2,c
  2771  00009E  EF53  F000         	goto	u4441
  2772  0000A2  EF55  F000         	goto	u4440
  2773  0000A6                     u4441:
  2774  0000A6  EF5C  F000         	goto	l3879
  2775  0000AA                     u4440:
  2776  0000AA                     
  2777                           ; BSR set to: 4
  2778                           ;led-metrix.c: 196:             {;led-metrix.c: 197:                 char_pattern1[i] +=
      +                           1;
  2779  0000AA  0E00               	movlw	low plot@char_pattern1
  2780  0000AC  2522               	addwf	plot@i& (0+255),w,b
  2781  0000AE  6ED9               	movwf	fsr2l,c
  2782  0000B0  0E04               	movlw	high plot@char_pattern1
  2783  0000B2  2123               	addwfc	(plot@i+1)& (0+255),w,b
  2784  0000B4  6EDA               	movwf	fsr2h,c
  2785  0000B6  2ADF               	incf	indf2,f,c
  2786  0000B8                     l3879:
  2787                           
  2788                           ; BSR set to: 4
  2789                           ;led-metrix.c: 199:         }
  2790  0000B8  4B20               	infsnz	plot@j& (0+255),f,b
  2791  0000BA  2B21               	incf	(plot@j+1)& (0+255),f,b
  2792  0000BC                     
  2793                           ; BSR set to: 4
  2794  0000BC  BF21               	btfsc	(plot@j+1)& (0+255),7,b
  2795  0000BE  EF6A  F000         	goto	u4451
  2796  0000C2  5121               	movf	(plot@j+1)& (0+255),w,b
  2797  0000C4  E109               	bnz	u4450
  2798  0000C6  0E08               	movlw	8
  2799  0000C8  5D20               	subwf	plot@j& (0+255),w,b
  2800  0000CA  A0D8               	btfss	status,0,c
  2801  0000CC  EF6A  F000         	goto	u4451
  2802  0000D0  EF6C  F000         	goto	u4450
  2803  0000D4                     u4451:
  2804  0000D4  EF2A  F000         	goto	l3875
  2805  0000D8                     u4450:
  2806  0000D8                     
  2807                           ; BSR set to: 4
  2808                           ;led-metrix.c: 200:     }
  2809  0000D8  4B22               	infsnz	plot@i& (0+255),f,b
  2810  0000DA  2B23               	incf	(plot@i+1)& (0+255),f,b
  2811  0000DC                     
  2812                           ; BSR set to: 4
  2813  0000DC  BF23               	btfsc	(plot@i+1)& (0+255),7,b
  2814  0000DE  EF7A  F000         	goto	u4461
  2815  0000E2  5123               	movf	(plot@i+1)& (0+255),w,b
  2816  0000E4  E109               	bnz	u4460
  2817  0000E6  0E08               	movlw	8
  2818  0000E8  5D22               	subwf	plot@i& (0+255),w,b
  2819  0000EA  A0D8               	btfss	status,0,c
  2820  0000EC  EF7A  F000         	goto	u4461
  2821  0000F0  EF7C  F000         	goto	u4460
  2822  0000F4                     u4461:
  2823  0000F4  EF26  F000         	goto	l3869
  2824  0000F8                     u4460:
  2825  0000F8                     
  2826                           ; BSR set to: 4
  2827                           ;led-metrix.c: 201:     for(i=0;i<8;i++)
  2828  0000F8  0E00               	movlw	0
  2829  0000FA  6F23               	movwf	(plot@i+1)& (0+255),b
  2830  0000FC  0E00               	movlw	0
  2831  0000FE  6F22               	movwf	plot@i& (0+255),b
  2832  000100                     l3893:
  2833                           
  2834                           ; BSR set to: 4
  2835                           ;led-metrix.c: 202:     {;led-metrix.c: 203:         for(j=0;j<8;j++)
  2836  000100  0E00               	movlw	0
  2837  000102  6F21               	movwf	(plot@j+1)& (0+255),b
  2838  000104  0E00               	movlw	0
  2839  000106  6F20               	movwf	plot@j& (0+255),b
  2840  000108                     l3899:
  2841                           
  2842                           ; BSR set to: 4
  2843                           ;led-metrix.c: 204:         {;led-metrix.c: 205:             char_pattern2[7-i] <<= 1;
  2844  000108  0E07               	movlw	7
  2845  00010A  6E1D               	movwf	??_plot^0,c
  2846  00010C  0E00               	movlw	0
  2847  00010E  6E1E               	movwf	(??_plot+1)^0,c
  2848  000110  5122               	movf	plot@i& (0+255),w,b
  2849  000112  5E1D               	subwf	??_plot^0,f,c
  2850  000114  5123               	movf	(plot@i+1)& (0+255),w,b
  2851  000116  5A1E               	subwfb	(??_plot+1)^0,f,c
  2852  000118  0E08               	movlw	low plot@char_pattern2
  2853  00011A  241D               	addwf	??_plot^0,w,c
  2854  00011C  6ED9               	movwf	fsr2l,c
  2855  00011E  0E04               	movlw	high plot@char_pattern2
  2856  000120  201E               	addwfc	(??_plot+1)^0,w,c
  2857  000122  6EDA               	movwf	fsr2h,c
  2858  000124  90D8               	bcf	status,0,c
  2859  000126  36DF               	rlcf	indf2,f,c
  2860                           
  2861                           ;led-metrix.c: 206:             if(pattern[i][7-j+8]==1)
  2862  000128  C422  F01D         	movff	plot@i,??_plot
  2863  00012C  C423  F01E         	movff	plot@i+1,??_plot+1
  2864  000130  3A1D               	swapf	??_plot^0,f,c
  2865  000132  3A1E               	swapf	(??_plot+1)^0,f,c
  2866  000134  0EF0               	movlw	240
  2867  000136  161E               	andwf	(??_plot+1)^0,f,c
  2868  000138  501D               	movf	??_plot^0,w,c
  2869  00013A  0B0F               	andlw	15
  2870  00013C  121E               	iorwf	(??_plot+1)^0,f,c
  2871  00013E  0EF0               	movlw	240
  2872  000140  161D               	andwf	??_plot^0,f,c
  2873  000142  C01B  F01F         	movff	plot@pattern,??_plot+2
  2874  000146  C01C  F020         	movff	plot@pattern+1,??_plot+3
  2875  00014A  501D               	movf	??_plot^0,w,c
  2876  00014C  261F               	addwf	(??_plot+2)^0,f,c
  2877  00014E  501E               	movf	(??_plot+1)^0,w,c
  2878  000150  2220               	addwfc	(??_plot+3)^0,f,c
  2879  000152  5120               	movf	plot@j& (0+255),w,b
  2880  000154  5E1F               	subwf	(??_plot+2)^0,f,c
  2881  000156  5121               	movf	(plot@j+1)& (0+255),w,b
  2882  000158  5A20               	subwfb	(??_plot+3)^0,f,c
  2883  00015A  0E0F               	movlw	15
  2884  00015C  241F               	addwf	(??_plot+2)^0,w,c
  2885  00015E  6ED9               	movwf	fsr2l,c
  2886  000160  0E00               	movlw	0
  2887  000162  2020               	addwfc	(??_plot+3)^0,w,c
  2888  000164  6EDA               	movwf	fsr2h,c
  2889  000166  04DE               	decf	postinc2,w,c
  2890  000168  A4D8               	btfss	status,2,c
  2891  00016A  EFB9  F000         	goto	u4471
  2892  00016E  EFBB  F000         	goto	u4470
  2893  000172                     u4471:
  2894  000172  EFCA  F000         	goto	l3903
  2895  000176                     u4470:
  2896  000176                     
  2897                           ; BSR set to: 4
  2898                           ;led-metrix.c: 207:             {;led-metrix.c: 208:                 char_pattern2[7-i] 
      +                          += 1;
  2899  000176  0E07               	movlw	7
  2900  000178  6E1D               	movwf	??_plot^0,c
  2901  00017A  0E00               	movlw	0
  2902  00017C  6E1E               	movwf	(??_plot+1)^0,c
  2903  00017E  5122               	movf	plot@i& (0+255),w,b
  2904  000180  5E1D               	subwf	??_plot^0,f,c
  2905  000182  5123               	movf	(plot@i+1)& (0+255),w,b
  2906  000184  5A1E               	subwfb	(??_plot+1)^0,f,c
  2907  000186  0E08               	movlw	low plot@char_pattern2
  2908  000188  241D               	addwf	??_plot^0,w,c
  2909  00018A  6ED9               	movwf	fsr2l,c
  2910  00018C  0E04               	movlw	high plot@char_pattern2
  2911  00018E  201E               	addwfc	(??_plot+1)^0,w,c
  2912  000190  6EDA               	movwf	fsr2h,c
  2913  000192  2ADF               	incf	indf2,f,c
  2914  000194                     l3903:
  2915                           
  2916                           ; BSR set to: 4
  2917                           ;led-metrix.c: 210:         }
  2918  000194  4B20               	infsnz	plot@j& (0+255),f,b
  2919  000196  2B21               	incf	(plot@j+1)& (0+255),f,b
  2920  000198                     
  2921                           ; BSR set to: 4
  2922  000198  BF21               	btfsc	(plot@j+1)& (0+255),7,b
  2923  00019A  EFD8  F000         	goto	u4481
  2924  00019E  5121               	movf	(plot@j+1)& (0+255),w,b
  2925  0001A0  E109               	bnz	u4480
  2926  0001A2  0E08               	movlw	8
  2927  0001A4  5D20               	subwf	plot@j& (0+255),w,b
  2928  0001A6  A0D8               	btfss	status,0,c
  2929  0001A8  EFD8  F000         	goto	u4481
  2930  0001AC  EFDA  F000         	goto	u4480
  2931  0001B0                     u4481:
  2932  0001B0  EF84  F000         	goto	l3899
  2933  0001B4                     u4480:
  2934  0001B4                     
  2935                           ; BSR set to: 4
  2936                           ;led-metrix.c: 211:     }
  2937  0001B4  4B22               	infsnz	plot@i& (0+255),f,b
  2938  0001B6  2B23               	incf	(plot@i+1)& (0+255),f,b
  2939  0001B8                     
  2940                           ; BSR set to: 4
  2941  0001B8  BF23               	btfsc	(plot@i+1)& (0+255),7,b
  2942  0001BA  EFE8  F000         	goto	u4491
  2943  0001BE  5123               	movf	(plot@i+1)& (0+255),w,b
  2944  0001C0  E109               	bnz	u4490
  2945  0001C2  0E08               	movlw	8
  2946  0001C4  5D22               	subwf	plot@i& (0+255),w,b
  2947  0001C6  A0D8               	btfss	status,0,c
  2948  0001C8  EFE8  F000         	goto	u4491
  2949  0001CC  EFEA  F000         	goto	u4490
  2950  0001D0                     u4491:
  2951  0001D0  EF80  F000         	goto	l3893
  2952  0001D4                     u4490:
  2953  0001D4                     
  2954                           ; BSR set to: 4
  2955                           ;led-metrix.c: 212:     for(i=0;i<8;++i)
  2956  0001D4  0E00               	movlw	0
  2957  0001D6  6F23               	movwf	(plot@i+1)& (0+255),b
  2958  0001D8  0E00               	movlw	0
  2959  0001DA  6F22               	movwf	plot@i& (0+255),b
  2960  0001DC                     l3917:
  2961                           
  2962                           ; BSR set to: 4
  2963                           ;led-metrix.c: 213:     {;led-metrix.c: 214:         for(j=0;j<8;++j)
  2964  0001DC  0E00               	movlw	0
  2965  0001DE  6F21               	movwf	(plot@j+1)& (0+255),b
  2966  0001E0  0E00               	movlw	0
  2967  0001E2  6F20               	movwf	plot@j& (0+255),b
  2968  0001E4                     l3923:
  2969                           
  2970                           ; BSR set to: 4
  2971                           ;led-metrix.c: 215:         {;led-metrix.c: 216:             char_pattern3[i] <<= 1;
  2972  0001E4  0E10               	movlw	low plot@char_pattern3
  2973  0001E6  2522               	addwf	plot@i& (0+255),w,b
  2974  0001E8  6ED9               	movwf	fsr2l,c
  2975  0001EA  0E04               	movlw	high plot@char_pattern3
  2976  0001EC  2123               	addwfc	(plot@i+1)& (0+255),w,b
  2977  0001EE  6EDA               	movwf	fsr2h,c
  2978  0001F0  90D8               	bcf	status,0,c
  2979  0001F2  36DF               	rlcf	indf2,f,c
  2980                           
  2981                           ;led-metrix.c: 217:             if(pattern[i+8][j]==1)
  2982  0001F4  C422  F01D         	movff	plot@i,??_plot
  2983  0001F8  C423  F01E         	movff	plot@i+1,??_plot+1
  2984  0001FC  3A1D               	swapf	??_plot^0,f,c
  2985  0001FE  3A1E               	swapf	(??_plot+1)^0,f,c
  2986  000200  0EF0               	movlw	240
  2987  000202  161E               	andwf	(??_plot+1)^0,f,c
  2988  000204  501D               	movf	??_plot^0,w,c
  2989  000206  0B0F               	andlw	15
  2990  000208  121E               	iorwf	(??_plot+1)^0,f,c
  2991  00020A  0EF0               	movlw	240
  2992  00020C  161D               	andwf	??_plot^0,f,c
  2993  00020E  C01B  F01F         	movff	plot@pattern,??_plot+2
  2994  000212  C01C  F020         	movff	plot@pattern+1,??_plot+3
  2995  000216  501D               	movf	??_plot^0,w,c
  2996  000218  261F               	addwf	(??_plot+2)^0,f,c
  2997  00021A  501E               	movf	(??_plot+1)^0,w,c
  2998  00021C  2220               	addwfc	(??_plot+3)^0,f,c
  2999  00021E  5120               	movf	plot@j& (0+255),w,b
  3000  000220  261F               	addwf	(??_plot+2)^0,f,c
  3001  000222  5121               	movf	(plot@j+1)& (0+255),w,b
  3002  000224  2220               	addwfc	(??_plot+3)^0,f,c
  3003  000226  0E80               	movlw	128
  3004  000228  241F               	addwf	(??_plot+2)^0,w,c
  3005  00022A  6ED9               	movwf	fsr2l,c
  3006  00022C  0E00               	movlw	0
  3007  00022E  2020               	addwfc	(??_plot+3)^0,w,c
  3008  000230  6EDA               	movwf	fsr2h,c
  3009  000232  04DE               	decf	postinc2,w,c
  3010  000234  A4D8               	btfss	status,2,c
  3011  000236  EF1F  F001         	goto	u4501
  3012  00023A  EF21  F001         	goto	u4500
  3013  00023E                     u4501:
  3014  00023E  EF28  F001         	goto	l3927
  3015  000242                     u4500:
  3016  000242                     
  3017                           ; BSR set to: 4
  3018                           ;led-metrix.c: 218:             {;led-metrix.c: 219:                 char_pattern3[i] +=
      +                           1;
  3019  000242  0E10               	movlw	low plot@char_pattern3
  3020  000244  2522               	addwf	plot@i& (0+255),w,b
  3021  000246  6ED9               	movwf	fsr2l,c
  3022  000248  0E04               	movlw	high plot@char_pattern3
  3023  00024A  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3024  00024C  6EDA               	movwf	fsr2h,c
  3025  00024E  2ADF               	incf	indf2,f,c
  3026  000250                     l3927:
  3027                           
  3028                           ; BSR set to: 4
  3029                           ;led-metrix.c: 221:         }
  3030  000250  4B20               	infsnz	plot@j& (0+255),f,b
  3031  000252  2B21               	incf	(plot@j+1)& (0+255),f,b
  3032  000254                     
  3033                           ; BSR set to: 4
  3034  000254  BF21               	btfsc	(plot@j+1)& (0+255),7,b
  3035  000256  EF36  F001         	goto	u4511
  3036  00025A  5121               	movf	(plot@j+1)& (0+255),w,b
  3037  00025C  E109               	bnz	u4510
  3038  00025E  0E08               	movlw	8
  3039  000260  5D20               	subwf	plot@j& (0+255),w,b
  3040  000262  A0D8               	btfss	status,0,c
  3041  000264  EF36  F001         	goto	u4511
  3042  000268  EF38  F001         	goto	u4510
  3043  00026C                     u4511:
  3044  00026C  EFF2  F000         	goto	l3923
  3045  000270                     u4510:
  3046  000270                     
  3047                           ; BSR set to: 4
  3048                           ;led-metrix.c: 222:     }
  3049  000270  4B22               	infsnz	plot@i& (0+255),f,b
  3050  000272  2B23               	incf	(plot@i+1)& (0+255),f,b
  3051  000274                     
  3052                           ; BSR set to: 4
  3053  000274  BF23               	btfsc	(plot@i+1)& (0+255),7,b
  3054  000276  EF46  F001         	goto	u4521
  3055  00027A  5123               	movf	(plot@i+1)& (0+255),w,b
  3056  00027C  E109               	bnz	u4520
  3057  00027E  0E08               	movlw	8
  3058  000280  5D22               	subwf	plot@i& (0+255),w,b
  3059  000282  A0D8               	btfss	status,0,c
  3060  000284  EF46  F001         	goto	u4521
  3061  000288  EF48  F001         	goto	u4520
  3062  00028C                     u4521:
  3063  00028C  EFEE  F000         	goto	l3917
  3064  000290                     u4520:
  3065  000290                     
  3066                           ; BSR set to: 4
  3067                           ;led-metrix.c: 223:     for(i=0;i<8;i++)
  3068  000290  0E00               	movlw	0
  3069  000292  6F23               	movwf	(plot@i+1)& (0+255),b
  3070  000294  0E00               	movlw	0
  3071  000296  6F22               	movwf	plot@i& (0+255),b
  3072  000298                     l3941:
  3073                           
  3074                           ; BSR set to: 4
  3075                           ;led-metrix.c: 224:     {;led-metrix.c: 225:         for(j=0;j<8;j++)
  3076  000298  0E00               	movlw	0
  3077  00029A  6F21               	movwf	(plot@j+1)& (0+255),b
  3078  00029C  0E00               	movlw	0
  3079  00029E  6F20               	movwf	plot@j& (0+255),b
  3080  0002A0                     l3947:
  3081                           
  3082                           ; BSR set to: 4
  3083                           ;led-metrix.c: 226:         {;led-metrix.c: 227:             char_pattern4[7-i] <<= 1;
  3084  0002A0  0E07               	movlw	7
  3085  0002A2  6E1D               	movwf	??_plot^0,c
  3086  0002A4  0E00               	movlw	0
  3087  0002A6  6E1E               	movwf	(??_plot+1)^0,c
  3088  0002A8  5122               	movf	plot@i& (0+255),w,b
  3089  0002AA  5E1D               	subwf	??_plot^0,f,c
  3090  0002AC  5123               	movf	(plot@i+1)& (0+255),w,b
  3091  0002AE  5A1E               	subwfb	(??_plot+1)^0,f,c
  3092  0002B0  0E18               	movlw	low plot@char_pattern4
  3093  0002B2  241D               	addwf	??_plot^0,w,c
  3094  0002B4  6ED9               	movwf	fsr2l,c
  3095  0002B6  0E04               	movlw	high plot@char_pattern4
  3096  0002B8  201E               	addwfc	(??_plot+1)^0,w,c
  3097  0002BA  6EDA               	movwf	fsr2h,c
  3098  0002BC  90D8               	bcf	status,0,c
  3099  0002BE  36DF               	rlcf	indf2,f,c
  3100                           
  3101                           ;led-metrix.c: 228:             if(pattern[i+8][7-j+8]==1)
  3102  0002C0  C422  F01D         	movff	plot@i,??_plot
  3103  0002C4  C423  F01E         	movff	plot@i+1,??_plot+1
  3104  0002C8  3A1D               	swapf	??_plot^0,f,c
  3105  0002CA  3A1E               	swapf	(??_plot+1)^0,f,c
  3106  0002CC  0EF0               	movlw	240
  3107  0002CE  161E               	andwf	(??_plot+1)^0,f,c
  3108  0002D0  501D               	movf	??_plot^0,w,c
  3109  0002D2  0B0F               	andlw	15
  3110  0002D4  121E               	iorwf	(??_plot+1)^0,f,c
  3111  0002D6  0EF0               	movlw	240
  3112  0002D8  161D               	andwf	??_plot^0,f,c
  3113  0002DA  C01B  F01F         	movff	plot@pattern,??_plot+2
  3114  0002DE  C01C  F020         	movff	plot@pattern+1,??_plot+3
  3115  0002E2  501D               	movf	??_plot^0,w,c
  3116  0002E4  261F               	addwf	(??_plot+2)^0,f,c
  3117  0002E6  501E               	movf	(??_plot+1)^0,w,c
  3118  0002E8  2220               	addwfc	(??_plot+3)^0,f,c
  3119  0002EA  5120               	movf	plot@j& (0+255),w,b
  3120  0002EC  5E1F               	subwf	(??_plot+2)^0,f,c
  3121  0002EE  5121               	movf	(plot@j+1)& (0+255),w,b
  3122  0002F0  5A20               	subwfb	(??_plot+3)^0,f,c
  3123  0002F2  0E8F               	movlw	143
  3124  0002F4  241F               	addwf	(??_plot+2)^0,w,c
  3125  0002F6  6ED9               	movwf	fsr2l,c
  3126  0002F8  0E00               	movlw	0
  3127  0002FA  2020               	addwfc	(??_plot+3)^0,w,c
  3128  0002FC  6EDA               	movwf	fsr2h,c
  3129  0002FE  04DE               	decf	postinc2,w,c
  3130  000300  A4D8               	btfss	status,2,c
  3131  000302  EF85  F001         	goto	u4531
  3132  000306  EF87  F001         	goto	u4530
  3133  00030A                     u4531:
  3134  00030A  EF96  F001         	goto	l3951
  3135  00030E                     u4530:
  3136  00030E                     
  3137                           ; BSR set to: 4
  3138                           ;led-metrix.c: 229:             {;led-metrix.c: 230:                 char_pattern4[7-i] 
      +                          += 1;
  3139  00030E  0E07               	movlw	7
  3140  000310  6E1D               	movwf	??_plot^0,c
  3141  000312  0E00               	movlw	0
  3142  000314  6E1E               	movwf	(??_plot+1)^0,c
  3143  000316  5122               	movf	plot@i& (0+255),w,b
  3144  000318  5E1D               	subwf	??_plot^0,f,c
  3145  00031A  5123               	movf	(plot@i+1)& (0+255),w,b
  3146  00031C  5A1E               	subwfb	(??_plot+1)^0,f,c
  3147  00031E  0E18               	movlw	low plot@char_pattern4
  3148  000320  241D               	addwf	??_plot^0,w,c
  3149  000322  6ED9               	movwf	fsr2l,c
  3150  000324  0E04               	movlw	high plot@char_pattern4
  3151  000326  201E               	addwfc	(??_plot+1)^0,w,c
  3152  000328  6EDA               	movwf	fsr2h,c
  3153  00032A  2ADF               	incf	indf2,f,c
  3154  00032C                     l3951:
  3155                           
  3156                           ; BSR set to: 4
  3157                           ;led-metrix.c: 232:         }
  3158  00032C  4B20               	infsnz	plot@j& (0+255),f,b
  3159  00032E  2B21               	incf	(plot@j+1)& (0+255),f,b
  3160  000330                     
  3161                           ; BSR set to: 4
  3162  000330  BF21               	btfsc	(plot@j+1)& (0+255),7,b
  3163  000332  EFA4  F001         	goto	u4541
  3164  000336  5121               	movf	(plot@j+1)& (0+255),w,b
  3165  000338  E109               	bnz	u4540
  3166  00033A  0E08               	movlw	8
  3167  00033C  5D20               	subwf	plot@j& (0+255),w,b
  3168  00033E  A0D8               	btfss	status,0,c
  3169  000340  EFA4  F001         	goto	u4541
  3170  000344  EFA6  F001         	goto	u4540
  3171  000348                     u4541:
  3172  000348  EF50  F001         	goto	l3947
  3173  00034C                     u4540:
  3174  00034C                     
  3175                           ; BSR set to: 4
  3176                           ;led-metrix.c: 233:     }
  3177  00034C  4B22               	infsnz	plot@i& (0+255),f,b
  3178  00034E  2B23               	incf	(plot@i+1)& (0+255),f,b
  3179  000350                     
  3180                           ; BSR set to: 4
  3181  000350  BF23               	btfsc	(plot@i+1)& (0+255),7,b
  3182  000352  EFB4  F001         	goto	u4551
  3183  000356  5123               	movf	(plot@i+1)& (0+255),w,b
  3184  000358  E109               	bnz	u4550
  3185  00035A  0E08               	movlw	8
  3186  00035C  5D22               	subwf	plot@i& (0+255),w,b
  3187  00035E  A0D8               	btfss	status,0,c
  3188  000360  EFB4  F001         	goto	u4551
  3189  000364  EFB6  F001         	goto	u4550
  3190  000368                     u4551:
  3191  000368  EF4C  F001         	goto	l3941
  3192  00036C                     u4550:
  3193  00036C                     
  3194                           ; BSR set to: 4
  3195                           ;led-metrix.c: 236:     set_register1((0X0C), (0x0));
  3196  00036C  0E00               	movlw	0
  3197  00036E  6E19               	movwf	set_register1@value^0,c
  3198  000370  0E0C               	movlw	12
  3199  000372  ECB5  F015         	call	_set_register1
  3200                           
  3201                           ;led-metrix.c: 237:     set_register2((0X0C), (0x0));
  3202  000376  0E00               	movlw	0
  3203  000378  6E19               	movwf	set_register2@value^0,c
  3204  00037A  0E0C               	movlw	12
  3205  00037C  ECA6  F015         	call	_set_register2
  3206                           
  3207                           ;led-metrix.c: 238:     set_register3((0X0C), (0x0));
  3208  000380  0E00               	movlw	0
  3209  000382  6E19               	movwf	set_register3@value^0,c
  3210  000384  0E0C               	movlw	12
  3211  000386  EC97  F015         	call	_set_register3
  3212                           
  3213                           ;led-metrix.c: 239:     set_register4((0X0C), (0x0));
  3214  00038A  0E00               	movlw	0
  3215  00038C  6E19               	movwf	set_register4@value^0,c
  3216  00038E  0E0C               	movlw	12
  3217  000390  EC88  F015         	call	_set_register4
  3218  000394                     
  3219                           ;led-metrix.c: 242:     for (i = 0; i < 8; i++)
  3220  000394  0E00               	movlw	0
  3221  000396  0104               	movlb	4	; () banked
  3222  000398  6F23               	movwf	(plot@i+1)& (0+255),b
  3223  00039A  0E00               	movlw	0
  3224  00039C  6F22               	movwf	plot@i& (0+255),b
  3225  00039E                     l3967:
  3226                           
  3227                           ; BSR set to: 4
  3228                           ;led-metrix.c: 243:     {;led-metrix.c: 245:       set_register1(((i) + 1), char_pattern
      +                          1[i]);
  3229  00039E  0E00               	movlw	low plot@char_pattern1
  3230  0003A0  2522               	addwf	plot@i& (0+255),w,b
  3231  0003A2  6ED9               	movwf	fsr2l,c
  3232  0003A4  0E04               	movlw	high plot@char_pattern1
  3233  0003A6  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3234  0003A8  6EDA               	movwf	fsr2h,c
  3235  0003AA  50DF               	movf	indf2,w,c
  3236  0003AC  6E19               	movwf	set_register1@value^0,c
  3237  0003AE  2922               	incf	plot@i& (0+255),w,b
  3238  0003B0  ECB5  F015         	call	_set_register1
  3239                           
  3240                           ;led-metrix.c: 246:       set_register2(((i) + 1), char_pattern2[i]);
  3241  0003B4  0E08               	movlw	low plot@char_pattern2
  3242  0003B6  0104               	movlb	4	; () banked
  3243  0003B8  2522               	addwf	plot@i& (0+255),w,b
  3244  0003BA  6ED9               	movwf	fsr2l,c
  3245  0003BC  0E04               	movlw	high plot@char_pattern2
  3246  0003BE  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3247  0003C0  6EDA               	movwf	fsr2h,c
  3248  0003C2  50DF               	movf	indf2,w,c
  3249  0003C4  6E19               	movwf	set_register2@value^0,c
  3250  0003C6  2922               	incf	plot@i& (0+255),w,b
  3251  0003C8  ECA6  F015         	call	_set_register2
  3252                           
  3253                           ;led-metrix.c: 247:       set_register3(((i) + 1), char_pattern3[i]);
  3254  0003CC  0E10               	movlw	low plot@char_pattern3
  3255  0003CE  0104               	movlb	4	; () banked
  3256  0003D0  2522               	addwf	plot@i& (0+255),w,b
  3257  0003D2  6ED9               	movwf	fsr2l,c
  3258  0003D4  0E04               	movlw	high plot@char_pattern3
  3259  0003D6  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3260  0003D8  6EDA               	movwf	fsr2h,c
  3261  0003DA  50DF               	movf	indf2,w,c
  3262  0003DC  6E19               	movwf	set_register3@value^0,c
  3263  0003DE  2922               	incf	plot@i& (0+255),w,b
  3264  0003E0  EC97  F015         	call	_set_register3
  3265                           
  3266                           ;led-metrix.c: 248:       set_register4(((i) + 1), char_pattern4[i]);
  3267  0003E4  0E18               	movlw	low plot@char_pattern4
  3268  0003E6  0104               	movlb	4	; () banked
  3269  0003E8  2522               	addwf	plot@i& (0+255),w,b
  3270  0003EA  6ED9               	movwf	fsr2l,c
  3271  0003EC  0E04               	movlw	high plot@char_pattern4
  3272  0003EE  2123               	addwfc	(plot@i+1)& (0+255),w,b
  3273  0003F0  6EDA               	movwf	fsr2h,c
  3274  0003F2  50DF               	movf	indf2,w,c
  3275  0003F4  6E19               	movwf	set_register4@value^0,c
  3276  0003F6  2922               	incf	plot@i& (0+255),w,b
  3277  0003F8  EC88  F015         	call	_set_register4
  3278  0003FC                     
  3279                           ;led-metrix.c: 249:     }
  3280  0003FC  0104               	movlb	4	; () banked
  3281  0003FE  4B22               	infsnz	plot@i& (0+255),f,b
  3282  000400  2B23               	incf	(plot@i+1)& (0+255),f,b
  3283  000402                     
  3284                           ; BSR set to: 4
  3285  000402  BF23               	btfsc	(plot@i+1)& (0+255),7,b
  3286  000404  EF0D  F002         	goto	u4561
  3287  000408  5123               	movf	(plot@i+1)& (0+255),w,b
  3288  00040A  E109               	bnz	u4560
  3289  00040C  0E08               	movlw	8
  3290  00040E  5D22               	subwf	plot@i& (0+255),w,b
  3291  000410  A0D8               	btfss	status,0,c
  3292  000412  EF0D  F002         	goto	u4561
  3293  000416  EF0F  F002         	goto	u4560
  3294  00041A                     u4561:
  3295  00041A  EFCF  F001         	goto	l3967
  3296  00041E                     u4560:
  3297  00041E                     
  3298                           ; BSR set to: 4
  3299                           ;led-metrix.c: 252:     set_register1((0X0C), (0x1));
  3300  00041E  0E01               	movlw	1
  3301  000420  6E19               	movwf	set_register1@value^0,c
  3302  000422  0E0C               	movlw	12
  3303  000424  ECB5  F015         	call	_set_register1
  3304                           
  3305                           ;led-metrix.c: 253:     set_register2((0X0C), (0x1));
  3306  000428  0E01               	movlw	1
  3307  00042A  6E19               	movwf	set_register2@value^0,c
  3308  00042C  0E0C               	movlw	12
  3309  00042E  ECA6  F015         	call	_set_register2
  3310                           
  3311                           ;led-metrix.c: 254:     set_register3((0X0C), (0x1));
  3312  000432  0E01               	movlw	1
  3313  000434  6E19               	movwf	set_register3@value^0,c
  3314  000436  0E0C               	movlw	12
  3315  000438  EC97  F015         	call	_set_register3
  3316                           
  3317                           ;led-metrix.c: 255:     set_register4((0X0C), (0x1));
  3318  00043C  0E01               	movlw	1
  3319  00043E  6E19               	movwf	set_register4@value^0,c
  3320  000440  0E0C               	movlw	12
  3321  000442  EC88  F015         	call	_set_register4
  3322  000446  0012               	return		;funcret
  3323  000448                     __end_of_plot:
  3324                           	opt callstack 0
  3325                           
  3326 ;; *************** function _initial *****************
  3327 ;; Defined at:
  3328 ;;		line 79 in file "ball.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  k               2   24[COMRAM] int 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3342 ;;      Params:         0       0       0       0       0       0       0
  3343 ;;      Locals:         2       0       0       0       0       0       0
  3344 ;;      Temps:          4       0       0       0       0       0       0
  3345 ;;      Totals:         6       0       0       0       0       0       0
  3346 ;;Total ram usage:        6 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    2
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text5
  3357  002274                     __ptext5:
  3358                           	opt callstack 0
  3359  002274                     _initial:
  3360                           	opt callstack 28
  3361  002274                     
  3362                           ;ball.c: 81:     int k;;ball.c: 82:  for(k=0;k<16;k++)
  3363  002274  0E00               	movlw	0
  3364  002276  6E1A               	movwf	(initial@k+1)^0,c
  3365  002278  0E00               	movlw	0
  3366  00227A  6E19               	movwf	initial@k^0,c
  3367  00227C                     l3795:
  3368                           
  3369                           ;ball.c: 83:  {;ball.c: 84:   LED[k][0] = left_board[k];
  3370  00227C  90D8               	bcf	status,0,c
  3371  00227E  3419               	rlcf	initial@k^0,w,c
  3372  002280  6ED9               	movwf	fsr2l,c
  3373  002282  341A               	rlcf	(initial@k+1)^0,w,c
  3374  002284  6EDA               	movwf	fsr2h,c
  3375  002286  0EA0               	movlw	low _left_board
  3376  002288  26D9               	addwf	fsr2l,f,c
  3377  00228A  0E00               	movlw	high _left_board
  3378  00228C  22DA               	addwfc	fsr2h,f,c
  3379  00228E  C019  F015         	movff	initial@k,??_initial
  3380  002292  C01A  F016         	movff	initial@k+1,??_initial+1
  3381  002296  3A15               	swapf	??_initial^0,f,c
  3382  002298  3A16               	swapf	(??_initial+1)^0,f,c
  3383  00229A  0EF0               	movlw	240
  3384  00229C  1616               	andwf	(??_initial+1)^0,f,c
  3385  00229E  5015               	movf	??_initial^0,w,c
  3386  0022A0  0B0F               	andlw	15
  3387  0022A2  1216               	iorwf	(??_initial+1)^0,f,c
  3388  0022A4  0EF0               	movlw	240
  3389  0022A6  1615               	andwf	??_initial^0,f,c
  3390  0022A8  0E00               	movlw	low _LED
  3391  0022AA  2415               	addwf	??_initial^0,w,c
  3392  0022AC  6EE1               	movwf	fsr1l,c
  3393  0022AE  0E03               	movlw	high _LED
  3394  0022B0  2016               	addwfc	(??_initial+1)^0,w,c
  3395  0022B2  6EE2               	movwf	fsr1h,c
  3396  0022B4  CFDF FFE7          	movff	indf2,indf1
  3397                           
  3398                           ;ball.c: 85:   LED[k][15] = right_board[k];
  3399  0022B8  90D8               	bcf	status,0,c
  3400  0022BA  3419               	rlcf	initial@k^0,w,c
  3401  0022BC  6ED9               	movwf	fsr2l,c
  3402  0022BE  341A               	rlcf	(initial@k+1)^0,w,c
  3403  0022C0  6EDA               	movwf	fsr2h,c
  3404  0022C2  0E80               	movlw	low _right_board
  3405  0022C4  26D9               	addwf	fsr2l,f,c
  3406  0022C6  0E00               	movlw	high _right_board
  3407  0022C8  22DA               	addwfc	fsr2h,f,c
  3408  0022CA  C019  F015         	movff	initial@k,??_initial
  3409  0022CE  C01A  F016         	movff	initial@k+1,??_initial+1
  3410  0022D2  3A15               	swapf	??_initial^0,f,c
  3411  0022D4  3A16               	swapf	(??_initial+1)^0,f,c
  3412  0022D6  0EF0               	movlw	240
  3413  0022D8  1616               	andwf	(??_initial+1)^0,f,c
  3414  0022DA  5015               	movf	??_initial^0,w,c
  3415  0022DC  0B0F               	andlw	15
  3416  0022DE  1216               	iorwf	(??_initial+1)^0,f,c
  3417  0022E0  0EF0               	movlw	240
  3418  0022E2  1615               	andwf	??_initial^0,f,c
  3419  0022E4  0E0F               	movlw	low (_LED+15)
  3420  0022E6  2415               	addwf	??_initial^0,w,c
  3421  0022E8  6EE1               	movwf	fsr1l,c
  3422  0022EA  0E03               	movlw	high (_LED+15)
  3423  0022EC  2016               	addwfc	(??_initial+1)^0,w,c
  3424  0022EE  6EE2               	movwf	fsr1h,c
  3425  0022F0  CFDF FFE7          	movff	indf2,indf1
  3426  0022F4                     
  3427                           ;ball.c: 86:   LED[ball_y][ball_x]=1;
  3428  0022F4  C066  F015         	movff	_ball_y,??_initial
  3429  0022F8  C067  F016         	movff	_ball_y+1,??_initial+1
  3430  0022FC  3A15               	swapf	??_initial^0,f,c
  3431  0022FE  3A16               	swapf	(??_initial+1)^0,f,c
  3432  002300  0EF0               	movlw	240
  3433  002302  1616               	andwf	(??_initial+1)^0,f,c
  3434  002304  5015               	movf	??_initial^0,w,c
  3435  002306  0B0F               	andlw	15
  3436  002308  1216               	iorwf	(??_initial+1)^0,f,c
  3437  00230A  0EF0               	movlw	240
  3438  00230C  1615               	andwf	??_initial^0,f,c
  3439  00230E  0E00               	movlw	low _LED
  3440  002310  6E17               	movwf	(??_initial+2)^0,c
  3441  002312  0E03               	movlw	high _LED
  3442  002314  6E18               	movwf	(??_initial+3)^0,c
  3443  002316  5015               	movf	??_initial^0,w,c
  3444  002318  2617               	addwf	(??_initial+2)^0,f,c
  3445  00231A  5016               	movf	(??_initial+1)^0,w,c
  3446  00231C  2218               	addwfc	(??_initial+3)^0,f,c
  3447  00231E  5068               	movf	_ball_x^0,w,c
  3448  002320  2417               	addwf	(??_initial+2)^0,w,c
  3449  002322  6ED9               	movwf	fsr2l,c
  3450  002324  5069               	movf	(_ball_x+1)^0,w,c
  3451  002326  2018               	addwfc	(??_initial+3)^0,w,c
  3452  002328  6EDA               	movwf	fsr2h,c
  3453  00232A  0E01               	movlw	1
  3454  00232C  6EDF               	movwf	indf2,c
  3455  00232E                     
  3456                           ;ball.c: 87:  }
  3457  00232E  4A19               	infsnz	initial@k^0,f,c
  3458  002330  2A1A               	incf	(initial@k+1)^0,f,c
  3459  002332  BE1A               	btfsc	(initial@k+1)^0,7,c
  3460  002334  EFA5  F011         	goto	u4341
  3461  002338  501A               	movf	(initial@k+1)^0,w,c
  3462  00233A  E109               	bnz	u4340
  3463  00233C  0E10               	movlw	16
  3464  00233E  5C19               	subwf	initial@k^0,w,c
  3465  002340  A0D8               	btfss	status,0,c
  3466  002342  EFA5  F011         	goto	u4341
  3467  002346  EFA7  F011         	goto	u4340
  3468  00234A                     u4341:
  3469  00234A  EF3E  F011         	goto	l3795
  3470  00234E                     u4340:
  3471  00234E  0012               	return		;funcret
  3472  002350                     __end_of_initial:
  3473                           	opt callstack 0
  3474                           
  3475 ;; *************** function _init_max7219 *****************
  3476 ;; Defined at:
  3477 ;;		line 134 in file "led-metrix.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3491 ;;      Params:         0       0       0       0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0
  3494 ;;      Totals:         0       0       0       0       0       0       0
  3495 ;;Total ram usage:        0 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    5
  3498 ;; This function calls:
  3499 ;;		_clear_matrix
  3500 ;;		_set_register1
  3501 ;;		_set_register2
  3502 ;;		_set_register3
  3503 ;;		_set_register4
  3504 ;; This function is called by:
  3505 ;;		_main
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text6
  3510  00242C                     __ptext6:
  3511                           	opt callstack 0
  3512  00242C                     _init_max7219:
  3513                           	opt callstack 25
  3514  00242C                     
  3515                           ;led-metrix.c: 137:   set_register1((0x0F), (0x0));
  3516  00242C  0E00               	movlw	0
  3517  00242E  6E19               	movwf	set_register1@value^0,c
  3518  002430  0E0F               	movlw	15
  3519  002432  ECB5  F015         	call	_set_register1
  3520                           
  3521                           ;led-metrix.c: 139:   set_register1((0x0A), 0x1);
  3522  002436  0E01               	movlw	1
  3523  002438  6E19               	movwf	set_register1@value^0,c
  3524  00243A  0E0A               	movlw	10
  3525  00243C  ECB5  F015         	call	_set_register1
  3526                           
  3527                           ;led-metrix.c: 141:   set_register1((0X0C), (0x0));
  3528  002440  0E00               	movlw	0
  3529  002442  6E19               	movwf	set_register1@value^0,c
  3530  002444  0E0C               	movlw	12
  3531  002446  ECB5  F015         	call	_set_register1
  3532                           
  3533                           ;led-metrix.c: 143:   set_register1((0x0B), 7);
  3534  00244A  0E07               	movlw	7
  3535  00244C  6E19               	movwf	set_register1@value^0,c
  3536  00244E  0E0B               	movlw	11
  3537  002450  ECB5  F015         	call	_set_register1
  3538                           
  3539                           ;led-metrix.c: 145:   set_register1((0x09), 0B00000000);
  3540  002454  0E00               	movlw	0
  3541  002456  6E19               	movwf	set_register1@value^0,c
  3542  002458  0E09               	movlw	9
  3543  00245A  ECB5  F015         	call	_set_register1
  3544                           
  3545                           ;led-metrix.c: 147:   set_register2((0x0F), (0x0));
  3546  00245E  0E00               	movlw	0
  3547  002460  6E19               	movwf	set_register2@value^0,c
  3548  002462  0E0F               	movlw	15
  3549  002464  ECA6  F015         	call	_set_register2
  3550                           
  3551                           ;led-metrix.c: 149:   set_register2((0x0A), 0x1);
  3552  002468  0E01               	movlw	1
  3553  00246A  6E19               	movwf	set_register2@value^0,c
  3554  00246C  0E0A               	movlw	10
  3555  00246E  ECA6  F015         	call	_set_register2
  3556                           
  3557                           ;led-metrix.c: 151:   set_register2((0X0C), (0x0));
  3558  002472  0E00               	movlw	0
  3559  002474  6E19               	movwf	set_register2@value^0,c
  3560  002476  0E0C               	movlw	12
  3561  002478  ECA6  F015         	call	_set_register2
  3562                           
  3563                           ;led-metrix.c: 153:   set_register2((0x0B), 7);
  3564  00247C  0E07               	movlw	7
  3565  00247E  6E19               	movwf	set_register2@value^0,c
  3566  002480  0E0B               	movlw	11
  3567  002482  ECA6  F015         	call	_set_register2
  3568                           
  3569                           ;led-metrix.c: 155:   set_register2((0x09), 0B00000000);
  3570  002486  0E00               	movlw	0
  3571  002488  6E19               	movwf	set_register2@value^0,c
  3572  00248A  0E09               	movlw	9
  3573  00248C  ECA6  F015         	call	_set_register2
  3574                           
  3575                           ;led-metrix.c: 157:   set_register3((0x0F), (0x0));
  3576  002490  0E00               	movlw	0
  3577  002492  6E19               	movwf	set_register3@value^0,c
  3578  002494  0E0F               	movlw	15
  3579  002496  EC97  F015         	call	_set_register3
  3580                           
  3581                           ;led-metrix.c: 159:   set_register3((0x0A), 0x1);
  3582  00249A  0E01               	movlw	1
  3583  00249C  6E19               	movwf	set_register3@value^0,c
  3584  00249E  0E0A               	movlw	10
  3585  0024A0  EC97  F015         	call	_set_register3
  3586                           
  3587                           ;led-metrix.c: 161:   set_register3((0X0C), (0x0));
  3588  0024A4  0E00               	movlw	0
  3589  0024A6  6E19               	movwf	set_register3@value^0,c
  3590  0024A8  0E0C               	movlw	12
  3591  0024AA  EC97  F015         	call	_set_register3
  3592                           
  3593                           ;led-metrix.c: 163:   set_register3((0x0B), 7);
  3594  0024AE  0E07               	movlw	7
  3595  0024B0  6E19               	movwf	set_register3@value^0,c
  3596  0024B2  0E0B               	movlw	11
  3597  0024B4  EC97  F015         	call	_set_register3
  3598                           
  3599                           ;led-metrix.c: 165:   set_register3((0x09), 0B00000000);
  3600  0024B8  0E00               	movlw	0
  3601  0024BA  6E19               	movwf	set_register3@value^0,c
  3602  0024BC  0E09               	movlw	9
  3603  0024BE  EC97  F015         	call	_set_register3
  3604                           
  3605                           ;led-metrix.c: 167:   set_register4((0x0F), (0x0));
  3606  0024C2  0E00               	movlw	0
  3607  0024C4  6E19               	movwf	set_register4@value^0,c
  3608  0024C6  0E0F               	movlw	15
  3609  0024C8  EC88  F015         	call	_set_register4
  3610                           
  3611                           ;led-metrix.c: 169:   set_register4((0x0A), 0x1);
  3612  0024CC  0E01               	movlw	1
  3613  0024CE  6E19               	movwf	set_register4@value^0,c
  3614  0024D0  0E0A               	movlw	10
  3615  0024D2  EC88  F015         	call	_set_register4
  3616                           
  3617                           ;led-metrix.c: 171:   set_register4((0X0C), (0x0));
  3618  0024D6  0E00               	movlw	0
  3619  0024D8  6E19               	movwf	set_register4@value^0,c
  3620  0024DA  0E0C               	movlw	12
  3621  0024DC  EC88  F015         	call	_set_register4
  3622                           
  3623                           ;led-metrix.c: 173:   set_register4((0x0B), 7);
  3624  0024E0  0E07               	movlw	7
  3625  0024E2  6E19               	movwf	set_register4@value^0,c
  3626  0024E4  0E0B               	movlw	11
  3627  0024E6  EC88  F015         	call	_set_register4
  3628                           
  3629                           ;led-metrix.c: 175:   set_register4((0x09), 0B00000000);
  3630  0024EA  0E00               	movlw	0
  3631  0024EC  6E19               	movwf	set_register4@value^0,c
  3632  0024EE  0E09               	movlw	9
  3633  0024F0  EC88  F015         	call	_set_register4
  3634                           
  3635                           ;led-metrix.c: 179:   clear_matrix();
  3636  0024F4  ECEF  F014         	call	_clear_matrix	;wreg free
  3637  0024F8  0012               	return		;funcret
  3638  0024FA                     __end_of_init_max7219:
  3639                           	opt callstack 0
  3640                           
  3641 ;; *************** function _clear_matrix *****************
  3642 ;; Defined at:
  3643 ;;		line 122 in file "led-metrix.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  i               2   26[COMRAM] int 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3657 ;;      Params:         0       0       0       0       0       0       0
  3658 ;;      Locals:         2       0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0
  3660 ;;      Totals:         2       0       0       0       0       0       0
  3661 ;;Total ram usage:        2 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    4
  3664 ;; This function calls:
  3665 ;;		_set_register1
  3666 ;;		_set_register2
  3667 ;;		_set_register3
  3668 ;;		_set_register4
  3669 ;; This function is called by:
  3670 ;;		_init_max7219
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text7
  3675  0029DE                     __ptext7:
  3676                           	opt callstack 0
  3677  0029DE                     _clear_matrix:
  3678                           	opt callstack 25
  3679  0029DE                     
  3680                           ;led-metrix.c: 125:   for (int i = 0; i < (8); i++)
  3681  0029DE  0E00               	movlw	0
  3682  0029E0  6E1C               	movwf	(clear_matrix@i+1)^0,c
  3683  0029E2  0E00               	movlw	0
  3684  0029E4  6E1B               	movwf	clear_matrix@i^0,c
  3685  0029E6                     l3603:
  3686                           
  3687                           ;led-metrix.c: 126:   {;led-metrix.c: 127:     set_register1(((i) + 1), 0b0000000);
  3688  0029E6  0E00               	movlw	0
  3689  0029E8  6E19               	movwf	set_register1@value^0,c
  3690  0029EA  281B               	incf	clear_matrix@i^0,w,c
  3691  0029EC  ECB5  F015         	call	_set_register1
  3692                           
  3693                           ;led-metrix.c: 128:     set_register2(((i) + 1), 0b0000000);
  3694  0029F0  0E00               	movlw	0
  3695  0029F2  6E19               	movwf	set_register2@value^0,c
  3696  0029F4  281B               	incf	clear_matrix@i^0,w,c
  3697  0029F6  ECA6  F015         	call	_set_register2
  3698                           
  3699                           ;led-metrix.c: 129:     set_register3(((i) + 1), 0b0000000);
  3700  0029FA  0E00               	movlw	0
  3701  0029FC  6E19               	movwf	set_register3@value^0,c
  3702  0029FE  281B               	incf	clear_matrix@i^0,w,c
  3703  002A00  EC97  F015         	call	_set_register3
  3704                           
  3705                           ;led-metrix.c: 130:     set_register4(((i) + 1), 0b0000000);
  3706  002A04  0E00               	movlw	0
  3707  002A06  6E19               	movwf	set_register4@value^0,c
  3708  002A08  281B               	incf	clear_matrix@i^0,w,c
  3709  002A0A  EC88  F015         	call	_set_register4
  3710  002A0E                     
  3711                           ;led-metrix.c: 131:   }
  3712  002A0E  4A1B               	infsnz	clear_matrix@i^0,f,c
  3713  002A10  2A1C               	incf	(clear_matrix@i+1)^0,f,c
  3714  002A12  BE1C               	btfsc	(clear_matrix@i+1)^0,7,c
  3715  002A14  EF15  F015         	goto	u4001
  3716  002A18  501C               	movf	(clear_matrix@i+1)^0,w,c
  3717  002A1A  E109               	bnz	u4000
  3718  002A1C  0E08               	movlw	8
  3719  002A1E  5C1B               	subwf	clear_matrix@i^0,w,c
  3720  002A20  A0D8               	btfss	status,0,c
  3721  002A22  EF15  F015         	goto	u4001
  3722  002A26  EF17  F015         	goto	u4000
  3723  002A2A                     u4001:
  3724  002A2A  EFF3  F014         	goto	l3603
  3725  002A2E                     u4000:
  3726  002A2E  0012               	return		;funcret
  3727  002A30                     __end_of_clear_matrix:
  3728                           	opt callstack 0
  3729                           
  3730 ;; *************** function _set_register4 *****************
  3731 ;; Defined at:
  3732 ;;		line 114 in file "led-metrix.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  address         1    wreg     unsigned char 
  3735 ;;  value           1   24[COMRAM] unsigned char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  address         1   25[COMRAM] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3747 ;;      Params:         1       0       0       0       0       0       0
  3748 ;;      Locals:         1       0       0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0
  3750 ;;      Totals:         2       0       0       0       0       0       0
  3751 ;;Total ram usage:        2 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    3
  3754 ;; This function calls:
  3755 ;;		_shiftOut4
  3756 ;; This function is called by:
  3757 ;;		_clear_matrix
  3758 ;;		_init_max7219
  3759 ;;		_plot
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text8
  3764  002B10                     __ptext8:
  3765                           	opt callstack 0
  3766  002B10                     _set_register4:
  3767                           	opt callstack 26
  3768                           
  3769                           ;incstack = 0
  3770                           ;set_register4@address stored from wreg
  3771  002B10  6E1A               	movwf	set_register4@address^0,c
  3772  002B12                     
  3773                           ;led-metrix.c: 114: void set_register4(unsigned char address, unsigned char value);led-m
      +                          etrix.c: 115: {;led-metrix.c: 116:   LATCbits.LATC4 = 0x00;
  3774  002B12  988B               	bcf	139,4,c	;volatile
  3775                           
  3776                           ;led-metrix.c: 117:   LATCbits.LATC5 = 0x00;
  3777  002B14  9A8B               	bcf	139,5,c	;volatile
  3778  002B16                     
  3779                           ;led-metrix.c: 118:   shiftOut4(1, address);
  3780  002B16  C01A  F015         	movff	set_register4@address,shiftOut4@val
  3781  002B1A  0E01               	movlw	1
  3782  002B1C  ECE3  F013         	call	_shiftOut4
  3783                           
  3784                           ;led-metrix.c: 119:   shiftOut4(1, value);
  3785  002B20  C019  F015         	movff	set_register4@value,shiftOut4@val
  3786  002B24  0E01               	movlw	1
  3787  002B26  ECE3  F013         	call	_shiftOut4
  3788  002B2A                     
  3789                           ;led-metrix.c: 120:   LATCbits.LATC5 = 0x01;
  3790  002B2A  8A8B               	bsf	139,5,c	;volatile
  3791  002B2C  0012               	return		;funcret
  3792  002B2E                     __end_of_set_register4:
  3793                           	opt callstack 0
  3794                           
  3795 ;; *************** function _shiftOut4 *****************
  3796 ;; Defined at:
  3797 ;;		line 66 in file "led-metrix.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  bitOrder        1    wreg     unsigned char 
  3800 ;;  val             1   20[COMRAM] unsigned char 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  bitOrder        1   22[COMRAM] unsigned char 
  3803 ;;  i               1   23[COMRAM] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3813 ;;      Params:         1       0       0       0       0       0       0
  3814 ;;      Locals:         2       0       0       0       0       0       0
  3815 ;;      Temps:          1       0       0       0       0       0       0
  3816 ;;      Totals:         4       0       0       0       0       0       0
  3817 ;;Total ram usage:        4 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    2
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_set_register4
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text9
  3828  0027C6                     __ptext9:
  3829                           	opt callstack 0
  3830  0027C6                     _shiftOut4:
  3831                           	opt callstack 26
  3832                           
  3833                           ;incstack = 0
  3834                           ;shiftOut4@bitOrder stored from wreg
  3835  0027C6  6E17               	movwf	shiftOut4@bitOrder^0,c
  3836  0027C8                     
  3837                           ;led-metrix.c: 66: void shiftOut4(uint8_t bitOrder, uint8_t val);led-metrix.c: 67: {;led
      +                          -metrix.c: 68:     uint8_t i;;led-metrix.c: 70:     for (i = 0; i < 8; i++) {
  3838  0027C8  0E00               	movlw	0
  3839  0027CA  6E18               	movwf	shiftOut4@i^0,c
  3840  0027CC                     l3547:
  3841                           
  3842                           ;led-metrix.c: 71:         if (bitOrder == 0)
  3843  0027CC  5017               	movf	shiftOut4@bitOrder^0,w,c
  3844  0027CE  A4D8               	btfss	status,2,c
  3845  0027D0  EFEC  F013         	goto	u3911
  3846  0027D4  EFEE  F013         	goto	u3910
  3847  0027D8                     u3911:
  3848  0027D8  EF04  F014         	goto	l3551
  3849  0027DC                     u3910:
  3850  0027DC                     
  3851                           ;led-metrix.c: 72:         {;led-metrix.c: 73:             LATCbits.LATC6 = (val & 1)==1
      +                           ;
  3852  0027DC  B015               	btfsc	shiftOut4@val^0,0,c
  3853  0027DE  EFF3  F013         	goto	u3921
  3854  0027E2  EFF7  F013         	goto	u3920
  3855  0027E6                     u3921:
  3856  0027E6  6A16               	clrf	??_shiftOut4^0,c
  3857  0027E8  2A16               	incf	??_shiftOut4^0,f,c
  3858  0027EA  EFF8  F013         	goto	u3938
  3859  0027EE                     u3920:
  3860  0027EE  6A16               	clrf	??_shiftOut4^0,c
  3861  0027F0                     u3938:
  3862  0027F0  3A16               	swapf	??_shiftOut4^0,f,c
  3863  0027F2  4616               	rlncf	??_shiftOut4^0,f,c
  3864  0027F4  4616               	rlncf	??_shiftOut4^0,f,c
  3865  0027F6  508B               	movf	139,w,c	;volatile
  3866  0027F8  1816               	xorwf	??_shiftOut4^0,w,c
  3867  0027FA  0BBF               	andlw	-65
  3868  0027FC  1816               	xorwf	??_shiftOut4^0,w,c
  3869  0027FE  6E8B               	movwf	139,c	;volatile
  3870                           
  3871                           ;led-metrix.c: 74:             val >>= 1;
  3872  002800  90D8               	bcf	status,0,c
  3873  002802  3215               	rrcf	shiftOut4@val^0,f,c
  3874                           
  3875                           ;led-metrix.c: 75:         }
  3876  002804  EF18  F014         	goto	l3553
  3877  002808                     l3551:
  3878                           
  3879                           ;led-metrix.c: 77:         {;led-metrix.c: 78:             LATCbits.LATC6 = (val & 128) 
      +                          != 0;
  3880  002808  BE15               	btfsc	shiftOut4@val^0,7,c
  3881  00280A  EF09  F014         	goto	u3941
  3882  00280E  EF0D  F014         	goto	u3940
  3883  002812                     u3941:
  3884  002812  6A16               	clrf	??_shiftOut4^0,c
  3885  002814  2A16               	incf	??_shiftOut4^0,f,c
  3886  002816  EF0E  F014         	goto	u3958
  3887  00281A                     u3940:
  3888  00281A  6A16               	clrf	??_shiftOut4^0,c
  3889  00281C                     u3958:
  3890  00281C  3A16               	swapf	??_shiftOut4^0,f,c
  3891  00281E  4616               	rlncf	??_shiftOut4^0,f,c
  3892  002820  4616               	rlncf	??_shiftOut4^0,f,c
  3893  002822  508B               	movf	139,w,c	;volatile
  3894  002824  1816               	xorwf	??_shiftOut4^0,w,c
  3895  002826  0BBF               	andlw	-65
  3896  002828  1816               	xorwf	??_shiftOut4^0,w,c
  3897  00282A  6E8B               	movwf	139,c	;volatile
  3898                           
  3899                           ;led-metrix.c: 79:             val <<= 1;
  3900  00282C  90D8               	bcf	status,0,c
  3901  00282E  3615               	rlcf	shiftOut4@val^0,f,c
  3902  002830                     l3553:
  3903                           
  3904                           ;led-metrix.c: 82:         LATCbits.LATC4 = 0x01;
  3905  002830  888B               	bsf	139,4,c	;volatile
  3906  002832                     
  3907                           ;led-metrix.c: 83:         _delay(5);
  3908  002832  D000               	nop2		;2 cycle nop
  3909  002834  D000               	nop2		;2 cycle nop
  3910  002836  F000               	nop	
  3911  002838                     
  3912                           ;led-metrix.c: 84:         LATCbits.LATC4 = 0x00;
  3913  002838  988B               	bcf	139,4,c	;volatile
  3914  00283A                     
  3915                           ;led-metrix.c: 85:     }
  3916  00283A  2A18               	incf	shiftOut4@i^0,f,c
  3917  00283C  0E07               	movlw	7
  3918  00283E  6418               	cpfsgt	shiftOut4@i^0,c
  3919  002840  EF24  F014         	goto	u3961
  3920  002844  EF26  F014         	goto	u3960
  3921  002848                     u3961:
  3922  002848  EFE6  F013         	goto	l3547
  3923  00284C                     u3960:
  3924  00284C  0012               	return		;funcret
  3925  00284E                     __end_of_shiftOut4:
  3926                           	opt callstack 0
  3927                           
  3928 ;; *************** function _set_register3 *****************
  3929 ;; Defined at:
  3930 ;;		line 106 in file "led-metrix.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  address         1    wreg     unsigned char 
  3933 ;;  value           1   24[COMRAM] unsigned char 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  address         1   25[COMRAM] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3945 ;;      Params:         1       0       0       0       0       0       0
  3946 ;;      Locals:         1       0       0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0
  3948 ;;      Totals:         2       0       0       0       0       0       0
  3949 ;;Total ram usage:        2 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    3
  3952 ;; This function calls:
  3953 ;;		_shiftOut3
  3954 ;; This function is called by:
  3955 ;;		_clear_matrix
  3956 ;;		_init_max7219
  3957 ;;		_plot
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text10
  3962  002B2E                     __ptext10:
  3963                           	opt callstack 0
  3964  002B2E                     _set_register3:
  3965                           	opt callstack 26
  3966                           
  3967                           ;incstack = 0
  3968                           ;set_register3@address stored from wreg
  3969  002B2E  6E1A               	movwf	set_register3@address^0,c
  3970  002B30                     
  3971                           ;led-metrix.c: 106: void set_register3(unsigned char address, unsigned char value);led-m
      +                          etrix.c: 107: {;led-metrix.c: 108:   LATDbits.LATD4 = 0x00;
  3972  002B30  988C               	bcf	140,4,c	;volatile
  3973                           
  3974                           ;led-metrix.c: 109:   LATDbits.LATD5 = 0x00;
  3975  002B32  9A8C               	bcf	140,5,c	;volatile
  3976  002B34                     
  3977                           ;led-metrix.c: 110:   shiftOut3(1, address);
  3978  002B34  C01A  F015         	movff	set_register3@address,shiftOut3@val
  3979  002B38  0E01               	movlw	1
  3980  002B3A  EC27  F014         	call	_shiftOut3
  3981                           
  3982                           ;led-metrix.c: 111:   shiftOut3(1, value);
  3983  002B3E  C019  F015         	movff	set_register3@value,shiftOut3@val
  3984  002B42  0E01               	movlw	1
  3985  002B44  EC27  F014         	call	_shiftOut3
  3986  002B48                     
  3987                           ;led-metrix.c: 112:   LATDbits.LATD5 = 0x01;
  3988  002B48  8A8C               	bsf	140,5,c	;volatile
  3989  002B4A  0012               	return		;funcret
  3990  002B4C                     __end_of_set_register3:
  3991                           	opt callstack 0
  3992                           
  3993 ;; *************** function _shiftOut3 *****************
  3994 ;; Defined at:
  3995 ;;		line 45 in file "led-metrix.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  bitOrder        1    wreg     unsigned char 
  3998 ;;  val             1   20[COMRAM] unsigned char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  bitOrder        1   22[COMRAM] unsigned char 
  4001 ;;  i               1   23[COMRAM] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4011 ;;      Params:         1       0       0       0       0       0       0
  4012 ;;      Locals:         2       0       0       0       0       0       0
  4013 ;;      Temps:          1       0       0       0       0       0       0
  4014 ;;      Totals:         4       0       0       0       0       0       0
  4015 ;;Total ram usage:        4 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    2
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_set_register3
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text11
  4026  00284E                     __ptext11:
  4027                           	opt callstack 0
  4028  00284E                     _shiftOut3:
  4029                           	opt callstack 26
  4030                           
  4031                           ;incstack = 0
  4032                           ;shiftOut3@bitOrder stored from wreg
  4033  00284E  6E17               	movwf	shiftOut3@bitOrder^0,c
  4034  002850                     
  4035                           ;led-metrix.c: 45: void shiftOut3(uint8_t bitOrder, uint8_t val);led-metrix.c: 46: {;led
      +                          -metrix.c: 47:     uint8_t i;;led-metrix.c: 49:     for (i = 0; i < 8; i++) {
  4036  002850  0E00               	movlw	0
  4037  002852  6E18               	movwf	shiftOut3@i^0,c
  4038  002854                     l3525:
  4039                           
  4040                           ;led-metrix.c: 50:         if (bitOrder == 0)
  4041  002854  5017               	movf	shiftOut3@bitOrder^0,w,c
  4042  002856  A4D8               	btfss	status,2,c
  4043  002858  EF30  F014         	goto	u3851
  4044  00285C  EF32  F014         	goto	u3850
  4045  002860                     u3851:
  4046  002860  EF48  F014         	goto	l3529
  4047  002864                     u3850:
  4048  002864                     
  4049                           ;led-metrix.c: 51:         {;led-metrix.c: 52:             LATDbits.LATD6 = (val & 1)==1
      +                           ;
  4050  002864  B015               	btfsc	shiftOut3@val^0,0,c
  4051  002866  EF37  F014         	goto	u3861
  4052  00286A  EF3B  F014         	goto	u3860
  4053  00286E                     u3861:
  4054  00286E  6A16               	clrf	??_shiftOut3^0,c
  4055  002870  2A16               	incf	??_shiftOut3^0,f,c
  4056  002872  EF3C  F014         	goto	u3878
  4057  002876                     u3860:
  4058  002876  6A16               	clrf	??_shiftOut3^0,c
  4059  002878                     u3878:
  4060  002878  3A16               	swapf	??_shiftOut3^0,f,c
  4061  00287A  4616               	rlncf	??_shiftOut3^0,f,c
  4062  00287C  4616               	rlncf	??_shiftOut3^0,f,c
  4063  00287E  508C               	movf	140,w,c	;volatile
  4064  002880  1816               	xorwf	??_shiftOut3^0,w,c
  4065  002882  0BBF               	andlw	-65
  4066  002884  1816               	xorwf	??_shiftOut3^0,w,c
  4067  002886  6E8C               	movwf	140,c	;volatile
  4068                           
  4069                           ;led-metrix.c: 53:             val >>= 1;
  4070  002888  90D8               	bcf	status,0,c
  4071  00288A  3215               	rrcf	shiftOut3@val^0,f,c
  4072                           
  4073                           ;led-metrix.c: 54:         }
  4074  00288C  EF5C  F014         	goto	l3531
  4075  002890                     l3529:
  4076                           
  4077                           ;led-metrix.c: 56:         {;led-metrix.c: 57:             LATDbits.LATD6 = (val & 128) 
      +                          != 0;
  4078  002890  BE15               	btfsc	shiftOut3@val^0,7,c
  4079  002892  EF4D  F014         	goto	u3881
  4080  002896  EF51  F014         	goto	u3880
  4081  00289A                     u3881:
  4082  00289A  6A16               	clrf	??_shiftOut3^0,c
  4083  00289C  2A16               	incf	??_shiftOut3^0,f,c
  4084  00289E  EF52  F014         	goto	u3898
  4085  0028A2                     u3880:
  4086  0028A2  6A16               	clrf	??_shiftOut3^0,c
  4087  0028A4                     u3898:
  4088  0028A4  3A16               	swapf	??_shiftOut3^0,f,c
  4089  0028A6  4616               	rlncf	??_shiftOut3^0,f,c
  4090  0028A8  4616               	rlncf	??_shiftOut3^0,f,c
  4091  0028AA  508C               	movf	140,w,c	;volatile
  4092  0028AC  1816               	xorwf	??_shiftOut3^0,w,c
  4093  0028AE  0BBF               	andlw	-65
  4094  0028B0  1816               	xorwf	??_shiftOut3^0,w,c
  4095  0028B2  6E8C               	movwf	140,c	;volatile
  4096                           
  4097                           ;led-metrix.c: 58:             val <<= 1;
  4098  0028B4  90D8               	bcf	status,0,c
  4099  0028B6  3615               	rlcf	shiftOut3@val^0,f,c
  4100  0028B8                     l3531:
  4101                           
  4102                           ;led-metrix.c: 61:         LATDbits.LATD4 = 0x01;
  4103  0028B8  888C               	bsf	140,4,c	;volatile
  4104  0028BA                     
  4105                           ;led-metrix.c: 62:         _delay(5);
  4106  0028BA  D000               	nop2		;2 cycle nop
  4107  0028BC  D000               	nop2		;2 cycle nop
  4108  0028BE  F000               	nop	
  4109  0028C0                     
  4110                           ;led-metrix.c: 63:         LATDbits.LATD4 = 0x00;
  4111  0028C0  988C               	bcf	140,4,c	;volatile
  4112  0028C2                     
  4113                           ;led-metrix.c: 64:     }
  4114  0028C2  2A18               	incf	shiftOut3@i^0,f,c
  4115  0028C4  0E07               	movlw	7
  4116  0028C6  6418               	cpfsgt	shiftOut3@i^0,c
  4117  0028C8  EF68  F014         	goto	u3901
  4118  0028CC  EF6A  F014         	goto	u3900
  4119  0028D0                     u3901:
  4120  0028D0  EF2A  F014         	goto	l3525
  4121  0028D4                     u3900:
  4122  0028D4  0012               	return		;funcret
  4123  0028D6                     __end_of_shiftOut3:
  4124                           	opt callstack 0
  4125                           
  4126 ;; *************** function _set_register2 *****************
  4127 ;; Defined at:
  4128 ;;		line 98 in file "led-metrix.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;  address         1    wreg     unsigned char 
  4131 ;;  value           1   24[COMRAM] unsigned char 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  address         1   25[COMRAM] unsigned char 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4143 ;;      Params:         1       0       0       0       0       0       0
  4144 ;;      Locals:         1       0       0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0
  4146 ;;      Totals:         2       0       0       0       0       0       0
  4147 ;;Total ram usage:        2 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    3
  4150 ;; This function calls:
  4151 ;;		_shiftOut2
  4152 ;; This function is called by:
  4153 ;;		_clear_matrix
  4154 ;;		_init_max7219
  4155 ;;		_plot
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text12
  4160  002B4C                     __ptext12:
  4161                           	opt callstack 0
  4162  002B4C                     _set_register2:
  4163                           	opt callstack 26
  4164                           
  4165                           ;incstack = 0
  4166                           ;set_register2@address stored from wreg
  4167  002B4C  6E1A               	movwf	set_register2@address^0,c
  4168  002B4E                     
  4169                           ;led-metrix.c: 98: void set_register2(unsigned char address, unsigned char value);led-me
      +                          trix.c: 99: {;led-metrix.c: 100:   LATBbits.LATB0 = 0x00;
  4170  002B4E  908A               	bcf	138,0,c	;volatile
  4171                           
  4172                           ;led-metrix.c: 101:   LATBbits.LATB1 = 0x00;
  4173  002B50  928A               	bcf	138,1,c	;volatile
  4174  002B52                     
  4175                           ;led-metrix.c: 102:   shiftOut2(1, address);
  4176  002B52  C01A  F015         	movff	set_register2@address,shiftOut2@val
  4177  002B56  0E01               	movlw	1
  4178  002B58  EC6B  F014         	call	_shiftOut2
  4179                           
  4180                           ;led-metrix.c: 103:   shiftOut2(1, value);
  4181  002B5C  C019  F015         	movff	set_register2@value,shiftOut2@val
  4182  002B60  0E01               	movlw	1
  4183  002B62  EC6B  F014         	call	_shiftOut2
  4184  002B66                     
  4185                           ;led-metrix.c: 104:   LATBbits.LATB1 = 0x01;
  4186  002B66  828A               	bsf	138,1,c	;volatile
  4187  002B68  0012               	return		;funcret
  4188  002B6A                     __end_of_set_register2:
  4189                           	opt callstack 0
  4190                           
  4191 ;; *************** function _shiftOut2 *****************
  4192 ;; Defined at:
  4193 ;;		line 24 in file "led-metrix.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  bitOrder        1    wreg     unsigned char 
  4196 ;;  val             1   20[COMRAM] unsigned char 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  bitOrder        1   22[COMRAM] unsigned char 
  4199 ;;  i               1   23[COMRAM] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4209 ;;      Params:         1       0       0       0       0       0       0
  4210 ;;      Locals:         2       0       0       0       0       0       0
  4211 ;;      Temps:          1       0       0       0       0       0       0
  4212 ;;      Totals:         4       0       0       0       0       0       0
  4213 ;;Total ram usage:        4 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    2
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_set_register2
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text13
  4224  0028D6                     __ptext13:
  4225                           	opt callstack 0
  4226  0028D6                     _shiftOut2:
  4227                           	opt callstack 26
  4228                           
  4229                           ;incstack = 0
  4230                           ;shiftOut2@bitOrder stored from wreg
  4231  0028D6  6E17               	movwf	shiftOut2@bitOrder^0,c
  4232  0028D8                     
  4233                           ;led-metrix.c: 24: void shiftOut2(uint8_t bitOrder, uint8_t val);led-metrix.c: 25: {;led
      +                          -metrix.c: 26:     uint8_t i;;led-metrix.c: 28:     for (i = 0; i < 8; i++) {
  4234  0028D8  0E00               	movlw	0
  4235  0028DA  6E18               	movwf	shiftOut2@i^0,c
  4236  0028DC                     l3503:
  4237                           
  4238                           ;led-metrix.c: 29:         if (bitOrder == 0)
  4239  0028DC  5017               	movf	shiftOut2@bitOrder^0,w,c
  4240  0028DE  A4D8               	btfss	status,2,c
  4241  0028E0  EF74  F014         	goto	u3791
  4242  0028E4  EF76  F014         	goto	u3790
  4243  0028E8                     u3791:
  4244  0028E8  EF8B  F014         	goto	l3507
  4245  0028EC                     u3790:
  4246  0028EC                     
  4247                           ;led-metrix.c: 30:         {;led-metrix.c: 31:             LATBbits.LATB2 = (val & 1)==1
      +                           ;
  4248  0028EC  B015               	btfsc	shiftOut2@val^0,0,c
  4249  0028EE  EF7B  F014         	goto	u3801
  4250  0028F2  EF7F  F014         	goto	u3800
  4251  0028F6                     u3801:
  4252  0028F6  6A16               	clrf	??_shiftOut2^0,c
  4253  0028F8  2A16               	incf	??_shiftOut2^0,f,c
  4254  0028FA  EF80  F014         	goto	u3818
  4255  0028FE                     u3800:
  4256  0028FE  6A16               	clrf	??_shiftOut2^0,c
  4257  002900                     u3818:
  4258  002900  4616               	rlncf	??_shiftOut2^0,f,c
  4259  002902  4616               	rlncf	??_shiftOut2^0,f,c
  4260  002904  508A               	movf	138,w,c	;volatile
  4261  002906  1816               	xorwf	??_shiftOut2^0,w,c
  4262  002908  0BFB               	andlw	-5
  4263  00290A  1816               	xorwf	??_shiftOut2^0,w,c
  4264  00290C  6E8A               	movwf	138,c	;volatile
  4265                           
  4266                           ;led-metrix.c: 32:             val >>= 1;
  4267  00290E  90D8               	bcf	status,0,c
  4268  002910  3215               	rrcf	shiftOut2@val^0,f,c
  4269                           
  4270                           ;led-metrix.c: 33:         }
  4271  002912  EF9E  F014         	goto	l3509
  4272  002916                     l3507:
  4273                           
  4274                           ;led-metrix.c: 35:         {;led-metrix.c: 36:             LATBbits.LATB2 = (val & 128) 
      +                          != 0;
  4275  002916  BE15               	btfsc	shiftOut2@val^0,7,c
  4276  002918  EF90  F014         	goto	u3821
  4277  00291C  EF94  F014         	goto	u3820
  4278  002920                     u3821:
  4279  002920  6A16               	clrf	??_shiftOut2^0,c
  4280  002922  2A16               	incf	??_shiftOut2^0,f,c
  4281  002924  EF95  F014         	goto	u3838
  4282  002928                     u3820:
  4283  002928  6A16               	clrf	??_shiftOut2^0,c
  4284  00292A                     u3838:
  4285  00292A  4616               	rlncf	??_shiftOut2^0,f,c
  4286  00292C  4616               	rlncf	??_shiftOut2^0,f,c
  4287  00292E  508A               	movf	138,w,c	;volatile
  4288  002930  1816               	xorwf	??_shiftOut2^0,w,c
  4289  002932  0BFB               	andlw	-5
  4290  002934  1816               	xorwf	??_shiftOut2^0,w,c
  4291  002936  6E8A               	movwf	138,c	;volatile
  4292                           
  4293                           ;led-metrix.c: 37:             val <<= 1;
  4294  002938  90D8               	bcf	status,0,c
  4295  00293A  3615               	rlcf	shiftOut2@val^0,f,c
  4296  00293C                     l3509:
  4297                           
  4298                           ;led-metrix.c: 40:         LATBbits.LATB0 = 0x01;
  4299  00293C  808A               	bsf	138,0,c	;volatile
  4300  00293E                     
  4301                           ;led-metrix.c: 41:         _delay(5);
  4302  00293E  D000               	nop2		;2 cycle nop
  4303  002940  D000               	nop2		;2 cycle nop
  4304  002942  F000               	nop	
  4305  002944                     
  4306                           ;led-metrix.c: 42:         LATBbits.LATB0 = 0x00;
  4307  002944  908A               	bcf	138,0,c	;volatile
  4308  002946                     
  4309                           ;led-metrix.c: 43:     }
  4310  002946  2A18               	incf	shiftOut2@i^0,f,c
  4311  002948  0E07               	movlw	7
  4312  00294A  6418               	cpfsgt	shiftOut2@i^0,c
  4313  00294C  EFAA  F014         	goto	u3841
  4314  002950  EFAC  F014         	goto	u3840
  4315  002954                     u3841:
  4316  002954  EF6E  F014         	goto	l3503
  4317  002958                     u3840:
  4318  002958  0012               	return		;funcret
  4319  00295A                     __end_of_shiftOut2:
  4320                           	opt callstack 0
  4321                           
  4322 ;; *************** function _set_register1 *****************
  4323 ;; Defined at:
  4324 ;;		line 90 in file "led-metrix.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  address         1    wreg     unsigned char 
  4327 ;;  value           1   24[COMRAM] unsigned char 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  address         1   25[COMRAM] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0, cstack
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4339 ;;      Params:         1       0       0       0       0       0       0
  4340 ;;      Locals:         1       0       0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0
  4342 ;;      Totals:         2       0       0       0       0       0       0
  4343 ;;Total ram usage:        2 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    3
  4346 ;; This function calls:
  4347 ;;		_shiftOut1
  4348 ;; This function is called by:
  4349 ;;		_clear_matrix
  4350 ;;		_init_max7219
  4351 ;;		_plot
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text14
  4356  002B6A                     __ptext14:
  4357                           	opt callstack 0
  4358  002B6A                     _set_register1:
  4359                           	opt callstack 26
  4360                           
  4361                           ;incstack = 0
  4362                           ;set_register1@address stored from wreg
  4363  002B6A  6E1A               	movwf	set_register1@address^0,c
  4364  002B6C                     
  4365                           ;led-metrix.c: 90: void set_register1(unsigned char address, unsigned char value);led-me
      +                          trix.c: 91: {;led-metrix.c: 92:   LATBbits.LATB3 = 0x00;
  4366  002B6C  968A               	bcf	138,3,c	;volatile
  4367                           
  4368                           ;led-metrix.c: 93:   LATBbits.LATB4 = 0x00;
  4369  002B6E  988A               	bcf	138,4,c	;volatile
  4370  002B70                     
  4371                           ;led-metrix.c: 94:   shiftOut1(1, address);
  4372  002B70  C01A  F015         	movff	set_register1@address,shiftOut1@val
  4373  002B74  0E01               	movlw	1
  4374  002B76  ECAD  F014         	call	_shiftOut1
  4375                           
  4376                           ;led-metrix.c: 95:   shiftOut1(1, value);
  4377  002B7A  C019  F015         	movff	set_register1@value,shiftOut1@val
  4378  002B7E  0E01               	movlw	1
  4379  002B80  ECAD  F014         	call	_shiftOut1
  4380  002B84                     
  4381                           ;led-metrix.c: 96:   LATBbits.LATB4 = 0x01;
  4382  002B84  888A               	bsf	138,4,c	;volatile
  4383  002B86  0012               	return		;funcret
  4384  002B88                     __end_of_set_register1:
  4385                           	opt callstack 0
  4386                           
  4387 ;; *************** function _shiftOut1 *****************
  4388 ;; Defined at:
  4389 ;;		line 3 in file "led-metrix.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  bitOrder        1    wreg     unsigned char 
  4392 ;;  val             1   20[COMRAM] unsigned char 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  bitOrder        1   22[COMRAM] unsigned char 
  4395 ;;  i               1   23[COMRAM] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      void 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4405 ;;      Params:         1       0       0       0       0       0       0
  4406 ;;      Locals:         2       0       0       0       0       0       0
  4407 ;;      Temps:          1       0       0       0       0       0       0
  4408 ;;      Totals:         4       0       0       0       0       0       0
  4409 ;;Total ram usage:        4 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    2
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_set_register1
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text15
  4420  00295A                     __ptext15:
  4421                           	opt callstack 0
  4422  00295A                     _shiftOut1:
  4423                           	opt callstack 26
  4424                           
  4425                           ;incstack = 0
  4426                           ;shiftOut1@bitOrder stored from wreg
  4427  00295A  6E17               	movwf	shiftOut1@bitOrder^0,c
  4428  00295C                     
  4429                           ;led-metrix.c: 3: void shiftOut1(uint8_t bitOrder, uint8_t val);led-metrix.c: 4: {;led-m
      +                          etrix.c: 5:     uint8_t i;;led-metrix.c: 7:     for (i = 0; i < 8; i++) {
  4430  00295C  0E00               	movlw	0
  4431  00295E  6E18               	movwf	shiftOut1@i^0,c
  4432  002960                     l3481:
  4433                           
  4434                           ;led-metrix.c: 8:         if (bitOrder == 0)
  4435  002960  5017               	movf	shiftOut1@bitOrder^0,w,c
  4436  002962  A4D8               	btfss	status,2,c
  4437  002964  EFB6  F014         	goto	u3731
  4438  002968  EFB8  F014         	goto	u3730
  4439  00296C                     u3731:
  4440  00296C  EFCD  F014         	goto	l3485
  4441  002970                     u3730:
  4442  002970                     
  4443                           ;led-metrix.c: 9:         {;led-metrix.c: 10:             LATBbits.LATB5 = (val & 1)==1 
      +                          ;
  4444  002970  B015               	btfsc	shiftOut1@val^0,0,c
  4445  002972  EFBD  F014         	goto	u3741
  4446  002976  EFC1  F014         	goto	u3740
  4447  00297A                     u3741:
  4448  00297A  6A16               	clrf	??_shiftOut1^0,c
  4449  00297C  2A16               	incf	??_shiftOut1^0,f,c
  4450  00297E  EFC2  F014         	goto	u3758
  4451  002982                     u3740:
  4452  002982  6A16               	clrf	??_shiftOut1^0,c
  4453  002984                     u3758:
  4454  002984  3A16               	swapf	??_shiftOut1^0,f,c
  4455  002986  4616               	rlncf	??_shiftOut1^0,f,c
  4456  002988  508A               	movf	138,w,c	;volatile
  4457  00298A  1816               	xorwf	??_shiftOut1^0,w,c
  4458  00298C  0BDF               	andlw	-33
  4459  00298E  1816               	xorwf	??_shiftOut1^0,w,c
  4460  002990  6E8A               	movwf	138,c	;volatile
  4461                           
  4462                           ;led-metrix.c: 11:             val >>= 1;
  4463  002992  90D8               	bcf	status,0,c
  4464  002994  3215               	rrcf	shiftOut1@val^0,f,c
  4465                           
  4466                           ;led-metrix.c: 12:         }
  4467  002996  EFE0  F014         	goto	l3487
  4468  00299A                     l3485:
  4469                           
  4470                           ;led-metrix.c: 14:         {;led-metrix.c: 15:             LATBbits.LATB5 = (val & 128) 
      +                          != 0;
  4471  00299A  BE15               	btfsc	shiftOut1@val^0,7,c
  4472  00299C  EFD2  F014         	goto	u3761
  4473  0029A0  EFD6  F014         	goto	u3760
  4474  0029A4                     u3761:
  4475  0029A4  6A16               	clrf	??_shiftOut1^0,c
  4476  0029A6  2A16               	incf	??_shiftOut1^0,f,c
  4477  0029A8  EFD7  F014         	goto	u3778
  4478  0029AC                     u3760:
  4479  0029AC  6A16               	clrf	??_shiftOut1^0,c
  4480  0029AE                     u3778:
  4481  0029AE  3A16               	swapf	??_shiftOut1^0,f,c
  4482  0029B0  4616               	rlncf	??_shiftOut1^0,f,c
  4483  0029B2  508A               	movf	138,w,c	;volatile
  4484  0029B4  1816               	xorwf	??_shiftOut1^0,w,c
  4485  0029B6  0BDF               	andlw	-33
  4486  0029B8  1816               	xorwf	??_shiftOut1^0,w,c
  4487  0029BA  6E8A               	movwf	138,c	;volatile
  4488                           
  4489                           ;led-metrix.c: 16:             val <<= 1;
  4490  0029BC  90D8               	bcf	status,0,c
  4491  0029BE  3615               	rlcf	shiftOut1@val^0,f,c
  4492  0029C0                     l3487:
  4493                           
  4494                           ;led-metrix.c: 19:         LATBbits.LATB3 = 0x01;
  4495  0029C0  868A               	bsf	138,3,c	;volatile
  4496  0029C2                     
  4497                           ;led-metrix.c: 20:         _delay(5);
  4498  0029C2  D000               	nop2		;2 cycle nop
  4499  0029C4  D000               	nop2		;2 cycle nop
  4500  0029C6  F000               	nop	
  4501  0029C8                     
  4502                           ;led-metrix.c: 21:         LATBbits.LATB3 = 0x00;
  4503  0029C8  968A               	bcf	138,3,c	;volatile
  4504  0029CA                     
  4505                           ;led-metrix.c: 22:     }
  4506  0029CA  2A18               	incf	shiftOut1@i^0,f,c
  4507  0029CC  0E07               	movlw	7
  4508  0029CE  6418               	cpfsgt	shiftOut1@i^0,c
  4509  0029D0  EFEC  F014         	goto	u3781
  4510  0029D4  EFEE  F014         	goto	u3780
  4511  0029D8                     u3781:
  4512  0029D8  EFB0  F014         	goto	l3481
  4513  0029DC                     u3780:
  4514  0029DC  0012               	return		;funcret
  4515  0029DE                     __end_of_shiftOut1:
  4516                           	opt callstack 0
  4517                           
  4518 ;; *************** function _initMap *****************
  4519 ;; Defined at:
  4520 ;;		line 104 in file "snake.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  num             2   10[BANK0 ] int 
  4525 ;;  j               2   14[BANK0 ] int 
  4526 ;;  i               2   12[BANK0 ] int 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      void 
  4529 ;; Registers used:
  4530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4536 ;;      Params:         0       0       0       0       0       0       0
  4537 ;;      Locals:         0       6       0       0       0       0       0
  4538 ;;      Temps:          0       8       0       0       0       0       0
  4539 ;;      Totals:         0      14       0       0       0       0       0
  4540 ;;Total ram usage:       14 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; Hardware stack levels required when called:    4
  4543 ;; This function calls:
  4544 ;;		___awmod
  4545 ;;		___wmul
  4546 ;;		_rand
  4547 ;;		_srand
  4548 ;;		_time
  4549 ;; This function is called by:
  4550 ;;		_main
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text16
  4555  0015B6                     __ptext16:
  4556                           	opt callstack 0
  4557  0015B6                     _initMap:
  4558                           	opt callstack 26
  4559  0015B6                     
  4560                           ;snake.c: 105:  int i,j;;snake.c: 106:     error=0;
  4561  0015B6  0E00               	movlw	0
  4562  0015B8  6E56               	movwf	_error^0,c
  4563                           
  4564                           ;snake.c: 107:     player[1]=15;
  4565  0015BA  0E0F               	movlw	15
  4566  0015BC  6E61               	movwf	(_player+1)^0,c
  4567                           
  4568                           ;snake.c: 108:     player[0]=4;
  4569  0015BE  0E04               	movlw	4
  4570  0015C0  6E60               	movwf	_player^0,c
  4571  0015C2                     
  4572                           ;snake.c: 109:  srand(time(((void*)0)));
  4573  0015C2  0E00               	movlw	0
  4574  0015C4  6E15               	movwf	time@t^0,c
  4575  0015C6  0E00               	movlw	0
  4576  0015C8  6E16               	movwf	(time@t+1)^0,c
  4577  0015CA  EC18  F015         	call	_time	;wreg free
  4578  0015CE  C015  F0EA         	movff	?_time,??_initMap
  4579  0015D2  C016  F0EB         	movff	?_time+1,??_initMap+1
  4580  0015D6  C017  F0EC         	movff	?_time+2,??_initMap+2
  4581  0015DA  C018  F0ED         	movff	?_time+3,??_initMap+3
  4582  0015DE  C019  F0EE         	movff	?_time+4,??_initMap+4
  4583  0015E2  C01A  F0EF         	movff	?_time+5,??_initMap+5
  4584  0015E6  C01B  F0F0         	movff	?_time+6,??_initMap+6
  4585  0015EA  C01C  F0F1         	movff	?_time+7,??_initMap+7
  4586  0015EE  C0EA  F01D         	movff	??_initMap,srand@s
  4587  0015F2  C0EC  F01E         	movff	??_initMap+2,srand@s+1
  4588  0015F6  EC5E  F015         	call	_srand	;wreg free
  4589  0015FA                     
  4590                           ;snake.c: 110:     for(j=0;j<16;++j)
  4591  0015FA  0E00               	movlw	0
  4592  0015FC  0100               	movlb	0	; () banked
  4593  0015FE  6FF7               	movwf	(initMap@j+1)& (0+255),b
  4594  001600  0E00               	movlw	0
  4595  001602  6FF6               	movwf	initMap@j& (0+255),b
  4596  001604                     l3813:
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;snake.c: 111:         for(i=0;i<16;++i)
  4600  001604  0E00               	movlw	0
  4601  001606  6FF5               	movwf	(initMap@i+1)& (0+255),b
  4602  001608  0E00               	movlw	0
  4603  00160A  6FF4               	movwf	initMap@i& (0+255),b
  4604  00160C                     l3819:
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;snake.c: 112:             map[j][i]=0;
  4608  00160C  C0F6  F0EA         	movff	initMap@j,??_initMap
  4609  001610  C0F7  F0EB         	movff	initMap@j+1,??_initMap+1
  4610  001614  3BEA               	swapf	??_initMap& (0+255),f,b
  4611  001616  3BEB               	swapf	(??_initMap+1)& (0+255),f,b
  4612  001618  0EF0               	movlw	240
  4613  00161A  17EB               	andwf	(??_initMap+1)& (0+255),f,b
  4614  00161C  51EA               	movf	??_initMap& (0+255),w,b
  4615  00161E  0B0F               	andlw	15
  4616  001620  13EB               	iorwf	(??_initMap+1)& (0+255),f,b
  4617  001622  0EF0               	movlw	240
  4618  001624  17EA               	andwf	??_initMap& (0+255),f,b
  4619  001626  0E00               	movlw	low _map
  4620  001628  6FEC               	movwf	(??_initMap+2)& (0+255),b
  4621  00162A  0E02               	movlw	high _map
  4622  00162C  6FED               	movwf	(??_initMap+3)& (0+255),b
  4623  00162E  51EA               	movf	??_initMap& (0+255),w,b
  4624  001630  27EC               	addwf	(??_initMap+2)& (0+255),f,b
  4625  001632  51EB               	movf	(??_initMap+1)& (0+255),w,b
  4626  001634  23ED               	addwfc	(??_initMap+3)& (0+255),f,b
  4627  001636  51F4               	movf	initMap@i& (0+255),w,b
  4628  001638  25EC               	addwf	(??_initMap+2)& (0+255),w,b
  4629  00163A  6ED9               	movwf	fsr2l,c
  4630  00163C  51F5               	movf	(initMap@i+1)& (0+255),w,b
  4631  00163E  21ED               	addwfc	(??_initMap+3)& (0+255),w,b
  4632  001640  6EDA               	movwf	fsr2h,c
  4633  001642  0E00               	movlw	0
  4634  001644  6EDF               	movwf	indf2,c
  4635  001646                     
  4636                           ; BSR set to: 0
  4637  001646  4BF4               	infsnz	initMap@i& (0+255),f,b
  4638  001648  2BF5               	incf	(initMap@i+1)& (0+255),f,b
  4639  00164A                     
  4640                           ; BSR set to: 0
  4641  00164A  BFF5               	btfsc	(initMap@i+1)& (0+255),7,b
  4642  00164C  EF31  F00B         	goto	u4351
  4643  001650  51F5               	movf	(initMap@i+1)& (0+255),w,b
  4644  001652  E109               	bnz	u4350
  4645  001654  0E10               	movlw	16
  4646  001656  5DF4               	subwf	initMap@i& (0+255),w,b
  4647  001658  A0D8               	btfss	status,0,c
  4648  00165A  EF31  F00B         	goto	u4351
  4649  00165E  EF33  F00B         	goto	u4350
  4650  001662                     u4351:
  4651  001662  EF06  F00B         	goto	l3819
  4652  001666                     u4350:
  4653  001666                     
  4654                           ; BSR set to: 0
  4655  001666  4BF6               	infsnz	initMap@j& (0+255),f,b
  4656  001668  2BF7               	incf	(initMap@j+1)& (0+255),f,b
  4657  00166A                     
  4658                           ; BSR set to: 0
  4659  00166A  BFF7               	btfsc	(initMap@j+1)& (0+255),7,b
  4660  00166C  EF41  F00B         	goto	u4361
  4661  001670  51F7               	movf	(initMap@j+1)& (0+255),w,b
  4662  001672  E109               	bnz	u4360
  4663  001674  0E10               	movlw	16
  4664  001676  5DF6               	subwf	initMap@j& (0+255),w,b
  4665  001678  A0D8               	btfss	status,0,c
  4666  00167A  EF41  F00B         	goto	u4361
  4667  00167E  EF43  F00B         	goto	u4360
  4668  001682                     u4361:
  4669  001682  EF02  F00B         	goto	l3813
  4670  001686                     u4360:
  4671  001686                     
  4672                           ; BSR set to: 0
  4673                           ;snake.c: 113:  map[player[1]][player[0]]=1;
  4674  001686  5061               	movf	(_player+1)^0,w,c
  4675  001688  0D10               	mullw	16
  4676  00168A  0E00               	movlw	low _map
  4677  00168C  6FEA               	movwf	??_initMap& (0+255),b
  4678  00168E  0E02               	movlw	high _map
  4679  001690  6FEB               	movwf	(??_initMap+1)& (0+255),b
  4680  001692  50F3               	movf	243,w,c
  4681  001694  27EA               	addwf	??_initMap& (0+255),f,b
  4682  001696  50F4               	movf	244,w,c
  4683  001698  23EB               	addwfc	(??_initMap+1)& (0+255),f,b
  4684  00169A  5060               	movf	_player^0,w,c
  4685  00169C  25EA               	addwf	??_initMap& (0+255),w,b
  4686  00169E  6ED9               	movwf	fsr2l,c
  4687  0016A0  0E00               	movlw	0
  4688  0016A2  21EB               	addwfc	(??_initMap+1)& (0+255),w,b
  4689  0016A4  6EDA               	movwf	fsr2h,c
  4690  0016A6  0E01               	movlw	1
  4691  0016A8  6EDF               	movwf	indf2,c
  4692  0016AA                     
  4693                           ; BSR set to: 0
  4694                           ;snake.c: 114:  for(j=0;j<6;++j){
  4695  0016AA  0E00               	movlw	0
  4696  0016AC  6FF7               	movwf	(initMap@j+1)& (0+255),b
  4697  0016AE  0E00               	movlw	0
  4698  0016B0  6FF6               	movwf	initMap@j& (0+255),b
  4699  0016B2                     l318:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;snake.c: 115:   int num=(j%2==0)?1:-1;
  4703  0016B2  A1F6               	btfss	initMap@j& (0+255),0,b
  4704  0016B4  EF5E  F00B         	goto	u4371
  4705  0016B8  EF60  F00B         	goto	u4370
  4706  0016BC                     u4371:
  4707  0016BC  EF64  F00B         	goto	l3839
  4708  0016C0                     u4370:
  4709  0016C0                     
  4710                           ; BSR set to: 0
  4711  0016C0  69F2               	setf	initMap@num& (0+255),b
  4712  0016C2  69F3               	setf	(initMap@num+1)& (0+255),b
  4713  0016C4  EF68  F00B         	goto	l3841
  4714  0016C8                     l3839:
  4715                           
  4716                           ; BSR set to: 0
  4717  0016C8  0E00               	movlw	0
  4718  0016CA  6FF3               	movwf	(initMap@num+1)& (0+255),b
  4719  0016CC  0E01               	movlw	1
  4720  0016CE  6FF2               	movwf	initMap@num& (0+255),b
  4721  0016D0                     l3841:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;snake.c: 116:   car[j][0]=rand()%12+2;
  4725  0016D0  ECA8  F011         	call	_rand	;wreg free
  4726  0016D4  C02D  F037         	movff	?_rand,___awmod@dividend
  4727  0016D8  C02E  F038         	movff	?_rand+1,___awmod@dividend+1
  4728  0016DC  0E00               	movlw	0
  4729  0016DE  6E3A               	movwf	(___awmod@divisor+1)^0,c
  4730  0016E0  0E0C               	movlw	12
  4731  0016E2  6E39               	movwf	___awmod@divisor^0,c
  4732  0016E4  EC3B  F013         	call	___awmod	;wreg free
  4733  0016E8  0E02               	movlw	2
  4734  0016EA  2637               	addwf	?___awmod^0,f,c
  4735  0016EC  0E00               	movlw	0
  4736  0016EE  2238               	addwfc	(?___awmod+1)^0,f,c
  4737  0016F0  0EC0               	movlw	low _car
  4738  0016F2  0100               	movlb	0	; () banked
  4739  0016F4  6FEA               	movwf	??_initMap& (0+255),b
  4740  0016F6  0E00               	movlw	high _car
  4741  0016F8  6FEB               	movwf	(??_initMap+1)& (0+255),b
  4742  0016FA  90D8               	bcf	status,0,c
  4743  0016FC  35F6               	rlcf	initMap@j& (0+255),w,b
  4744  0016FE  6ED9               	movwf	fsr2l,c
  4745  001700  35F7               	rlcf	(initMap@j+1)& (0+255),w,b
  4746  001702  6EDA               	movwf	fsr2h,c
  4747  001704  90D8               	bcf	status,0,c
  4748  001706  36D9               	rlcf	fsr2l,f,c
  4749  001708  36DA               	rlcf	fsr2h,f,c
  4750  00170A  51EA               	movf	??_initMap& (0+255),w,b
  4751  00170C  26D9               	addwf	fsr2l,f,c
  4752  00170E  51EB               	movf	(??_initMap+1)& (0+255),w,b
  4753  001710  22DA               	addwfc	fsr2h,f,c
  4754  001712  C037  FFDE         	movff	?___awmod,postinc2
  4755  001716  C038  FFDD         	movff	?___awmod+1,postdec2
  4756  00171A                     
  4757                           ; BSR set to: 0
  4758                           ;snake.c: 117:   car[j][1]=car[j][0]+num*2;
  4759  00171A  0EC0               	movlw	low _car
  4760  00171C  6FEA               	movwf	??_initMap& (0+255),b
  4761  00171E  0E00               	movlw	high _car
  4762  001720  6FEB               	movwf	(??_initMap+1)& (0+255),b
  4763  001722  90D8               	bcf	status,0,c
  4764  001724  35F6               	rlcf	initMap@j& (0+255),w,b
  4765  001726  6ED9               	movwf	fsr2l,c
  4766  001728  35F7               	rlcf	(initMap@j+1)& (0+255),w,b
  4767  00172A  6EDA               	movwf	fsr2h,c
  4768  00172C  90D8               	bcf	status,0,c
  4769  00172E  36D9               	rlcf	fsr2l,f,c
  4770  001730  36DA               	rlcf	fsr2h,f,c
  4771  001732  51EA               	movf	??_initMap& (0+255),w,b
  4772  001734  26D9               	addwf	fsr2l,f,c
  4773  001736  51EB               	movf	(??_initMap+1)& (0+255),w,b
  4774  001738  22DA               	addwfc	fsr2h,f,c
  4775  00173A  CFDE F0EC          	movff	postinc2,??_initMap+2
  4776  00173E  CFDD F0ED          	movff	postdec2,??_initMap+3
  4777  001742  C0F2  F0EE         	movff	initMap@num,??_initMap+4
  4778  001746  C0F3  F0EF         	movff	initMap@num+1,??_initMap+5
  4779  00174A  90D8               	bcf	status,0,c
  4780  00174C  37EE               	rlcf	(??_initMap+4)& (0+255),f,b
  4781  00174E  37EF               	rlcf	(??_initMap+5)& (0+255),f,b
  4782  001750  51EC               	movf	(??_initMap+2)& (0+255),w,b
  4783  001752  27EE               	addwf	(??_initMap+4)& (0+255),f,b
  4784  001754  51ED               	movf	(??_initMap+3)& (0+255),w,b
  4785  001756  23EF               	addwfc	(??_initMap+5)& (0+255),f,b
  4786  001758  0EC0               	movlw	low _car
  4787  00175A  6FF0               	movwf	(??_initMap+6)& (0+255),b
  4788  00175C  0E00               	movlw	high _car
  4789  00175E  6FF1               	movwf	(??_initMap+7)& (0+255),b
  4790  001760  0E02               	movlw	2
  4791  001762  27F0               	addwf	(??_initMap+6)& (0+255),f,b
  4792  001764  0E00               	movlw	0
  4793  001766  23F1               	addwfc	(??_initMap+7)& (0+255),f,b
  4794  001768  90D8               	bcf	status,0,c
  4795  00176A  35F6               	rlcf	initMap@j& (0+255),w,b
  4796  00176C  6ED9               	movwf	fsr2l,c
  4797  00176E  35F7               	rlcf	(initMap@j+1)& (0+255),w,b
  4798  001770  6EDA               	movwf	fsr2h,c
  4799  001772  90D8               	bcf	status,0,c
  4800  001774  36D9               	rlcf	fsr2l,f,c
  4801  001776  36DA               	rlcf	fsr2h,f,c
  4802  001778  51F0               	movf	(??_initMap+6)& (0+255),w,b
  4803  00177A  26D9               	addwf	fsr2l,f,c
  4804  00177C  51F1               	movf	(??_initMap+7)& (0+255),w,b
  4805  00177E  22DA               	addwfc	fsr2h,f,c
  4806  001780  C0EE  FFDE         	movff	??_initMap+4,postinc2
  4807  001784  C0EF  FFDD         	movff	??_initMap+5,postdec2
  4808  001788                     
  4809                           ; BSR set to: 0
  4810                           ;snake.c: 118:   for(i=0;i<3;++i){
  4811  001788  0E00               	movlw	0
  4812  00178A  6FF5               	movwf	(initMap@i+1)& (0+255),b
  4813  00178C  0E00               	movlw	0
  4814  00178E  6FF4               	movwf	initMap@i& (0+255),b
  4815  001790                     l3851:
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;snake.c: 119:    map[2+j*2][car[j][0]+num*i]=1;
  4819  001790  0EC0               	movlw	low _car
  4820  001792  6FEA               	movwf	??_initMap& (0+255),b
  4821  001794  0E00               	movlw	high _car
  4822  001796  6FEB               	movwf	(??_initMap+1)& (0+255),b
  4823  001798  90D8               	bcf	status,0,c
  4824  00179A  35F6               	rlcf	initMap@j& (0+255),w,b
  4825  00179C  6ED9               	movwf	fsr2l,c
  4826  00179E  35F7               	rlcf	(initMap@j+1)& (0+255),w,b
  4827  0017A0  6EDA               	movwf	fsr2h,c
  4828  0017A2  90D8               	bcf	status,0,c
  4829  0017A4  36D9               	rlcf	fsr2l,f,c
  4830  0017A6  36DA               	rlcf	fsr2h,f,c
  4831  0017A8  51EA               	movf	??_initMap& (0+255),w,b
  4832  0017AA  26D9               	addwf	fsr2l,f,c
  4833  0017AC  51EB               	movf	(??_initMap+1)& (0+255),w,b
  4834  0017AE  22DA               	addwfc	fsr2h,f,c
  4835  0017B0  CFDE F0EC          	movff	postinc2,??_initMap+2
  4836  0017B4  CFDD F0ED          	movff	postdec2,??_initMap+3
  4837  0017B8  C0F6  F0EE         	movff	initMap@j,??_initMap+4
  4838  0017BC  C0F7  F0EF         	movff	initMap@j+1,??_initMap+5
  4839  0017C0  90D8               	bcf	status,0,c
  4840  0017C2  37EE               	rlcf	(??_initMap+4)& (0+255),f,b
  4841  0017C4  37EF               	rlcf	(??_initMap+5)& (0+255),f,b
  4842  0017C6  3BEE               	swapf	(??_initMap+4)& (0+255),f,b
  4843  0017C8  3BEF               	swapf	(??_initMap+5)& (0+255),f,b
  4844  0017CA  0EF0               	movlw	240
  4845  0017CC  17EF               	andwf	(??_initMap+5)& (0+255),f,b
  4846  0017CE  51EE               	movf	(??_initMap+4)& (0+255),w,b
  4847  0017D0  0B0F               	andlw	15
  4848  0017D2  13EF               	iorwf	(??_initMap+5)& (0+255),f,b
  4849  0017D4  0EF0               	movlw	240
  4850  0017D6  17EE               	andwf	(??_initMap+4)& (0+255),f,b
  4851  0017D8  C0F2  F015         	movff	initMap@num,___wmul@multiplier
  4852  0017DC  C0F3  F016         	movff	initMap@num+1,___wmul@multiplier+1
  4853  0017E0  C0F4  F017         	movff	initMap@i,___wmul@multiplicand
  4854  0017E4  C0F5  F018         	movff	initMap@i+1,___wmul@multiplicand+1
  4855  0017E8  EC75  F015         	call	___wmul	;wreg free
  4856  0017EC  0E00               	movlw	low _map
  4857  0017EE  0100               	movlb	0	; () banked
  4858  0017F0  6FF0               	movwf	(??_initMap+6)& (0+255),b
  4859  0017F2  0E02               	movlw	high _map
  4860  0017F4  6FF1               	movwf	(??_initMap+7)& (0+255),b
  4861  0017F6  0E20               	movlw	32
  4862  0017F8  27F0               	addwf	(??_initMap+6)& (0+255),f,b
  4863  0017FA  0E00               	movlw	0
  4864  0017FC  23F1               	addwfc	(??_initMap+7)& (0+255),f,b
  4865  0017FE  5015               	movf	?___wmul^0,w,c
  4866  001800  27F0               	addwf	(??_initMap+6)& (0+255),f,b
  4867  001802  5016               	movf	(?___wmul+1)^0,w,c
  4868  001804  23F1               	addwfc	(??_initMap+7)& (0+255),f,b
  4869  001806  51EE               	movf	(??_initMap+4)& (0+255),w,b
  4870  001808  27F0               	addwf	(??_initMap+6)& (0+255),f,b
  4871  00180A  51EF               	movf	(??_initMap+5)& (0+255),w,b
  4872  00180C  23F1               	addwfc	(??_initMap+7)& (0+255),f,b
  4873  00180E  51EC               	movf	(??_initMap+2)& (0+255),w,b
  4874  001810  25F0               	addwf	(??_initMap+6)& (0+255),w,b
  4875  001812  6ED9               	movwf	fsr2l,c
  4876  001814  51ED               	movf	(??_initMap+3)& (0+255),w,b
  4877  001816  21F1               	addwfc	(??_initMap+7)& (0+255),w,b
  4878  001818  6EDA               	movwf	fsr2h,c
  4879  00181A  0E01               	movlw	1
  4880  00181C  6EDF               	movwf	indf2,c
  4881  00181E                     
  4882                           ; BSR set to: 0
  4883                           ;snake.c: 121:   }
  4884  00181E  4BF4               	infsnz	initMap@i& (0+255),f,b
  4885  001820  2BF5               	incf	(initMap@i+1)& (0+255),f,b
  4886  001822                     
  4887                           ; BSR set to: 0
  4888  001822  BFF5               	btfsc	(initMap@i+1)& (0+255),7,b
  4889  001824  EF1D  F00C         	goto	u4381
  4890  001828  51F5               	movf	(initMap@i+1)& (0+255),w,b
  4891  00182A  E109               	bnz	u4380
  4892  00182C  0E03               	movlw	3
  4893  00182E  5DF4               	subwf	initMap@i& (0+255),w,b
  4894  001830  A0D8               	btfss	status,0,c
  4895  001832  EF1D  F00C         	goto	u4381
  4896  001836  EF1F  F00C         	goto	u4380
  4897  00183A                     u4381:
  4898  00183A  EFC8  F00B         	goto	l3851
  4899  00183E                     u4380:
  4900  00183E                     
  4901                           ; BSR set to: 0
  4902                           ;snake.c: 122:  }
  4903  00183E  4BF6               	infsnz	initMap@j& (0+255),f,b
  4904  001840  2BF7               	incf	(initMap@j+1)& (0+255),f,b
  4905  001842                     
  4906                           ; BSR set to: 0
  4907  001842  BFF7               	btfsc	(initMap@j+1)& (0+255),7,b
  4908  001844  EF2D  F00C         	goto	u4391
  4909  001848  51F7               	movf	(initMap@j+1)& (0+255),w,b
  4910  00184A  E109               	bnz	u4390
  4911  00184C  0E06               	movlw	6
  4912  00184E  5DF6               	subwf	initMap@j& (0+255),w,b
  4913  001850  A0D8               	btfss	status,0,c
  4914  001852  EF2D  F00C         	goto	u4391
  4915  001856  EF2F  F00C         	goto	u4390
  4916  00185A                     u4391:
  4917  00185A  EF59  F00B         	goto	l318
  4918  00185E                     u4390:
  4919  00185E                     
  4920                           ; BSR set to: 0
  4921  00185E  0012               	return		;funcret
  4922  001860                     __end_of_initMap:
  4923                           	opt callstack 0
  4924                           
  4925 ;; *************** function _time *****************
  4926 ;; Defined at:
  4927 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\time.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  t               2   20[COMRAM] PTR long long 
  4930 ;;		 -> NULL(0), 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  8   20[COMRAM] long long 
  4935 ;; Registers used:
  4936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4942 ;;      Params:         8       0       0       0       0       0       0
  4943 ;;      Locals:         0       0       0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0
  4945 ;;      Totals:         8       0       0       0       0       0       0
  4946 ;;Total ram usage:        8 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    2
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_initMap
  4953 ;;		_Delay
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text17
  4958  002A30                     __ptext17:
  4959                           	opt callstack 0
  4960  002A30                     _time:
  4961                           	opt callstack 27
  4962  002A30  5015               	movf	time@t^0,w,c
  4963  002A32  1016               	iorwf	(time@t+1)^0,w,c
  4964  002A34  B4D8               	btfsc	status,2,c
  4965  002A36  EF1F  F015         	goto	u4101
  4966  002A3A  EF21  F015         	goto	u4100
  4967  002A3E                     u4101:
  4968  002A3E  EF35  F015         	goto	l3669
  4969  002A42                     u4100:
  4970  002A42  C015  FFD9         	movff	time@t,fsr2l
  4971  002A46  C016  FFDA         	movff	time@t+1,fsr2h
  4972  002A4A  0EFF               	movlw	255
  4973  002A4C  6EDE               	movwf	postinc2,c
  4974  002A4E  0EFF               	movlw	255
  4975  002A50  6EDE               	movwf	postinc2,c
  4976  002A52  0EFF               	movlw	255
  4977  002A54  6EDE               	movwf	postinc2,c
  4978  002A56  0EFF               	movlw	255
  4979  002A58  6EDE               	movwf	postinc2,c
  4980  002A5A  0EFF               	movlw	255
  4981  002A5C  6EDE               	movwf	postinc2,c
  4982  002A5E  0EFF               	movlw	255
  4983  002A60  6EDE               	movwf	postinc2,c
  4984  002A62  0EFF               	movlw	255
  4985  002A64  6EDE               	movwf	postinc2,c
  4986  002A66  0EFF               	movlw	255
  4987  002A68  6EDD               	movwf	postdec2,c
  4988  002A6A                     l3669:
  4989  002A6A  6815               	setf	?_time^0,c
  4990  002A6C  6816               	setf	(?_time+1)^0,c
  4991  002A6E  6817               	setf	(?_time+2)^0,c
  4992  002A70  6818               	setf	(?_time+3)^0,c
  4993  002A72  6819               	setf	(?_time+4)^0,c
  4994  002A74  681A               	setf	(?_time+5)^0,c
  4995  002A76  681B               	setf	(?_time+6)^0,c
  4996  002A78  681C               	setf	(?_time+7)^0,c
  4997  002A7A  0012               	return		;funcret
  4998  002A7C                     __end_of_time:
  4999                           	opt callstack 0
  5000                           
  5001 ;; *************** function _srand *****************
  5002 ;; Defined at:
  5003 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  s               2   28[COMRAM] unsigned int 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5017 ;;      Params:         2       0       0       0       0       0       0
  5018 ;;      Locals:         0       0       0       0       0       0       0
  5019 ;;      Temps:          4       0       0       0       0       0       0
  5020 ;;      Totals:         6       0       0       0       0       0       0
  5021 ;;Total ram usage:        6 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    2
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_initMap
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text18
  5032  002ABC                     __ptext18:
  5033                           	opt callstack 0
  5034  002ABC                     _srand:
  5035                           	opt callstack 27
  5036  002ABC  0EFF               	movlw	255
  5037  002ABE  6E1F               	movwf	??_srand^0,c
  5038  002AC0  0EFF               	movlw	255
  5039  002AC2  6E20               	movwf	(??_srand+1)^0,c
  5040  002AC4  C01D  F021         	movff	srand@s,??_srand+2
  5041  002AC8  C01E  F022         	movff	srand@s+1,??_srand+3
  5042  002ACC  501F               	movf	??_srand^0,w,c
  5043  002ACE  2621               	addwf	(??_srand+2)^0,f,c
  5044  002AD0  5020               	movf	(??_srand+1)^0,w,c
  5045  002AD2  2222               	addwfc	(??_srand+3)^0,f,c
  5046  002AD4  C021  F057         	movff	??_srand+2,_seed
  5047  002AD8  C022  F058         	movff	??_srand+3,_seed+1
  5048  002ADC  6A59               	clrf	(_seed+2)^0,c
  5049  002ADE  6A5A               	clrf	(_seed+3)^0,c
  5050  002AE0  6A5B               	clrf	(_seed+4)^0,c
  5051  002AE2  6A5C               	clrf	(_seed+5)^0,c
  5052  002AE4  6A5D               	clrf	(_seed+6)^0,c
  5053  002AE6  6A5E               	clrf	(_seed+7)^0,c
  5054  002AE8  0012               	return		;funcret
  5055  002AEA                     __end_of_srand:
  5056                           	opt callstack 0
  5057                           
  5058 ;; *************** function _rand *****************
  5059 ;; Defined at:
  5060 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;		None
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;		None
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  2   44[COMRAM] int 
  5067 ;; Registers used:
  5068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5074 ;;      Params:         2       0       0       0       0       0       0
  5075 ;;      Locals:         0       0       0       0       0       0       0
  5076 ;;      Temps:          8       0       0       0       0       0       0
  5077 ;;      Totals:        10       0       0       0       0       0       0
  5078 ;;Total ram usage:       10 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    3
  5081 ;; This function calls:
  5082 ;;		___omul
  5083 ;; This function is called by:
  5084 ;;		_initMap
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text19
  5089  002350                     __ptext19:
  5090                           	opt callstack 0
  5091  002350                     _rand:
  5092                           	opt callstack 26
  5093  002350  C057  F015         	movff	_seed,___omul@multiplier
  5094  002354  C058  F016         	movff	_seed+1,___omul@multiplier+1
  5095  002358  C059  F017         	movff	_seed+2,___omul@multiplier+2
  5096  00235C  C05A  F018         	movff	_seed+3,___omul@multiplier+3
  5097  002360  C05B  F019         	movff	_seed+4,___omul@multiplier+4
  5098  002364  C05C  F01A         	movff	_seed+5,___omul@multiplier+5
  5099  002368  C05D  F01B         	movff	_seed+6,___omul@multiplier+6
  5100  00236C  C05E  F01C         	movff	_seed+7,___omul@multiplier+7
  5101  002370  0E2D               	movlw	45
  5102  002372  6E1D               	movwf	___omul@multiplicand^0,c
  5103  002374  0E7F               	movlw	127
  5104  002376  6E1E               	movwf	(___omul@multiplicand+1)^0,c
  5105  002378  0E95               	movlw	149
  5106  00237A  6E1F               	movwf	(___omul@multiplicand+2)^0,c
  5107  00237C  0E4C               	movlw	76
  5108  00237E  6E20               	movwf	(___omul@multiplicand+3)^0,c
  5109  002380  0E2D               	movlw	45
  5110  002382  6E21               	movwf	(___omul@multiplicand+4)^0,c
  5111  002384  0EF4               	movlw	244
  5112  002386  6E22               	movwf	(___omul@multiplicand+5)^0,c
  5113  002388  0E51               	movlw	81
  5114  00238A  6E23               	movwf	(___omul@multiplicand+6)^0,c
  5115  00238C  0E58               	movlw	88
  5116  00238E  6E24               	movwf	(___omul@multiplicand+7)^0,c
  5117  002390  EC94  F013         	call	___omul	;wreg free
  5118  002394  C015  F02F         	movff	?___omul,??_rand
  5119  002398  C016  F030         	movff	?___omul+1,??_rand+1
  5120  00239C  C017  F031         	movff	?___omul+2,??_rand+2
  5121  0023A0  C018  F032         	movff	?___omul+3,??_rand+3
  5122  0023A4  C019  F033         	movff	?___omul+4,??_rand+4
  5123  0023A8  C01A  F034         	movff	?___omul+5,??_rand+5
  5124  0023AC  C01B  F035         	movff	?___omul+6,??_rand+6
  5125  0023B0  C01C  F036         	movff	?___omul+7,??_rand+7
  5126  0023B4  0E01               	movlw	1
  5127  0023B6  242F               	addwf	??_rand^0,w,c
  5128  0023B8  6E57               	movwf	_seed^0,c
  5129  0023BA  0E00               	movlw	0
  5130  0023BC  2030               	addwfc	(??_rand+1)^0,w,c
  5131  0023BE  6E58               	movwf	(_seed+1)^0,c
  5132  0023C0  0E00               	movlw	0
  5133  0023C2  2031               	addwfc	(??_rand+2)^0,w,c
  5134  0023C4  6E59               	movwf	(_seed+2)^0,c
  5135  0023C6  0E00               	movlw	0
  5136  0023C8  2032               	addwfc	(??_rand+3)^0,w,c
  5137  0023CA  6E5A               	movwf	(_seed+3)^0,c
  5138  0023CC  0E00               	movlw	0
  5139  0023CE  2033               	addwfc	(??_rand+4)^0,w,c
  5140  0023D0  6E5B               	movwf	(_seed+4)^0,c
  5141  0023D2  0E00               	movlw	0
  5142  0023D4  2034               	addwfc	(??_rand+5)^0,w,c
  5143  0023D6  6E5C               	movwf	(_seed+5)^0,c
  5144  0023D8  0E00               	movlw	0
  5145  0023DA  2035               	addwfc	(??_rand+6)^0,w,c
  5146  0023DC  6E5D               	movwf	(_seed+6)^0,c
  5147  0023DE  0E00               	movlw	0
  5148  0023E0  2036               	addwfc	(??_rand+7)^0,w,c
  5149  0023E2  6E5E               	movwf	(_seed+7)^0,c
  5150  0023E4  C057  F02F         	movff	_seed,??_rand
  5151  0023E8  C058  F030         	movff	_seed+1,??_rand+1
  5152  0023EC  C059  F031         	movff	_seed+2,??_rand+2
  5153  0023F0  C05A  F032         	movff	_seed+3,??_rand+3
  5154  0023F4  C05B  F033         	movff	_seed+4,??_rand+4
  5155  0023F8  C05C  F034         	movff	_seed+5,??_rand+5
  5156  0023FC  C05D  F035         	movff	_seed+6,??_rand+6
  5157  002400  C05E  F036         	movff	_seed+7,??_rand+7
  5158  002404  0E32               	movlw	50
  5159  002406  EF0E  F012         	goto	u4110
  5160  00240A                     u4115:
  5161  00240A  90D8               	bcf	status,0,c
  5162  00240C  3236               	rrcf	(??_rand+7)^0,f,c
  5163  00240E  3235               	rrcf	(??_rand+6)^0,f,c
  5164  002410  3234               	rrcf	(??_rand+5)^0,f,c
  5165  002412  3233               	rrcf	(??_rand+4)^0,f,c
  5166  002414  3232               	rrcf	(??_rand+3)^0,f,c
  5167  002416  3231               	rrcf	(??_rand+2)^0,f,c
  5168  002418  3230               	rrcf	(??_rand+1)^0,f,c
  5169  00241A  322F               	rrcf	??_rand^0,f,c
  5170  00241C                     u4110:
  5171  00241C  2EE8               	decfsz	wreg,f,c
  5172  00241E  EF05  F012         	goto	u4115
  5173  002422  C02F  F02D         	movff	??_rand,?_rand
  5174  002426  C031  F02E         	movff	??_rand+2,?_rand+1
  5175  00242A  0012               	return		;funcret
  5176  00242C                     __end_of_rand:
  5177                           	opt callstack 0
  5178                           
  5179 ;; *************** function ___omul *****************
  5180 ;; Defined at:
  5181 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  multiplier      8   20[COMRAM] unsigned long long 
  5184 ;;  multiplicand    8   28[COMRAM] unsigned long long 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  product         8   36[COMRAM] unsigned long long 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  8   20[COMRAM] unsigned long long 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5196 ;;      Params:        16       0       0       0       0       0       0
  5197 ;;      Locals:         8       0       0       0       0       0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0
  5199 ;;      Totals:        24       0       0       0       0       0       0
  5200 ;;Total ram usage:       24 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    2
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_rand
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text20
  5211  002728                     __ptext20:
  5212                           	opt callstack 0
  5213  002728                     ___omul:
  5214                           	opt callstack 26
  5215  002728  EE20  F025         	lfsr	2,___omul@product
  5216  00272C  0E07               	movlw	7
  5217  00272E                     u3971:
  5218  00272E  6ADE               	clrf	postinc2,c
  5219  002730  06E8               	decf	wreg,f,c
  5220  002732  E2FD               	bc	u3971
  5221  002734                     l3589:
  5222  002734  A015               	btfss	___omul@multiplier^0,0,c
  5223  002736  EF9F  F013         	goto	u3981
  5224  00273A  EFA1  F013         	goto	u3980
  5225  00273E                     u3981:
  5226  00273E  EFB1  F013         	goto	l3593
  5227  002742                     u3980:
  5228  002742  501D               	movf	___omul@multiplicand^0,w,c
  5229  002744  2625               	addwf	___omul@product^0,f,c
  5230  002746  501E               	movf	(___omul@multiplicand+1)^0,w,c
  5231  002748  2226               	addwfc	(___omul@product+1)^0,f,c
  5232  00274A  501F               	movf	(___omul@multiplicand+2)^0,w,c
  5233  00274C  2227               	addwfc	(___omul@product+2)^0,f,c
  5234  00274E  5020               	movf	(___omul@multiplicand+3)^0,w,c
  5235  002750  2228               	addwfc	(___omul@product+3)^0,f,c
  5236  002752  5021               	movf	(___omul@multiplicand+4)^0,w,c
  5237  002754  2229               	addwfc	(___omul@product+4)^0,f,c
  5238  002756  5022               	movf	(___omul@multiplicand+5)^0,w,c
  5239  002758  222A               	addwfc	(___omul@product+5)^0,f,c
  5240  00275A  5023               	movf	(___omul@multiplicand+6)^0,w,c
  5241  00275C  222B               	addwfc	(___omul@product+6)^0,f,c
  5242  00275E  5024               	movf	(___omul@multiplicand+7)^0,w,c
  5243  002760  222C               	addwfc	(___omul@product+7)^0,f,c
  5244  002762                     l3593:
  5245  002762  90D8               	bcf	status,0,c
  5246  002764  361D               	rlcf	___omul@multiplicand^0,f,c
  5247  002766  361E               	rlcf	(___omul@multiplicand+1)^0,f,c
  5248  002768  361F               	rlcf	(___omul@multiplicand+2)^0,f,c
  5249  00276A  3620               	rlcf	(___omul@multiplicand+3)^0,f,c
  5250  00276C  3621               	rlcf	(___omul@multiplicand+4)^0,f,c
  5251  00276E  3622               	rlcf	(___omul@multiplicand+5)^0,f,c
  5252  002770  3623               	rlcf	(___omul@multiplicand+6)^0,f,c
  5253  002772  3624               	rlcf	(___omul@multiplicand+7)^0,f,c
  5254  002774  90D8               	bcf	status,0,c
  5255  002776  321C               	rrcf	(___omul@multiplier+7)^0,f,c
  5256  002778  321B               	rrcf	(___omul@multiplier+6)^0,f,c
  5257  00277A  321A               	rrcf	(___omul@multiplier+5)^0,f,c
  5258  00277C  3219               	rrcf	(___omul@multiplier+4)^0,f,c
  5259  00277E  3218               	rrcf	(___omul@multiplier+3)^0,f,c
  5260  002780  3217               	rrcf	(___omul@multiplier+2)^0,f,c
  5261  002782  3216               	rrcf	(___omul@multiplier+1)^0,f,c
  5262  002784  3215               	rrcf	___omul@multiplier^0,f,c
  5263  002786  5015               	movf	___omul@multiplier^0,w,c
  5264  002788  1016               	iorwf	(___omul@multiplier+1)^0,w,c
  5265  00278A  1017               	iorwf	(___omul@multiplier+2)^0,w,c
  5266  00278C  1018               	iorwf	(___omul@multiplier+3)^0,w,c
  5267  00278E  1019               	iorwf	(___omul@multiplier+4)^0,w,c
  5268  002790  101A               	iorwf	(___omul@multiplier+5)^0,w,c
  5269  002792  101B               	iorwf	(___omul@multiplier+6)^0,w,c
  5270  002794  101C               	iorwf	(___omul@multiplier+7)^0,w,c
  5271  002796  A4D8               	btfss	status,2,c
  5272  002798  EFD0  F013         	goto	u3991
  5273  00279C  EFD2  F013         	goto	u3990
  5274  0027A0                     u3991:
  5275  0027A0  EF9A  F013         	goto	l3589
  5276  0027A4                     u3990:
  5277  0027A4  C025  F015         	movff	___omul@product,?___omul
  5278  0027A8  C026  F016         	movff	___omul@product+1,?___omul+1
  5279  0027AC  C027  F017         	movff	___omul@product+2,?___omul+2
  5280  0027B0  C028  F018         	movff	___omul@product+3,?___omul+3
  5281  0027B4  C029  F019         	movff	___omul@product+4,?___omul+4
  5282  0027B8  C02A  F01A         	movff	___omul@product+5,?___omul+5
  5283  0027BC  C02B  F01B         	movff	___omul@product+6,?___omul+6
  5284  0027C0  C02C  F01C         	movff	___omul@product+7,?___omul+7
  5285  0027C4  0012               	return		;funcret
  5286  0027C6                     __end_of___omul:
  5287                           	opt callstack 0
  5288                           
  5289 ;; *************** function ___wmul *****************
  5290 ;; Defined at:
  5291 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  multiplier      2   20[COMRAM] unsigned int 
  5294 ;;  multiplicand    2   22[COMRAM] unsigned int 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  product         2   24[COMRAM] unsigned int 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  2   20[COMRAM] unsigned int 
  5299 ;; Registers used:
  5300 ;;		wreg, status,2, status,0, prodl, prodh
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5306 ;;      Params:         4       0       0       0       0       0       0
  5307 ;;      Locals:         2       0       0       0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0
  5309 ;;      Totals:         6       0       0       0       0       0       0
  5310 ;;Total ram usage:        6 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    2
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_initMap
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text21
  5321  002AEA                     __ptext21:
  5322                           	opt callstack 0
  5323  002AEA                     ___wmul:
  5324                           	opt callstack 27
  5325  002AEA  5015               	movf	___wmul@multiplier^0,w,c
  5326  002AEC  0217               	mulwf	___wmul@multiplicand^0,c
  5327  002AEE  CFF3 F019          	movff	prodl,___wmul@product
  5328  002AF2  CFF4 F01A          	movff	prodh,___wmul@product+1
  5329  002AF6  5015               	movf	___wmul@multiplier^0,w,c
  5330  002AF8  0218               	mulwf	(___wmul@multiplicand+1)^0,c
  5331  002AFA  50F3               	movf	243,w,c
  5332  002AFC  261A               	addwf	(___wmul@product+1)^0,f,c
  5333  002AFE  5016               	movf	(___wmul@multiplier+1)^0,w,c
  5334  002B00  0217               	mulwf	___wmul@multiplicand^0,c
  5335  002B02  50F3               	movf	243,w,c
  5336  002B04  261A               	addwf	(___wmul@product+1)^0,f,c
  5337  002B06  C019  F015         	movff	___wmul@product,?___wmul
  5338  002B0A  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  5339  002B0E  0012               	return		;funcret
  5340  002B10                     __end_of___wmul:
  5341                           	opt callstack 0
  5342                           
  5343 ;; *************** function ___awmod *****************
  5344 ;; Defined at:
  5345 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  dividend        2   54[COMRAM] int 
  5348 ;;  divisor         2   56[COMRAM] int 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  sign            1    1[BANK0 ] unsigned char 
  5351 ;;  counter         1    0[BANK0 ] unsigned char 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  2   54[COMRAM] int 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5361 ;;      Params:         4       0       0       0       0       0       0
  5362 ;;      Locals:         0       2       0       0       0       0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0
  5364 ;;      Totals:         4       2       0       0       0       0       0
  5365 ;;Total ram usage:        6 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    2
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_initMap
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text22
  5376  002676                     __ptext22:
  5377                           	opt callstack 0
  5378  002676                     ___awmod:
  5379                           	opt callstack 27
  5380  002676  0E00               	movlw	0
  5381  002678  0100               	movlb	0	; () banked
  5382  00267A  6FE9               	movwf	___awmod@sign& (0+255),b
  5383  00267C                     
  5384                           ; BSR set to: 0
  5385  00267C  BE38               	btfsc	(___awmod@dividend+1)^0,7,c
  5386  00267E  EF45  F013         	goto	u4280
  5387  002682  EF43  F013         	goto	u4281
  5388  002686                     u4281:
  5389  002686  EF4B  F013         	goto	l3759
  5390  00268A                     u4280:
  5391  00268A                     
  5392                           ; BSR set to: 0
  5393  00268A  6C37               	negf	___awmod@dividend^0,c
  5394  00268C  1E38               	comf	(___awmod@dividend+1)^0,f,c
  5395  00268E  B0D8               	btfsc	status,0,c
  5396  002690  2A38               	incf	(___awmod@dividend+1)^0,f,c
  5397  002692                     
  5398                           ; BSR set to: 0
  5399  002692  0E01               	movlw	1
  5400  002694  6FE9               	movwf	___awmod@sign& (0+255),b
  5401  002696                     l3759:
  5402                           
  5403                           ; BSR set to: 0
  5404  002696  BE3A               	btfsc	(___awmod@divisor+1)^0,7,c
  5405  002698  EF52  F013         	goto	u4290
  5406  00269C  EF50  F013         	goto	u4291
  5407  0026A0                     u4291:
  5408  0026A0  EF56  F013         	goto	l3763
  5409  0026A4                     u4290:
  5410  0026A4                     
  5411                           ; BSR set to: 0
  5412  0026A4  6C39               	negf	___awmod@divisor^0,c
  5413  0026A6  1E3A               	comf	(___awmod@divisor+1)^0,f,c
  5414  0026A8  B0D8               	btfsc	status,0,c
  5415  0026AA  2A3A               	incf	(___awmod@divisor+1)^0,f,c
  5416  0026AC                     l3763:
  5417                           
  5418                           ; BSR set to: 0
  5419  0026AC  5039               	movf	___awmod@divisor^0,w,c
  5420  0026AE  103A               	iorwf	(___awmod@divisor+1)^0,w,c
  5421  0026B0  B4D8               	btfsc	status,2,c
  5422  0026B2  EF5D  F013         	goto	u4301
  5423  0026B6  EF5F  F013         	goto	u4300
  5424  0026BA                     u4301:
  5425  0026BA  EF83  F013         	goto	l3779
  5426  0026BE                     u4300:
  5427  0026BE                     
  5428                           ; BSR set to: 0
  5429  0026BE  0E01               	movlw	1
  5430  0026C0  6FE8               	movwf	___awmod@counter& (0+255),b
  5431  0026C2  EF67  F013         	goto	l3769
  5432  0026C6                     l3767:
  5433                           
  5434                           ; BSR set to: 0
  5435  0026C6  90D8               	bcf	status,0,c
  5436  0026C8  3639               	rlcf	___awmod@divisor^0,f,c
  5437  0026CA  363A               	rlcf	(___awmod@divisor+1)^0,f,c
  5438  0026CC  2BE8               	incf	___awmod@counter& (0+255),f,b
  5439  0026CE                     l3769:
  5440                           
  5441                           ; BSR set to: 0
  5442  0026CE  AE3A               	btfss	(___awmod@divisor+1)^0,7,c
  5443  0026D0  EF6C  F013         	goto	u4311
  5444  0026D4  EF6E  F013         	goto	u4310
  5445  0026D8                     u4311:
  5446  0026D8  EF63  F013         	goto	l3767
  5447  0026DC                     u4310:
  5448  0026DC                     l3771:
  5449                           
  5450                           ; BSR set to: 0
  5451  0026DC  5039               	movf	___awmod@divisor^0,w,c
  5452  0026DE  5C37               	subwf	___awmod@dividend^0,w,c
  5453  0026E0  503A               	movf	(___awmod@divisor+1)^0,w,c
  5454  0026E2  5838               	subwfb	(___awmod@dividend+1)^0,w,c
  5455  0026E4  A0D8               	btfss	status,0,c
  5456  0026E6  EF77  F013         	goto	u4321
  5457  0026EA  EF79  F013         	goto	u4320
  5458  0026EE                     u4321:
  5459  0026EE  EF7D  F013         	goto	l3775
  5460  0026F2                     u4320:
  5461  0026F2                     
  5462                           ; BSR set to: 0
  5463  0026F2  5039               	movf	___awmod@divisor^0,w,c
  5464  0026F4  5E37               	subwf	___awmod@dividend^0,f,c
  5465  0026F6  503A               	movf	(___awmod@divisor+1)^0,w,c
  5466  0026F8  5A38               	subwfb	(___awmod@dividend+1)^0,f,c
  5467  0026FA                     l3775:
  5468                           
  5469                           ; BSR set to: 0
  5470  0026FA  90D8               	bcf	status,0,c
  5471  0026FC  323A               	rrcf	(___awmod@divisor+1)^0,f,c
  5472  0026FE  3239               	rrcf	___awmod@divisor^0,f,c
  5473  002700                     
  5474                           ; BSR set to: 0
  5475  002700  2FE8               	decfsz	___awmod@counter& (0+255),f,b
  5476  002702  EF6E  F013         	goto	l3771
  5477  002706                     l3779:
  5478                           
  5479                           ; BSR set to: 0
  5480  002706  51E9               	movf	___awmod@sign& (0+255),w,b
  5481  002708  B4D8               	btfsc	status,2,c
  5482  00270A  EF89  F013         	goto	u4331
  5483  00270E  EF8B  F013         	goto	u4330
  5484  002712                     u4331:
  5485  002712  EF8F  F013         	goto	l3783
  5486  002716                     u4330:
  5487  002716                     
  5488                           ; BSR set to: 0
  5489  002716  6C37               	negf	___awmod@dividend^0,c
  5490  002718  1E38               	comf	(___awmod@dividend+1)^0,f,c
  5491  00271A  B0D8               	btfsc	status,0,c
  5492  00271C  2A38               	incf	(___awmod@dividend+1)^0,f,c
  5493  00271E                     l3783:
  5494                           
  5495                           ; BSR set to: 0
  5496  00271E  C037  F037         	movff	___awmod@dividend,?___awmod
  5497  002722  C038  F038         	movff	___awmod@dividend+1,?___awmod+1
  5498  002726                     
  5499                           ; BSR set to: 0
  5500  002726  0012               	return		;funcret
  5501  002728                     __end_of___awmod:
  5502                           	opt callstack 0
  5503                           
  5504 ;; *************** function _ball *****************
  5505 ;; Defined at:
  5506 ;;		line 89 in file "ball.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;		None
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  j               2   34[COMRAM] int 
  5511 ;;  i               2   32[COMRAM] int 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5521 ;;      Params:         0       0       0       0       0       0       0
  5522 ;;      Locals:         4       0       0       0       0       0       0
  5523 ;;      Temps:          4       0       0       0       0       0       0
  5524 ;;      Totals:         8       0       0       0       0       0       0
  5525 ;;Total ram usage:        8 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    3
  5528 ;; This function calls:
  5529 ;;		_move_ball
  5530 ;; This function is called by:
  5531 ;;		_main
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text23
  5536  0024FA                     __ptext23:
  5537                           	opt callstack 0
  5538  0024FA                     _ball:
  5539                           	opt callstack 27
  5540  0024FA                     
  5541                           ;ball.c: 91:  int i,j;;ball.c: 104:  move_ball();
  5542  0024FA  EC30  F00C         	call	_move_ball	;wreg free
  5543  0024FE                     
  5544                           ;ball.c: 105:  for(i=0;i<16;i++)
  5545  0024FE  0E00               	movlw	0
  5546  002500  6E22               	movwf	(ball@i+1)^0,c
  5547  002502  0E00               	movlw	0
  5548  002504  6E21               	movwf	ball@i^0,c
  5549  002506                     l4057:
  5550                           
  5551                           ;ball.c: 106:  {;ball.c: 107:   for(j=1;j<15;j++)
  5552  002506  0E00               	movlw	0
  5553  002508  6E24               	movwf	(ball@j+1)^0,c
  5554  00250A  0E01               	movlw	1
  5555  00250C  6E23               	movwf	ball@j^0,c
  5556  00250E                     l4063:
  5557                           
  5558                           ;ball.c: 108:    LED[i][j] = 0;
  5559  00250E  C021  F01D         	movff	ball@i,??_ball
  5560  002512  C022  F01E         	movff	ball@i+1,??_ball+1
  5561  002516  3A1D               	swapf	??_ball^0,f,c
  5562  002518  3A1E               	swapf	(??_ball+1)^0,f,c
  5563  00251A  0EF0               	movlw	240
  5564  00251C  161E               	andwf	(??_ball+1)^0,f,c
  5565  00251E  501D               	movf	??_ball^0,w,c
  5566  002520  0B0F               	andlw	15
  5567  002522  121E               	iorwf	(??_ball+1)^0,f,c
  5568  002524  0EF0               	movlw	240
  5569  002526  161D               	andwf	??_ball^0,f,c
  5570  002528  0E00               	movlw	low _LED
  5571  00252A  6E1F               	movwf	(??_ball+2)^0,c
  5572  00252C  0E03               	movlw	high _LED
  5573  00252E  6E20               	movwf	(??_ball+3)^0,c
  5574  002530  501D               	movf	??_ball^0,w,c
  5575  002532  261F               	addwf	(??_ball+2)^0,f,c
  5576  002534  501E               	movf	(??_ball+1)^0,w,c
  5577  002536  2220               	addwfc	(??_ball+3)^0,f,c
  5578  002538  5023               	movf	ball@j^0,w,c
  5579  00253A  241F               	addwf	(??_ball+2)^0,w,c
  5580  00253C  6ED9               	movwf	fsr2l,c
  5581  00253E  5024               	movf	(ball@j+1)^0,w,c
  5582  002540  2020               	addwfc	(??_ball+3)^0,w,c
  5583  002542  6EDA               	movwf	fsr2h,c
  5584  002544  0E00               	movlw	0
  5585  002546  6EDF               	movwf	indf2,c
  5586  002548  4A23               	infsnz	ball@j^0,f,c
  5587  00254A  2A24               	incf	(ball@j+1)^0,f,c
  5588  00254C  BE24               	btfsc	(ball@j+1)^0,7,c
  5589  00254E  EFB2  F012         	goto	u4701
  5590  002552  5024               	movf	(ball@j+1)^0,w,c
  5591  002554  E109               	bnz	u4700
  5592  002556  0E0F               	movlw	15
  5593  002558  5C23               	subwf	ball@j^0,w,c
  5594  00255A  A0D8               	btfss	status,0,c
  5595  00255C  EFB2  F012         	goto	u4701
  5596  002560  EFB4  F012         	goto	u4700
  5597  002564                     u4701:
  5598  002564  EF87  F012         	goto	l4063
  5599  002568                     u4700:
  5600  002568                     
  5601                           ;ball.c: 109:  }
  5602  002568  4A21               	infsnz	ball@i^0,f,c
  5603  00256A  2A22               	incf	(ball@i+1)^0,f,c
  5604  00256C  BE22               	btfsc	(ball@i+1)^0,7,c
  5605  00256E  EFC2  F012         	goto	u4711
  5606  002572  5022               	movf	(ball@i+1)^0,w,c
  5607  002574  E109               	bnz	u4710
  5608  002576  0E10               	movlw	16
  5609  002578  5C21               	subwf	ball@i^0,w,c
  5610  00257A  A0D8               	btfss	status,0,c
  5611  00257C  EFC2  F012         	goto	u4711
  5612  002580  EFC4  F012         	goto	u4710
  5613  002584                     u4711:
  5614  002584  EF83  F012         	goto	l4057
  5615  002588                     u4710:
  5616  002588                     
  5617                           ;ball.c: 110:  LED[ball_y][ball_x] = 1;
  5618  002588  C066  F01D         	movff	_ball_y,??_ball
  5619  00258C  C067  F01E         	movff	_ball_y+1,??_ball+1
  5620  002590  3A1D               	swapf	??_ball^0,f,c
  5621  002592  3A1E               	swapf	(??_ball+1)^0,f,c
  5622  002594  0EF0               	movlw	240
  5623  002596  161E               	andwf	(??_ball+1)^0,f,c
  5624  002598  501D               	movf	??_ball^0,w,c
  5625  00259A  0B0F               	andlw	15
  5626  00259C  121E               	iorwf	(??_ball+1)^0,f,c
  5627  00259E  0EF0               	movlw	240
  5628  0025A0  161D               	andwf	??_ball^0,f,c
  5629  0025A2  0E00               	movlw	low _LED
  5630  0025A4  6E1F               	movwf	(??_ball+2)^0,c
  5631  0025A6  0E03               	movlw	high _LED
  5632  0025A8  6E20               	movwf	(??_ball+3)^0,c
  5633  0025AA  501D               	movf	??_ball^0,w,c
  5634  0025AC  261F               	addwf	(??_ball+2)^0,f,c
  5635  0025AE  501E               	movf	(??_ball+1)^0,w,c
  5636  0025B0  2220               	addwfc	(??_ball+3)^0,f,c
  5637  0025B2  5068               	movf	_ball_x^0,w,c
  5638  0025B4  241F               	addwf	(??_ball+2)^0,w,c
  5639  0025B6  6ED9               	movwf	fsr2l,c
  5640  0025B8  5069               	movf	(_ball_x+1)^0,w,c
  5641  0025BA  2020               	addwfc	(??_ball+3)^0,w,c
  5642  0025BC  6EDA               	movwf	fsr2h,c
  5643  0025BE  0E01               	movlw	1
  5644  0025C0  6EDF               	movwf	indf2,c
  5645  0025C2  0012               	return		;funcret
  5646  0025C4                     __end_of_ball:
  5647                           	opt callstack 0
  5648                           
  5649 ;; *************** function _move_ball *****************
  5650 ;; Defined at:
  5651 ;;		line 9 in file "ball.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;		None
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;  rebound         2   26[COMRAM] int 
  5656 ;;  y_direct        2   24[COMRAM] int 
  5657 ;;  x_direct        2   22[COMRAM] int 
  5658 ;;  i               2    0        int 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5668 ;;      Params:         0       0       0       0       0       0       0
  5669 ;;      Locals:         6       0       0       0       0       0       0
  5670 ;;      Temps:          2       0       0       0       0       0       0
  5671 ;;      Totals:         8       0       0       0       0       0       0
  5672 ;;Total ram usage:        8 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    2
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_ball
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text24
  5683  001860                     __ptext24:
  5684                           	opt callstack 0
  5685  001860                     _move_ball:
  5686                           	opt callstack 27
  5687  001860                     
  5688                           ;ball.c: 11:  int x_direct;;ball.c: 12:  int y_direct;;ball.c: 13:  int i;;ball.c: 15:  
      +                          if(ball_x > ball_last_x)
  5689  001860  5068               	movf	_ball_x^0,w,c
  5690  001862  5C64               	subwf	_ball_last_x^0,w,c
  5691  001864  5065               	movf	(_ball_last_x+1)^0,w,c
  5692  001866  0A80               	xorlw	128
  5693  001868  6E15               	movwf	??_move_ball^0,c
  5694  00186A  5069               	movf	(_ball_x+1)^0,w,c
  5695  00186C  0A80               	xorlw	128
  5696  00186E  5815               	subwfb	??_move_ball^0,w,c
  5697  001870  B0D8               	btfsc	status,0,c
  5698  001872  EF3D  F00C         	goto	u4121
  5699  001876  EF3F  F00C         	goto	u4120
  5700  00187A                     u4121:
  5701  00187A  EF45  F00C         	goto	l3685
  5702  00187E                     u4120:
  5703  00187E                     
  5704                           ;ball.c: 16:   x_direct = 1;
  5705  00187E  0E00               	movlw	0
  5706  001880  6E18               	movwf	(move_ball@x_direct+1)^0,c
  5707  001882  0E01               	movlw	1
  5708  001884  6E17               	movwf	move_ball@x_direct^0,c
  5709  001886  EF49  F00C         	goto	l3687
  5710  00188A                     l3685:
  5711                           
  5712                           ;ball.c: 18:   x_direct = 0;
  5713  00188A  0E00               	movlw	0
  5714  00188C  6E18               	movwf	(move_ball@x_direct+1)^0,c
  5715  00188E  0E00               	movlw	0
  5716  001890  6E17               	movwf	move_ball@x_direct^0,c
  5717  001892                     l3687:
  5718                           
  5719                           ;ball.c: 19:  if(ball_y > ball_last_y)
  5720  001892  5066               	movf	_ball_y^0,w,c
  5721  001894  5C62               	subwf	_ball_last_y^0,w,c
  5722  001896  5063               	movf	(_ball_last_y+1)^0,w,c
  5723  001898  0A80               	xorlw	128
  5724  00189A  6E15               	movwf	??_move_ball^0,c
  5725  00189C  5067               	movf	(_ball_y+1)^0,w,c
  5726  00189E  0A80               	xorlw	128
  5727  0018A0  5815               	subwfb	??_move_ball^0,w,c
  5728  0018A2  B0D8               	btfsc	status,0,c
  5729  0018A4  EF56  F00C         	goto	u4131
  5730  0018A8  EF58  F00C         	goto	u4130
  5731  0018AC                     u4131:
  5732  0018AC  EF5E  F00C         	goto	l3691
  5733  0018B0                     u4130:
  5734  0018B0                     
  5735                           ;ball.c: 20:   y_direct = 1;
  5736  0018B0  0E00               	movlw	0
  5737  0018B2  6E1A               	movwf	(move_ball@y_direct+1)^0,c
  5738  0018B4  0E01               	movlw	1
  5739  0018B6  6E19               	movwf	move_ball@y_direct^0,c
  5740  0018B8  EF62  F00C         	goto	l3693
  5741  0018BC                     l3691:
  5742                           
  5743                           ;ball.c: 22:   y_direct = 0;
  5744  0018BC  0E00               	movlw	0
  5745  0018BE  6E1A               	movwf	(move_ball@y_direct+1)^0,c
  5746  0018C0  0E00               	movlw	0
  5747  0018C2  6E19               	movwf	move_ball@y_direct^0,c
  5748  0018C4                     l3693:
  5749                           
  5750                           ;ball.c: 24:  if(x_direct == 1)
  5751  0018C4  0417               	decf	move_ball@x_direct^0,w,c
  5752  0018C6  1018               	iorwf	(move_ball@x_direct+1)^0,w,c
  5753  0018C8  A4D8               	btfss	status,2,c
  5754  0018CA  EF69  F00C         	goto	u4141
  5755  0018CE  EF6B  F00C         	goto	u4140
  5756  0018D2                     u4141:
  5757  0018D2  EF6F  F00C         	goto	l3697
  5758  0018D6                     u4140:
  5759  0018D6                     
  5760                           ;ball.c: 25:  {;ball.c: 26:   (ball_x)++;
  5761  0018D6  4A68               	infsnz	_ball_x^0,f,c
  5762  0018D8  2A69               	incf	(_ball_x+1)^0,f,c
  5763                           
  5764                           ;ball.c: 27:   (ball_last_x)++;
  5765  0018DA  4A64               	infsnz	_ball_last_x^0,f,c
  5766  0018DC  2A65               	incf	(_ball_last_x+1)^0,f,c
  5767  0018DE                     l3697:
  5768                           
  5769                           ;ball.c: 29:  if(x_direct == 0)
  5770  0018DE  5017               	movf	move_ball@x_direct^0,w,c
  5771  0018E0  1018               	iorwf	(move_ball@x_direct+1)^0,w,c
  5772  0018E2  A4D8               	btfss	status,2,c
  5773  0018E4  EF76  F00C         	goto	u4151
  5774  0018E8  EF78  F00C         	goto	u4150
  5775  0018EC                     u4151:
  5776  0018EC  EF7E  F00C         	goto	l3701
  5777  0018F0                     u4150:
  5778  0018F0                     
  5779                           ;ball.c: 30:  {;ball.c: 31:   (ball_x)--;
  5780  0018F0  0668               	decf	_ball_x^0,f,c
  5781  0018F2  A0D8               	btfss	status,0,c
  5782  0018F4  0669               	decf	(_ball_x+1)^0,f,c
  5783                           
  5784                           ;ball.c: 32:   (ball_last_x)--;
  5785  0018F6  0664               	decf	_ball_last_x^0,f,c
  5786  0018F8  A0D8               	btfss	status,0,c
  5787  0018FA  0665               	decf	(_ball_last_x+1)^0,f,c
  5788  0018FC                     l3701:
  5789                           
  5790                           ;ball.c: 34:     if(y_direct == 1)
  5791  0018FC  0419               	decf	move_ball@y_direct^0,w,c
  5792  0018FE  101A               	iorwf	(move_ball@y_direct+1)^0,w,c
  5793  001900  A4D8               	btfss	status,2,c
  5794  001902  EF85  F00C         	goto	u4161
  5795  001906  EF87  F00C         	goto	u4160
  5796  00190A                     u4161:
  5797  00190A  EF8B  F00C         	goto	l3705
  5798  00190E                     u4160:
  5799  00190E                     
  5800                           ;ball.c: 35:     {;ball.c: 36:         (ball_y)++;
  5801  00190E  4A66               	infsnz	_ball_y^0,f,c
  5802  001910  2A67               	incf	(_ball_y+1)^0,f,c
  5803                           
  5804                           ;ball.c: 37:         (ball_last_y)++;
  5805  001912  4A62               	infsnz	_ball_last_y^0,f,c
  5806  001914  2A63               	incf	(_ball_last_y+1)^0,f,c
  5807  001916                     l3705:
  5808                           
  5809                           ;ball.c: 39:     if(y_direct == 0)
  5810  001916  5019               	movf	move_ball@y_direct^0,w,c
  5811  001918  101A               	iorwf	(move_ball@y_direct+1)^0,w,c
  5812  00191A  A4D8               	btfss	status,2,c
  5813  00191C  EF92  F00C         	goto	u4171
  5814  001920  EF94  F00C         	goto	u4170
  5815  001924                     u4171:
  5816  001924  EF9A  F00C         	goto	l3709
  5817  001928                     u4170:
  5818  001928                     
  5819                           ;ball.c: 40:     {;ball.c: 41:         (ball_y)--;
  5820  001928  0666               	decf	_ball_y^0,f,c
  5821  00192A  A0D8               	btfss	status,0,c
  5822  00192C  0667               	decf	(_ball_y+1)^0,f,c
  5823                           
  5824                           ;ball.c: 42:         (ball_last_y)--;
  5825  00192E  0662               	decf	_ball_last_y^0,f,c
  5826  001930  A0D8               	btfss	status,0,c
  5827  001932  0663               	decf	(_ball_last_y+1)^0,f,c
  5828  001934                     l3709:
  5829                           
  5830                           ;ball.c: 45:  if(ball_y<0)
  5831  001934  BE67               	btfsc	(_ball_y+1)^0,7,c
  5832  001936  EFA1  F00C         	goto	u4180
  5833  00193A  EF9F  F00C         	goto	u4181
  5834  00193E                     u4181:
  5835  00193E  EFA5  F00C         	goto	l3713
  5836  001942                     u4180:
  5837  001942                     
  5838                           ;ball.c: 46:   ball_y = 1;
  5839  001942  0E00               	movlw	0
  5840  001944  6E67               	movwf	(_ball_y+1)^0,c
  5841  001946  0E01               	movlw	1
  5842  001948  6E66               	movwf	_ball_y^0,c
  5843  00194A                     l3713:
  5844                           
  5845                           ;ball.c: 47:  if(ball_y>15)
  5846  00194A  BE67               	btfsc	(_ball_y+1)^0,7,c
  5847  00194C  EFB1  F00C         	goto	u4191
  5848  001950  5067               	movf	(_ball_y+1)^0,w,c
  5849  001952  E109               	bnz	u4190
  5850  001954  0E10               	movlw	16
  5851  001956  5C66               	subwf	_ball_y^0,w,c
  5852  001958  A0D8               	btfss	status,0,c
  5853  00195A  EFB1  F00C         	goto	u4191
  5854  00195E  EFB3  F00C         	goto	u4190
  5855  001962                     u4191:
  5856  001962  EFB7  F00C         	goto	l381
  5857  001966                     u4190:
  5858  001966                     
  5859                           ;ball.c: 48:   ball_y = 14;
  5860  001966  0E00               	movlw	0
  5861  001968  6E67               	movwf	(_ball_y+1)^0,c
  5862  00196A  0E0E               	movlw	14
  5863  00196C  6E66               	movwf	_ball_y^0,c
  5864  00196E                     l381:
  5865                           
  5866                           ;ball.c: 50:  int rebound = 0;
  5867  00196E  0E00               	movlw	0
  5868  001970  6E1C               	movwf	(move_ball@rebound+1)^0,c
  5869  001972  0E00               	movlw	0
  5870  001974  6E1B               	movwf	move_ball@rebound^0,c
  5871  001976                     
  5872                           ;ball.c: 51:  if(ball_x == 0)
  5873  001976  5068               	movf	_ball_x^0,w,c
  5874  001978  1069               	iorwf	(_ball_x+1)^0,w,c
  5875  00197A  A4D8               	btfss	status,2,c
  5876  00197C  EFC2  F00C         	goto	u4201
  5877  001980  EFC4  F00C         	goto	u4200
  5878  001984                     u4201:
  5879  001984  EFEB  F00C         	goto	l3727
  5880  001988                     u4200:
  5881  001988                     
  5882                           ;ball.c: 52:  {;ball.c: 53:   if(left_board[ball_last_y] == 1)
  5883  001988  90D8               	bcf	status,0,c
  5884  00198A  3462               	rlcf	_ball_last_y^0,w,c
  5885  00198C  6ED9               	movwf	fsr2l,c
  5886  00198E  3463               	rlcf	(_ball_last_y+1)^0,w,c
  5887  001990  6EDA               	movwf	fsr2h,c
  5888  001992  0EA0               	movlw	low _left_board
  5889  001994  26D9               	addwf	fsr2l,f,c
  5890  001996  0E00               	movlw	high _left_board
  5891  001998  22DA               	addwfc	fsr2h,f,c
  5892  00199A  04DE               	decf	postinc2,w,c
  5893  00199C  10DE               	iorwf	postinc2,w,c
  5894  00199E  A4D8               	btfss	status,2,c
  5895  0019A0  EFD4  F00C         	goto	u4211
  5896  0019A4  EFD6  F00C         	goto	u4210
  5897  0019A8                     u4211:
  5898  0019A8  EFDA  F00C         	goto	l3723
  5899  0019AC                     u4210:
  5900  0019AC                     
  5901                           ;ball.c: 54:    rebound = 1;
  5902  0019AC  0E00               	movlw	0
  5903  0019AE  6E1C               	movwf	(move_ball@rebound+1)^0,c
  5904  0019B0  0E01               	movlw	1
  5905  0019B2  6E1B               	movwf	move_ball@rebound^0,c
  5906  0019B4                     l3723:
  5907                           
  5908                           ;ball.c: 55:   if(rebound == 1)
  5909  0019B4  041B               	decf	move_ball@rebound^0,w,c
  5910  0019B6  101C               	iorwf	(move_ball@rebound+1)^0,w,c
  5911  0019B8  A4D8               	btfss	status,2,c
  5912  0019BA  EFE1  F00C         	goto	u4221
  5913  0019BE  EFE3  F00C         	goto	u4220
  5914  0019C2                     u4221:
  5915  0019C2  EFEB  F00C         	goto	l3727
  5916  0019C6                     u4220:
  5917  0019C6                     
  5918                           ;ball.c: 56:   {;ball.c: 58:    ball_x = 2;
  5919  0019C6  0E00               	movlw	0
  5920  0019C8  6E69               	movwf	(_ball_x+1)^0,c
  5921  0019CA  0E02               	movlw	2
  5922  0019CC  6E68               	movwf	_ball_x^0,c
  5923                           
  5924                           ;ball.c: 59:    ball_last_x = 1;
  5925  0019CE  0E00               	movlw	0
  5926  0019D0  6E65               	movwf	(_ball_last_x+1)^0,c
  5927  0019D2  0E01               	movlw	1
  5928  0019D4  6E64               	movwf	_ball_last_x^0,c
  5929  0019D6                     l3727:
  5930                           
  5931                           ;ball.c: 62:  if(ball_x == 15)
  5932  0019D6  0E0F               	movlw	15
  5933  0019D8  1868               	xorwf	_ball_x^0,w,c
  5934  0019DA  1069               	iorwf	(_ball_x+1)^0,w,c
  5935  0019DC  A4D8               	btfss	status,2,c
  5936  0019DE  EFF3  F00C         	goto	u4231
  5937  0019E2  EFF5  F00C         	goto	u4230
  5938  0019E6                     u4231:
  5939  0019E6  EF1C  F00D         	goto	l3737
  5940  0019EA                     u4230:
  5941  0019EA                     
  5942                           ;ball.c: 63:     {;ball.c: 64:         if(right_board[ball_last_y] == 1)
  5943  0019EA  90D8               	bcf	status,0,c
  5944  0019EC  3462               	rlcf	_ball_last_y^0,w,c
  5945  0019EE  6ED9               	movwf	fsr2l,c
  5946  0019F0  3463               	rlcf	(_ball_last_y+1)^0,w,c
  5947  0019F2  6EDA               	movwf	fsr2h,c
  5948  0019F4  0E80               	movlw	low _right_board
  5949  0019F6  26D9               	addwf	fsr2l,f,c
  5950  0019F8  0E00               	movlw	high _right_board
  5951  0019FA  22DA               	addwfc	fsr2h,f,c
  5952  0019FC  04DE               	decf	postinc2,w,c
  5953  0019FE  10DE               	iorwf	postinc2,w,c
  5954  001A00  A4D8               	btfss	status,2,c
  5955  001A02  EF05  F00D         	goto	u4241
  5956  001A06  EF07  F00D         	goto	u4240
  5957  001A0A                     u4241:
  5958  001A0A  EF0B  F00D         	goto	l3733
  5959  001A0E                     u4240:
  5960  001A0E                     
  5961                           ;ball.c: 65:             rebound = 1;
  5962  001A0E  0E00               	movlw	0
  5963  001A10  6E1C               	movwf	(move_ball@rebound+1)^0,c
  5964  001A12  0E01               	movlw	1
  5965  001A14  6E1B               	movwf	move_ball@rebound^0,c
  5966  001A16                     l3733:
  5967                           
  5968                           ;ball.c: 66:         if(rebound == 1)
  5969  001A16  041B               	decf	move_ball@rebound^0,w,c
  5970  001A18  101C               	iorwf	(move_ball@rebound+1)^0,w,c
  5971  001A1A  A4D8               	btfss	status,2,c
  5972  001A1C  EF12  F00D         	goto	u4251
  5973  001A20  EF14  F00D         	goto	u4250
  5974  001A24                     u4251:
  5975  001A24  EF1C  F00D         	goto	l3737
  5976  001A28                     u4250:
  5977  001A28                     
  5978                           ;ball.c: 67:         {;ball.c: 69:             ball_x = 13;
  5979  001A28  0E00               	movlw	0
  5980  001A2A  6E69               	movwf	(_ball_x+1)^0,c
  5981  001A2C  0E0D               	movlw	13
  5982  001A2E  6E68               	movwf	_ball_x^0,c
  5983                           
  5984                           ;ball.c: 70:             ball_last_x = 14;
  5985  001A30  0E00               	movlw	0
  5986  001A32  6E65               	movwf	(_ball_last_x+1)^0,c
  5987  001A34  0E0E               	movlw	14
  5988  001A36  6E64               	movwf	_ball_last_x^0,c
  5989  001A38                     l3737:
  5990                           
  5991                           ;ball.c: 73:     if(ball_y<0)
  5992  001A38  BE67               	btfsc	(_ball_y+1)^0,7,c
  5993  001A3A  EF23  F00D         	goto	u4260
  5994  001A3E  EF21  F00D         	goto	u4261
  5995  001A42                     u4261:
  5996  001A42  EF27  F00D         	goto	l3741
  5997  001A46                     u4260:
  5998  001A46                     
  5999                           ;ball.c: 74:         ball_y = 1;
  6000  001A46  0E00               	movlw	0
  6001  001A48  6E67               	movwf	(_ball_y+1)^0,c
  6002  001A4A  0E01               	movlw	1
  6003  001A4C  6E66               	movwf	_ball_y^0,c
  6004  001A4E                     l3741:
  6005                           
  6006                           ;ball.c: 75:     if(ball_y>15)
  6007  001A4E  BE67               	btfsc	(_ball_y+1)^0,7,c
  6008  001A50  EF33  F00D         	goto	u4271
  6009  001A54  5067               	movf	(_ball_y+1)^0,w,c
  6010  001A56  E109               	bnz	u4270
  6011  001A58  0E10               	movlw	16
  6012  001A5A  5C66               	subwf	_ball_y^0,w,c
  6013  001A5C  A0D8               	btfss	status,0,c
  6014  001A5E  EF33  F00D         	goto	u4271
  6015  001A62  EF35  F00D         	goto	u4270
  6016  001A66                     u4271:
  6017  001A66  EF39  F00D         	goto	l390
  6018  001A6A                     u4270:
  6019  001A6A                     
  6020                           ;ball.c: 76:         ball_y = 14;
  6021  001A6A  0E00               	movlw	0
  6022  001A6C  6E67               	movwf	(_ball_y+1)^0,c
  6023  001A6E  0E0E               	movlw	14
  6024  001A70  6E66               	movwf	_ball_y^0,c
  6025  001A72                     l390:
  6026  001A72  0012               	return		;funcret
  6027  001A74                     __end_of_move_ball:
  6028                           	opt callstack 0
  6029                           
  6030 ;; *************** function ___xxtofl *****************
  6031 ;; Defined at:
  6032 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  sign            1    wreg     unsigned char 
  6035 ;;  val             4   20[COMRAM] long 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  sign            1   28[COMRAM] unsigned char 
  6038 ;;  arg             4   30[COMRAM] unsigned long 
  6039 ;;  exp             1   29[COMRAM] unsigned char 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  4   20[COMRAM] unsigned char 
  6042 ;; Registers used:
  6043 ;;		wreg, status,2, status,0
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6049 ;;      Params:         4       0       0       0       0       0       0
  6050 ;;      Locals:         6       0       0       0       0       0       0
  6051 ;;      Temps:          4       0       0       0       0       0       0
  6052 ;;      Totals:        14       0       0       0       0       0       0
  6053 ;;Total ram usage:       14 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    2
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_main
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text25
  6064  001C56                     __ptext25:
  6065                           	opt callstack 0
  6066  001C56                     ___xxtofl:
  6067                           	opt callstack 28
  6068                           
  6069                           ;incstack = 0
  6070                           ;___xxtofl@sign stored from wreg
  6071  001C56  6E1D               	movwf	___xxtofl@sign^0,c
  6072  001C58  501D               	movf	___xxtofl@sign^0,w,c
  6073  001C5A  B4D8               	btfsc	status,2,c
  6074  001C5C  EF32  F00E         	goto	u5021
  6075  001C60  EF34  F00E         	goto	u5020
  6076  001C64                     u5021:
  6077  001C64  EF56  F00E         	goto	l1087
  6078  001C68                     u5020:
  6079  001C68  BE18               	btfsc	(___xxtofl@val+3)^0,7,c
  6080  001C6A  EF3B  F00E         	goto	u5030
  6081  001C6E  EF39  F00E         	goto	u5031
  6082  001C72                     u5031:
  6083  001C72  EF56  F00E         	goto	l1087
  6084  001C76                     u5030:
  6085  001C76  C015  F019         	movff	___xxtofl@val,??___xxtofl
  6086  001C7A  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
  6087  001C7E  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
  6088  001C82  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
  6089  001C86  1E19               	comf	??___xxtofl^0,f,c
  6090  001C88  1E1A               	comf	(??___xxtofl+1)^0,f,c
  6091  001C8A  1E1B               	comf	(??___xxtofl+2)^0,f,c
  6092  001C8C  1E1C               	comf	(??___xxtofl+3)^0,f,c
  6093  001C8E  2A19               	incf	??___xxtofl^0,f,c
  6094  001C90  0E00               	movlw	0
  6095  001C92  221A               	addwfc	(??___xxtofl+1)^0,f,c
  6096  001C94  221B               	addwfc	(??___xxtofl+2)^0,f,c
  6097  001C96  221C               	addwfc	(??___xxtofl+3)^0,f,c
  6098  001C98  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
  6099  001C9C  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
  6100  001CA0  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
  6101  001CA4  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
  6102  001CA8  EF5E  F00E         	goto	l4263
  6103  001CAC                     l1087:
  6104  001CAC  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
  6105  001CB0  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6106  001CB4  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6107  001CB8  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6108  001CBC                     l4263:
  6109  001CBC  5015               	movf	___xxtofl@val^0,w,c
  6110  001CBE  1016               	iorwf	(___xxtofl@val+1)^0,w,c
  6111  001CC0  1017               	iorwf	(___xxtofl@val+2)^0,w,c
  6112  001CC2  1018               	iorwf	(___xxtofl@val+3)^0,w,c
  6113  001CC4  A4D8               	btfss	status,2,c
  6114  001CC6  EF67  F00E         	goto	u5041
  6115  001CCA  EF69  F00E         	goto	u5040
  6116  001CCE                     u5041:
  6117  001CCE  EF73  F00E         	goto	l4269
  6118  001CD2                     u5040:
  6119  001CD2  0E00               	movlw	0
  6120  001CD4  6E15               	movwf	?___xxtofl^0,c
  6121  001CD6  0E00               	movlw	0
  6122  001CD8  6E16               	movwf	(?___xxtofl+1)^0,c
  6123  001CDA  0E00               	movlw	0
  6124  001CDC  6E17               	movwf	(?___xxtofl+2)^0,c
  6125  001CDE  0E00               	movlw	0
  6126  001CE0  6E18               	movwf	(?___xxtofl+3)^0,c
  6127  001CE2  EF04  F00F         	goto	l1090
  6128  001CE6                     l4269:
  6129  001CE6  0E96               	movlw	150
  6130  001CE8  6E1E               	movwf	___xxtofl@exp^0,c
  6131  001CEA  EF7D  F00E         	goto	l4273
  6132  001CEE                     l4271:
  6133  001CEE  2A1E               	incf	___xxtofl@exp^0,f,c
  6134  001CF0  90D8               	bcf	status,0,c
  6135  001CF2  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
  6136  001CF4  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
  6137  001CF6  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
  6138  001CF8  321F               	rrcf	___xxtofl@arg^0,f,c
  6139  001CFA                     l4273:
  6140  001CFA  0E00               	movlw	0
  6141  001CFC  141F               	andwf	___xxtofl@arg^0,w,c
  6142  001CFE  6E19               	movwf	??___xxtofl^0,c
  6143  001D00  0E00               	movlw	0
  6144  001D02  1420               	andwf	(___xxtofl@arg+1)^0,w,c
  6145  001D04  6E1A               	movwf	(??___xxtofl+1)^0,c
  6146  001D06  0E00               	movlw	0
  6147  001D08  1421               	andwf	(___xxtofl@arg+2)^0,w,c
  6148  001D0A  6E1B               	movwf	(??___xxtofl+2)^0,c
  6149  001D0C  0EFE               	movlw	254
  6150  001D0E  1422               	andwf	(___xxtofl@arg+3)^0,w,c
  6151  001D10  6E1C               	movwf	(??___xxtofl+3)^0,c
  6152  001D12  5019               	movf	??___xxtofl^0,w,c
  6153  001D14  101A               	iorwf	(??___xxtofl+1)^0,w,c
  6154  001D16  101B               	iorwf	(??___xxtofl+2)^0,w,c
  6155  001D18  101C               	iorwf	(??___xxtofl+3)^0,w,c
  6156  001D1A  A4D8               	btfss	status,2,c
  6157  001D1C  EF92  F00E         	goto	u5051
  6158  001D20  EF94  F00E         	goto	u5050
  6159  001D24                     u5051:
  6160  001D24  EF77  F00E         	goto	l4271
  6161  001D28                     u5050:
  6162  001D28  EFA2  F00E         	goto	l1094
  6163  001D2C                     l4275:
  6164  001D2C  2A1E               	incf	___xxtofl@exp^0,f,c
  6165  001D2E  0E01               	movlw	1
  6166  001D30  261F               	addwf	___xxtofl@arg^0,f,c
  6167  001D32  0E00               	movlw	0
  6168  001D34  2220               	addwfc	(___xxtofl@arg+1)^0,f,c
  6169  001D36  2221               	addwfc	(___xxtofl@arg+2)^0,f,c
  6170  001D38  2222               	addwfc	(___xxtofl@arg+3)^0,f,c
  6171  001D3A  90D8               	bcf	status,0,c
  6172  001D3C  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
  6173  001D3E  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
  6174  001D40  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
  6175  001D42  321F               	rrcf	___xxtofl@arg^0,f,c
  6176  001D44                     l1094:
  6177  001D44  0E00               	movlw	0
  6178  001D46  141F               	andwf	___xxtofl@arg^0,w,c
  6179  001D48  6E19               	movwf	??___xxtofl^0,c
  6180  001D4A  0E00               	movlw	0
  6181  001D4C  1420               	andwf	(___xxtofl@arg+1)^0,w,c
  6182  001D4E  6E1A               	movwf	(??___xxtofl+1)^0,c
  6183  001D50  0E00               	movlw	0
  6184  001D52  1421               	andwf	(___xxtofl@arg+2)^0,w,c
  6185  001D54  6E1B               	movwf	(??___xxtofl+2)^0,c
  6186  001D56  0EFF               	movlw	255
  6187  001D58  1422               	andwf	(___xxtofl@arg+3)^0,w,c
  6188  001D5A  6E1C               	movwf	(??___xxtofl+3)^0,c
  6189  001D5C  5019               	movf	??___xxtofl^0,w,c
  6190  001D5E  101A               	iorwf	(??___xxtofl+1)^0,w,c
  6191  001D60  101B               	iorwf	(??___xxtofl+2)^0,w,c
  6192  001D62  101C               	iorwf	(??___xxtofl+3)^0,w,c
  6193  001D64  A4D8               	btfss	status,2,c
  6194  001D66  EFB7  F00E         	goto	u5061
  6195  001D6A  EFB9  F00E         	goto	u5060
  6196  001D6E                     u5061:
  6197  001D6E  EF96  F00E         	goto	l4275
  6198  001D72                     u5060:
  6199  001D72  EFC1  F00E         	goto	l4283
  6200  001D76                     l4281:
  6201  001D76  061E               	decf	___xxtofl@exp^0,f,c
  6202  001D78  90D8               	bcf	status,0,c
  6203  001D7A  361F               	rlcf	___xxtofl@arg^0,f,c
  6204  001D7C  3620               	rlcf	(___xxtofl@arg+1)^0,f,c
  6205  001D7E  3621               	rlcf	(___xxtofl@arg+2)^0,f,c
  6206  001D80  3622               	rlcf	(___xxtofl@arg+3)^0,f,c
  6207  001D82                     l4283:
  6208  001D82  BE21               	btfsc	(___xxtofl@arg+2)^0,7,c
  6209  001D84  EFC6  F00E         	goto	u5071
  6210  001D88  EFC8  F00E         	goto	u5070
  6211  001D8C                     u5071:
  6212  001D8C  EFD0  F00E         	goto	l1101
  6213  001D90                     u5070:
  6214  001D90  0E02               	movlw	2
  6215  001D92  601E               	cpfslt	___xxtofl@exp^0,c
  6216  001D94  EFCE  F00E         	goto	u5081
  6217  001D98  EFD0  F00E         	goto	u5080
  6218  001D9C                     u5081:
  6219  001D9C  EFBB  F00E         	goto	l4281
  6220  001DA0                     u5080:
  6221  001DA0                     l1101:
  6222  001DA0  B01E               	btfsc	___xxtofl@exp^0,0,c
  6223  001DA2  EFD5  F00E         	goto	u5091
  6224  001DA6  EFD7  F00E         	goto	u5090
  6225  001DAA                     u5091:
  6226  001DAA  EFD8  F00E         	goto	l4289
  6227  001DAE                     u5090:
  6228  001DAE  9E21               	bcf	(___xxtofl@arg+2)^0,7,c
  6229  001DB0                     l4289:
  6230  001DB0  90D8               	bcf	status,0,c
  6231  001DB2  321E               	rrcf	___xxtofl@exp^0,f,c
  6232  001DB4  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
  6233  001DB8  6A1A               	clrf	(??___xxtofl+1)^0,c
  6234  001DBA  6A1B               	clrf	(??___xxtofl+2)^0,c
  6235  001DBC  6A1C               	clrf	(??___xxtofl+3)^0,c
  6236  001DBE  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
  6237  001DC2  6A1B               	clrf	(??___xxtofl+2)^0,c
  6238  001DC4  6A1A               	clrf	(??___xxtofl+1)^0,c
  6239  001DC6  6A19               	clrf	??___xxtofl^0,c
  6240  001DC8  5019               	movf	??___xxtofl^0,w,c
  6241  001DCA  121F               	iorwf	___xxtofl@arg^0,f,c
  6242  001DCC  501A               	movf	(??___xxtofl+1)^0,w,c
  6243  001DCE  1220               	iorwf	(___xxtofl@arg+1)^0,f,c
  6244  001DD0  501B               	movf	(??___xxtofl+2)^0,w,c
  6245  001DD2  1221               	iorwf	(___xxtofl@arg+2)^0,f,c
  6246  001DD4  501C               	movf	(??___xxtofl+3)^0,w,c
  6247  001DD6  1222               	iorwf	(___xxtofl@arg+3)^0,f,c
  6248  001DD8  501D               	movf	___xxtofl@sign^0,w,c
  6249  001DDA  B4D8               	btfsc	status,2,c
  6250  001DDC  EFF2  F00E         	goto	u5101
  6251  001DE0  EFF4  F00E         	goto	u5100
  6252  001DE4                     u5101:
  6253  001DE4  EFFC  F00E         	goto	l4299
  6254  001DE8                     u5100:
  6255  001DE8  BE18               	btfsc	(___xxtofl@val+3)^0,7,c
  6256  001DEA  EFFB  F00E         	goto	u5110
  6257  001DEE  EFF9  F00E         	goto	u5111
  6258  001DF2                     u5111:
  6259  001DF2  EFFC  F00E         	goto	l4299
  6260  001DF6                     u5110:
  6261  001DF6  8E22               	bsf	(___xxtofl@arg+3)^0,7,c
  6262  001DF8                     l4299:
  6263  001DF8  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
  6264  001DFC  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
  6265  001E00  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
  6266  001E04  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
  6267  001E08                     l1090:
  6268  001E08  0012               	return		;funcret
  6269  001E0A                     __end_of___xxtofl:
  6270                           	opt callstack 0
  6271                           
  6272 ;; *************** function ___fltol *****************
  6273 ;; Defined at:
  6274 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  f1              4    0[BANK0 ] unsigned char 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  exp1            1    9[BANK0 ] unsigned char 
  6279 ;;  sign1           1    8[BANK0 ] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  4    0[BANK0 ] long 
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6289 ;;      Params:         0       4       0       0       0       0       0
  6290 ;;      Locals:         0       2       0       0       0       0       0
  6291 ;;      Temps:          0       4       0       0       0       0       0
  6292 ;;      Totals:         0      10       0       0       0       0       0
  6293 ;;Total ram usage:       10 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    2
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_main
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text26
  6304  00206C                     __ptext26:
  6305                           	opt callstack 0
  6306  00206C                     ___fltol:
  6307                           	opt callstack 28
  6308  00206C  0100               	movlb	0	; () banked
  6309  00206E  35EA               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6310  002070  35EB               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6311  002072  6FF1               	movwf	___fltol@exp1& (0+255),b
  6312  002074  51F1               	movf	___fltol@exp1& (0+255),w,b
  6313  002076  A4D8               	btfss	status,2,c
  6314  002078  EF40  F010         	goto	u4951
  6315  00207C  EF42  F010         	goto	u4950
  6316  002080                     u4951:
  6317  002080  EF4C  F010         	goto	l4219
  6318  002084                     u4950:
  6319  002084                     l4215:
  6320                           
  6321                           ; BSR set to: 0
  6322  002084  0E00               	movlw	0
  6323  002086  6FE8               	movwf	?___fltol& (0+255),b
  6324  002088  0E00               	movlw	0
  6325  00208A  6FE9               	movwf	(?___fltol+1)& (0+255),b
  6326  00208C  0E00               	movlw	0
  6327  00208E  6FEA               	movwf	(?___fltol+2)& (0+255),b
  6328  002090  0E00               	movlw	0
  6329  002092  6FEB               	movwf	(?___fltol+3)& (0+255),b
  6330  002094  EFB9  F010         	goto	l729
  6331  002098                     l4219:
  6332                           
  6333                           ; BSR set to: 0
  6334  002098  C0E8  F0EC         	movff	___fltol@f1,??___fltol
  6335  00209C  C0E9  F0ED         	movff	___fltol@f1+1,??___fltol+1
  6336  0020A0  C0EA  F0EE         	movff	___fltol@f1+2,??___fltol+2
  6337  0020A4  C0EB  F0EF         	movff	___fltol@f1+3,??___fltol+3
  6338  0020A8  0E20               	movlw	32
  6339  0020AA  EF5C  F010         	goto	u4960
  6340  0020AE                     u4965:
  6341  0020AE  90D8               	bcf	status,0,c
  6342  0020B0  33EF               	rrcf	(??___fltol+3)& (0+255),f,b
  6343  0020B2  33EE               	rrcf	(??___fltol+2)& (0+255),f,b
  6344  0020B4  33ED               	rrcf	(??___fltol+1)& (0+255),f,b
  6345  0020B6  33EC               	rrcf	??___fltol& (0+255),f,b
  6346  0020B8                     u4960:
  6347  0020B8  2EE8               	decfsz	wreg,f,c
  6348  0020BA  EF57  F010         	goto	u4965
  6349  0020BE  51EC               	movf	??___fltol& (0+255),w,b
  6350  0020C0  6FF0               	movwf	___fltol@sign1& (0+255),b
  6351  0020C2                     
  6352                           ; BSR set to: 0
  6353  0020C2  8FEA               	bsf	(___fltol@f1+2)& (0+255),7,b
  6354  0020C4                     
  6355                           ; BSR set to: 0
  6356  0020C4  0EFF               	movlw	255
  6357  0020C6  17E8               	andwf	___fltol@f1& (0+255),f,b
  6358  0020C8  0EFF               	movlw	255
  6359  0020CA  17E9               	andwf	(___fltol@f1+1)& (0+255),f,b
  6360  0020CC  0EFF               	movlw	255
  6361  0020CE  17EA               	andwf	(___fltol@f1+2)& (0+255),f,b
  6362  0020D0  0E00               	movlw	0
  6363  0020D2  17EB               	andwf	(___fltol@f1+3)& (0+255),f,b
  6364  0020D4                     
  6365                           ; BSR set to: 0
  6366  0020D4  0E96               	movlw	150
  6367  0020D6  5FF1               	subwf	___fltol@exp1& (0+255),f,b
  6368  0020D8                     
  6369                           ; BSR set to: 0
  6370  0020D8  BFF1               	btfsc	___fltol@exp1& (0+255),7,b
  6371  0020DA  EF73  F010         	goto	u4970
  6372  0020DE  EF71  F010         	goto	u4971
  6373  0020E2                     u4971:
  6374  0020E2  EF89  F010         	goto	l4239
  6375  0020E6                     u4970:
  6376  0020E6                     
  6377                           ; BSR set to: 0
  6378  0020E6  51F1               	movf	___fltol@exp1& (0+255),w,b
  6379  0020E8  0A80               	xorlw	128
  6380  0020EA  0F97               	addlw	151
  6381  0020EC  B0D8               	btfsc	status,0,c
  6382  0020EE  EF7B  F010         	goto	u4981
  6383  0020F2  EF7D  F010         	goto	u4980
  6384  0020F6                     u4981:
  6385  0020F6  EF7F  F010         	goto	l4235
  6386  0020FA                     u4980:
  6387  0020FA  EF42  F010         	goto	l4215
  6388  0020FE                     l4235:
  6389                           
  6390                           ; BSR set to: 0
  6391  0020FE  90D8               	bcf	status,0,c
  6392  002100  33EB               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6393  002102  33EA               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6394  002104  33E9               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6395  002106  33E8               	rrcf	___fltol@f1& (0+255),f,b
  6396  002108                     
  6397                           ; BSR set to: 0
  6398  002108  3FF1               	incfsz	___fltol@exp1& (0+255),f,b
  6399  00210A  EF7F  F010         	goto	l4235
  6400  00210E  EFA1  F010         	goto	l4249
  6401  002112                     l4239:
  6402                           
  6403                           ; BSR set to: 0
  6404  002112  0E1F               	movlw	31
  6405  002114  65F1               	cpfsgt	___fltol@exp1& (0+255),b
  6406  002116  EF8F  F010         	goto	u4991
  6407  00211A  EF91  F010         	goto	u4990
  6408  00211E                     u4991:
  6409  00211E  EF99  F010         	goto	l4247
  6410  002122                     u4990:
  6411  002122  EF42  F010         	goto	l4215
  6412  002126                     l4245:
  6413                           
  6414                           ; BSR set to: 0
  6415  002126  90D8               	bcf	status,0,c
  6416  002128  37E8               	rlcf	___fltol@f1& (0+255),f,b
  6417  00212A  37E9               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6418  00212C  37EA               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6419  00212E  37EB               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6420  002130  07F1               	decf	___fltol@exp1& (0+255),f,b
  6421  002132                     l4247:
  6422                           
  6423                           ; BSR set to: 0
  6424  002132  51F1               	movf	___fltol@exp1& (0+255),w,b
  6425  002134  A4D8               	btfss	status,2,c
  6426  002136  EF9F  F010         	goto	u5001
  6427  00213A  EFA1  F010         	goto	u5000
  6428  00213E                     u5001:
  6429  00213E  EF93  F010         	goto	l4245
  6430  002142                     u5000:
  6431  002142                     l4249:
  6432                           
  6433                           ; BSR set to: 0
  6434  002142  51F0               	movf	___fltol@sign1& (0+255),w,b
  6435  002144  B4D8               	btfsc	status,2,c
  6436  002146  EFA7  F010         	goto	u5011
  6437  00214A  EFA9  F010         	goto	u5010
  6438  00214E                     u5011:
  6439  00214E  EFB1  F010         	goto	l4253
  6440  002152                     u5010:
  6441  002152                     
  6442                           ; BSR set to: 0
  6443  002152  1FEB               	comf	(___fltol@f1+3)& (0+255),f,b
  6444  002154  1FEA               	comf	(___fltol@f1+2)& (0+255),f,b
  6445  002156  1FE9               	comf	(___fltol@f1+1)& (0+255),f,b
  6446  002158  6DE8               	negf	___fltol@f1& (0+255),b
  6447  00215A  0E00               	movlw	0
  6448  00215C  23E9               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6449  00215E  23EA               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6450  002160  23EB               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6451  002162                     l4253:
  6452                           
  6453                           ; BSR set to: 0
  6454  002162  C0E8  F0E8         	movff	___fltol@f1,?___fltol
  6455  002166  C0E9  F0E9         	movff	___fltol@f1+1,?___fltol+1
  6456  00216A  C0EA  F0EA         	movff	___fltol@f1+2,?___fltol+2
  6457  00216E  C0EB  F0EB         	movff	___fltol@f1+3,?___fltol+3
  6458  002172                     l729:
  6459                           
  6460                           ; BSR set to: 0
  6461  002172  0012               	return		;funcret
  6462  002174                     __end_of___fltol:
  6463                           	opt callstack 0
  6464                           
  6465 ;; *************** function ___fldiv *****************
  6466 ;; Defined at:
  6467 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  b               4   34[COMRAM] long 
  6470 ;;  a               4   38[COMRAM] long 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  grs             4   53[COMRAM] unsigned long 
  6473 ;;  rem             4   46[COMRAM] unsigned long 
  6474 ;;  new_exp         2   51[COMRAM] short 
  6475 ;;  aexp            1   58[COMRAM] unsigned char 
  6476 ;;  bexp            1   57[COMRAM] unsigned char 
  6477 ;;  sign            1   50[COMRAM] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  4   34[COMRAM] unsigned char 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6487 ;;      Params:         8       0       0       0       0       0       0
  6488 ;;      Locals:        13       0       0       0       0       0       0
  6489 ;;      Temps:          4       0       0       0       0       0       0
  6490 ;;      Totals:        25       0       0       0       0       0       0
  6491 ;;Total ram usage:       25 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    2
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_main
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text27
  6502  00080E                     __ptext27:
  6503                           	opt callstack 0
  6504  00080E                     ___fldiv:
  6505                           	opt callstack 28
  6506  00080E  5026               	movf	(___fldiv@b+3)^0,w,c
  6507  000810  0B80               	andlw	128
  6508  000812  6E33               	movwf	___fldiv@sign^0,c
  6509  000814  5026               	movf	(___fldiv@b+3)^0,w,c
  6510  000816  2426               	addwf	(___fldiv@b+3)^0,w,c
  6511  000818  6E3A               	movwf	___fldiv@bexp^0,c
  6512  00081A  AE25               	btfss	(___fldiv@b+2)^0,7,c
  6513  00081C  EF12  F004         	goto	u4721
  6514  000820  EF14  F004         	goto	u4720
  6515  000824                     u4721:
  6516  000824  EF15  F004         	goto	l4081
  6517  000828                     u4720:
  6518  000828  803A               	bsf	___fldiv@bexp^0,0,c
  6519  00082A                     l4081:
  6520  00082A  503A               	movf	___fldiv@bexp^0,w,c
  6521  00082C  B4D8               	btfsc	status,2,c
  6522  00082E  EF1B  F004         	goto	u4731
  6523  000832  EF1D  F004         	goto	u4730
  6524  000836                     u4731:
  6525  000836  EF32  F004         	goto	l4091
  6526  00083A                     u4730:
  6527  00083A  283A               	incf	___fldiv@bexp^0,w,c
  6528  00083C  A4D8               	btfss	status,2,c
  6529  00083E  EF23  F004         	goto	u4741
  6530  000842  EF25  F004         	goto	u4740
  6531  000846                     u4741:
  6532  000846  EF2D  F004         	goto	l4087
  6533  00084A                     u4740:
  6534  00084A  0E00               	movlw	0
  6535  00084C  6E23               	movwf	___fldiv@b^0,c
  6536  00084E  0E00               	movlw	0
  6537  000850  6E24               	movwf	(___fldiv@b+1)^0,c
  6538  000852  0E00               	movlw	0
  6539  000854  6E25               	movwf	(___fldiv@b+2)^0,c
  6540  000856  0E00               	movlw	0
  6541  000858  6E26               	movwf	(___fldiv@b+3)^0,c
  6542  00085A                     l4087:
  6543  00085A  8E25               	bsf	(___fldiv@b+2)^0,7,c
  6544  00085C  0E00               	movlw	0
  6545  00085E  6E26               	movwf	(___fldiv@b+3)^0,c
  6546  000860  EF3A  F004         	goto	l4093
  6547  000864                     l4091:
  6548  000864  0E00               	movlw	0
  6549  000866  6E23               	movwf	___fldiv@b^0,c
  6550  000868  0E00               	movlw	0
  6551  00086A  6E24               	movwf	(___fldiv@b+1)^0,c
  6552  00086C  0E00               	movlw	0
  6553  00086E  6E25               	movwf	(___fldiv@b+2)^0,c
  6554  000870  0E00               	movlw	0
  6555  000872  6E26               	movwf	(___fldiv@b+3)^0,c
  6556  000874                     l4093:
  6557  000874  502A               	movf	(___fldiv@a+3)^0,w,c
  6558  000876  0B80               	andlw	128
  6559  000878  1A33               	xorwf	___fldiv@sign^0,f,c
  6560  00087A  502A               	movf	(___fldiv@a+3)^0,w,c
  6561  00087C  242A               	addwf	(___fldiv@a+3)^0,w,c
  6562  00087E  6E3B               	movwf	___fldiv@aexp^0,c
  6563  000880  AE29               	btfss	(___fldiv@a+2)^0,7,c
  6564  000882  EF45  F004         	goto	u4751
  6565  000886  EF47  F004         	goto	u4750
  6566  00088A                     u4751:
  6567  00088A  EF48  F004         	goto	l4101
  6568  00088E                     u4750:
  6569  00088E  803B               	bsf	___fldiv@aexp^0,0,c
  6570  000890                     l4101:
  6571  000890  503B               	movf	___fldiv@aexp^0,w,c
  6572  000892  B4D8               	btfsc	status,2,c
  6573  000894  EF4E  F004         	goto	u4761
  6574  000898  EF50  F004         	goto	u4760
  6575  00089C                     u4761:
  6576  00089C  EF65  F004         	goto	l4111
  6577  0008A0                     u4760:
  6578  0008A0  283B               	incf	___fldiv@aexp^0,w,c
  6579  0008A2  A4D8               	btfss	status,2,c
  6580  0008A4  EF56  F004         	goto	u4771
  6581  0008A8  EF58  F004         	goto	u4770
  6582  0008AC                     u4771:
  6583  0008AC  EF60  F004         	goto	l4107
  6584  0008B0                     u4770:
  6585  0008B0  0E00               	movlw	0
  6586  0008B2  6E27               	movwf	___fldiv@a^0,c
  6587  0008B4  0E00               	movlw	0
  6588  0008B6  6E28               	movwf	(___fldiv@a+1)^0,c
  6589  0008B8  0E00               	movlw	0
  6590  0008BA  6E29               	movwf	(___fldiv@a+2)^0,c
  6591  0008BC  0E00               	movlw	0
  6592  0008BE  6E2A               	movwf	(___fldiv@a+3)^0,c
  6593  0008C0                     l4107:
  6594  0008C0  8E29               	bsf	(___fldiv@a+2)^0,7,c
  6595  0008C2  0E00               	movlw	0
  6596  0008C4  6E2A               	movwf	(___fldiv@a+3)^0,c
  6597  0008C6  EF6D  F004         	goto	l4113
  6598  0008CA                     l4111:
  6599  0008CA  0E00               	movlw	0
  6600  0008CC  6E27               	movwf	___fldiv@a^0,c
  6601  0008CE  0E00               	movlw	0
  6602  0008D0  6E28               	movwf	(___fldiv@a+1)^0,c
  6603  0008D2  0E00               	movlw	0
  6604  0008D4  6E29               	movwf	(___fldiv@a+2)^0,c
  6605  0008D6  0E00               	movlw	0
  6606  0008D8  6E2A               	movwf	(___fldiv@a+3)^0,c
  6607  0008DA                     l4113:
  6608  0008DA  5027               	movf	___fldiv@a^0,w,c
  6609  0008DC  1028               	iorwf	(___fldiv@a+1)^0,w,c
  6610  0008DE  1029               	iorwf	(___fldiv@a+2)^0,w,c
  6611  0008E0  102A               	iorwf	(___fldiv@a+3)^0,w,c
  6612  0008E2  A4D8               	btfss	status,2,c
  6613  0008E4  EF76  F004         	goto	u4781
  6614  0008E8  EF78  F004         	goto	u4780
  6615  0008EC                     u4781:
  6616  0008EC  EF90  F004         	goto	l4125
  6617  0008F0                     u4780:
  6618  0008F0  0E00               	movlw	0
  6619  0008F2  6E23               	movwf	___fldiv@b^0,c
  6620  0008F4  0E00               	movlw	0
  6621  0008F6  6E24               	movwf	(___fldiv@b+1)^0,c
  6622  0008F8  0E00               	movlw	0
  6623  0008FA  6E25               	movwf	(___fldiv@b+2)^0,c
  6624  0008FC  0E00               	movlw	0
  6625  0008FE  6E26               	movwf	(___fldiv@b+3)^0,c
  6626  000900  0E80               	movlw	128
  6627  000902  1225               	iorwf	(___fldiv@b+2)^0,f,c
  6628  000904  0E7F               	movlw	127
  6629  000906  1226               	iorwf	(___fldiv@b+3)^0,f,c
  6630  000908                     l4119:
  6631  000908  5033               	movf	___fldiv@sign^0,w,c
  6632  00090A  1226               	iorwf	(___fldiv@b+3)^0,f,c
  6633  00090C  C023  F023         	movff	___fldiv@b,?___fldiv
  6634  000910  C024  F024         	movff	___fldiv@b+1,?___fldiv+1
  6635  000914  C025  F025         	movff	___fldiv@b+2,?___fldiv+2
  6636  000918  C026  F026         	movff	___fldiv@b+3,?___fldiv+3
  6637  00091C  EFD3  F005         	goto	l1014
  6638  000920                     l4125:
  6639  000920  503A               	movf	___fldiv@bexp^0,w,c
  6640  000922  A4D8               	btfss	status,2,c
  6641  000924  EF96  F004         	goto	u4791
  6642  000928  EF98  F004         	goto	u4790
  6643  00092C                     u4791:
  6644  00092C  EFA2  F004         	goto	l4133
  6645  000930                     u4790:
  6646  000930  0E00               	movlw	0
  6647  000932  6E23               	movwf	?___fldiv^0,c
  6648  000934  0E00               	movlw	0
  6649  000936  6E24               	movwf	(?___fldiv+1)^0,c
  6650  000938  0E00               	movlw	0
  6651  00093A  6E25               	movwf	(?___fldiv+2)^0,c
  6652  00093C  0E00               	movlw	0
  6653  00093E  6E26               	movwf	(?___fldiv+3)^0,c
  6654  000940  EFD3  F005         	goto	l1014
  6655  000944                     l4133:
  6656  000944  503B               	movf	___fldiv@aexp^0,w,c
  6657  000946  C03A  F02B         	movff	___fldiv@bexp,??___fldiv
  6658  00094A  6A2C               	clrf	(??___fldiv+1)^0,c
  6659  00094C  5E2B               	subwf	??___fldiv^0,f,c
  6660  00094E  0E00               	movlw	0
  6661  000950  5A2C               	subwfb	(??___fldiv+1)^0,f,c
  6662  000952  0E7F               	movlw	127
  6663  000954  242B               	addwf	??___fldiv^0,w,c
  6664  000956  6E34               	movwf	___fldiv@new_exp^0,c
  6665  000958  0E00               	movlw	0
  6666  00095A  202C               	addwfc	(??___fldiv+1)^0,w,c
  6667  00095C  6E35               	movwf	(___fldiv@new_exp+1)^0,c
  6668  00095E  C023  F02F         	movff	___fldiv@b,___fldiv@rem
  6669  000962  C024  F030         	movff	___fldiv@b+1,___fldiv@rem+1
  6670  000966  C025  F031         	movff	___fldiv@b+2,___fldiv@rem+2
  6671  00096A  C026  F032         	movff	___fldiv@b+3,___fldiv@rem+3
  6672  00096E  0E00               	movlw	0
  6673  000970  6E23               	movwf	___fldiv@b^0,c
  6674  000972  0E00               	movlw	0
  6675  000974  6E24               	movwf	(___fldiv@b+1)^0,c
  6676  000976  0E00               	movlw	0
  6677  000978  6E25               	movwf	(___fldiv@b+2)^0,c
  6678  00097A  0E00               	movlw	0
  6679  00097C  6E26               	movwf	(___fldiv@b+3)^0,c
  6680  00097E  0E00               	movlw	0
  6681  000980  6E36               	movwf	___fldiv@grs^0,c
  6682  000982  0E00               	movlw	0
  6683  000984  6E37               	movwf	(___fldiv@grs+1)^0,c
  6684  000986  0E00               	movlw	0
  6685  000988  6E38               	movwf	(___fldiv@grs+2)^0,c
  6686  00098A  0E00               	movlw	0
  6687  00098C  6E39               	movwf	(___fldiv@grs+3)^0,c
  6688  00098E  0E00               	movlw	0
  6689  000990  6E3B               	movwf	___fldiv@aexp^0,c
  6690  000992  EF03  F005         	goto	l1016
  6691  000996                     l4143:
  6692  000996  503B               	movf	___fldiv@aexp^0,w,c
  6693  000998  B4D8               	btfsc	status,2,c
  6694  00099A  EFD1  F004         	goto	u4801
  6695  00099E  EFD3  F004         	goto	u4800
  6696  0009A2                     u4801:
  6697  0009A2  EFEA  F004         	goto	l4151
  6698  0009A6                     u4800:
  6699  0009A6  90D8               	bcf	status,0,c
  6700  0009A8  362F               	rlcf	___fldiv@rem^0,f,c
  6701  0009AA  3630               	rlcf	(___fldiv@rem+1)^0,f,c
  6702  0009AC  3631               	rlcf	(___fldiv@rem+2)^0,f,c
  6703  0009AE  3632               	rlcf	(___fldiv@rem+3)^0,f,c
  6704  0009B0  90D8               	bcf	status,0,c
  6705  0009B2  3623               	rlcf	___fldiv@b^0,f,c
  6706  0009B4  3624               	rlcf	(___fldiv@b+1)^0,f,c
  6707  0009B6  3625               	rlcf	(___fldiv@b+2)^0,f,c
  6708  0009B8  3626               	rlcf	(___fldiv@b+3)^0,f,c
  6709  0009BA  AE39               	btfss	(___fldiv@grs+3)^0,7,c
  6710  0009BC  EFE2  F004         	goto	u4811
  6711  0009C0  EFE4  F004         	goto	u4810
  6712  0009C4                     u4811:
  6713  0009C4  EFE5  F004         	goto	l1019
  6714  0009C8                     u4810:
  6715  0009C8  8023               	bsf	___fldiv@b^0,0,c
  6716  0009CA                     l1019:
  6717  0009CA  90D8               	bcf	status,0,c
  6718  0009CC  3636               	rlcf	___fldiv@grs^0,f,c
  6719  0009CE  3637               	rlcf	(___fldiv@grs+1)^0,f,c
  6720  0009D0  3638               	rlcf	(___fldiv@grs+2)^0,f,c
  6721  0009D2  3639               	rlcf	(___fldiv@grs+3)^0,f,c
  6722  0009D4                     l4151:
  6723  0009D4  5027               	movf	___fldiv@a^0,w,c
  6724  0009D6  5C2F               	subwf	___fldiv@rem^0,w,c
  6725  0009D8  5028               	movf	(___fldiv@a+1)^0,w,c
  6726  0009DA  5830               	subwfb	(___fldiv@rem+1)^0,w,c
  6727  0009DC  5029               	movf	(___fldiv@a+2)^0,w,c
  6728  0009DE  5831               	subwfb	(___fldiv@rem+2)^0,w,c
  6729  0009E0  502A               	movf	(___fldiv@a+3)^0,w,c
  6730  0009E2  5832               	subwfb	(___fldiv@rem+3)^0,w,c
  6731  0009E4  A0D8               	btfss	status,0,c
  6732  0009E6  EFF7  F004         	goto	u4821
  6733  0009EA  EFF9  F004         	goto	u4820
  6734  0009EE                     u4821:
  6735  0009EE  EF02  F005         	goto	l4157
  6736  0009F2                     u4820:
  6737  0009F2  8C39               	bsf	(___fldiv@grs+3)^0,6,c
  6738  0009F4  5027               	movf	___fldiv@a^0,w,c
  6739  0009F6  5E2F               	subwf	___fldiv@rem^0,f,c
  6740  0009F8  5028               	movf	(___fldiv@a+1)^0,w,c
  6741  0009FA  5A30               	subwfb	(___fldiv@rem+1)^0,f,c
  6742  0009FC  5029               	movf	(___fldiv@a+2)^0,w,c
  6743  0009FE  5A31               	subwfb	(___fldiv@rem+2)^0,f,c
  6744  000A00  502A               	movf	(___fldiv@a+3)^0,w,c
  6745  000A02  5A32               	subwfb	(___fldiv@rem+3)^0,f,c
  6746  000A04                     l4157:
  6747  000A04  2A3B               	incf	___fldiv@aexp^0,f,c
  6748  000A06                     l1016:
  6749  000A06  0E19               	movlw	25
  6750  000A08  643B               	cpfsgt	___fldiv@aexp^0,c
  6751  000A0A  EF09  F005         	goto	u4831
  6752  000A0E  EF0B  F005         	goto	u4830
  6753  000A12                     u4831:
  6754  000A12  EFCB  F004         	goto	l4143
  6755  000A16                     u4830:
  6756  000A16  502F               	movf	___fldiv@rem^0,w,c
  6757  000A18  1030               	iorwf	(___fldiv@rem+1)^0,w,c
  6758  000A1A  1031               	iorwf	(___fldiv@rem+2)^0,w,c
  6759  000A1C  1032               	iorwf	(___fldiv@rem+3)^0,w,c
  6760  000A1E  B4D8               	btfsc	status,2,c
  6761  000A20  EF14  F005         	goto	u4841
  6762  000A24  EF16  F005         	goto	u4840
  6763  000A28                     u4841:
  6764  000A28  EF2E  F005         	goto	l4169
  6765  000A2C                     u4840:
  6766  000A2C  8036               	bsf	___fldiv@grs^0,0,c
  6767  000A2E  EF2E  F005         	goto	l4169
  6768  000A32                     l4163:
  6769  000A32  90D8               	bcf	status,0,c
  6770  000A34  3623               	rlcf	___fldiv@b^0,f,c
  6771  000A36  3624               	rlcf	(___fldiv@b+1)^0,f,c
  6772  000A38  3625               	rlcf	(___fldiv@b+2)^0,f,c
  6773  000A3A  3626               	rlcf	(___fldiv@b+3)^0,f,c
  6774  000A3C  AE39               	btfss	(___fldiv@grs+3)^0,7,c
  6775  000A3E  EF23  F005         	goto	u4851
  6776  000A42  EF25  F005         	goto	u4850
  6777  000A46                     u4851:
  6778  000A46  EF26  F005         	goto	l1025
  6779  000A4A                     u4850:
  6780  000A4A  8023               	bsf	___fldiv@b^0,0,c
  6781  000A4C                     l1025:
  6782  000A4C  90D8               	bcf	status,0,c
  6783  000A4E  3636               	rlcf	___fldiv@grs^0,f,c
  6784  000A50  3637               	rlcf	(___fldiv@grs+1)^0,f,c
  6785  000A52  3638               	rlcf	(___fldiv@grs+2)^0,f,c
  6786  000A54  3639               	rlcf	(___fldiv@grs+3)^0,f,c
  6787  000A56  0634               	decf	___fldiv@new_exp^0,f,c
  6788  000A58  A0D8               	btfss	status,0,c
  6789  000A5A  0635               	decf	(___fldiv@new_exp+1)^0,f,c
  6790  000A5C                     l4169:
  6791  000A5C  AE25               	btfss	(___fldiv@b+2)^0,7,c
  6792  000A5E  EF33  F005         	goto	u4861
  6793  000A62  EF35  F005         	goto	u4860
  6794  000A66                     u4861:
  6795  000A66  EF19  F005         	goto	l4163
  6796  000A6A                     u4860:
  6797  000A6A  0E00               	movlw	0
  6798  000A6C  6E3B               	movwf	___fldiv@aexp^0,c
  6799  000A6E  AE39               	btfss	(___fldiv@grs+3)^0,7,c
  6800  000A70  EF3C  F005         	goto	u4871
  6801  000A74  EF3E  F005         	goto	u4870
  6802  000A78                     u4871:
  6803  000A78  EF62  F005         	goto	l1027
  6804  000A7C                     u4870:
  6805  000A7C  0EFF               	movlw	255
  6806  000A7E  1436               	andwf	___fldiv@grs^0,w,c
  6807  000A80  6E2B               	movwf	??___fldiv^0,c
  6808  000A82  0EFF               	movlw	255
  6809  000A84  1437               	andwf	(___fldiv@grs+1)^0,w,c
  6810  000A86  6E2C               	movwf	(??___fldiv+1)^0,c
  6811  000A88  0EFF               	movlw	255
  6812  000A8A  1438               	andwf	(___fldiv@grs+2)^0,w,c
  6813  000A8C  6E2D               	movwf	(??___fldiv+2)^0,c
  6814  000A8E  0E7F               	movlw	127
  6815  000A90  1439               	andwf	(___fldiv@grs+3)^0,w,c
  6816  000A92  6E2E               	movwf	(??___fldiv+3)^0,c
  6817  000A94  502B               	movf	??___fldiv^0,w,c
  6818  000A96  102C               	iorwf	(??___fldiv+1)^0,w,c
  6819  000A98  102D               	iorwf	(??___fldiv+2)^0,w,c
  6820  000A9A  102E               	iorwf	(??___fldiv+3)^0,w,c
  6821  000A9C  B4D8               	btfsc	status,2,c
  6822  000A9E  EF53  F005         	goto	u4881
  6823  000AA2  EF55  F005         	goto	u4880
  6824  000AA6                     u4881:
  6825  000AA6  EF59  F005         	goto	l1028
  6826  000AAA                     u4880:
  6827  000AAA                     l4177:
  6828  000AAA  0E01               	movlw	1
  6829  000AAC  6E3B               	movwf	___fldiv@aexp^0,c
  6830  000AAE  EF62  F005         	goto	l1027
  6831  000AB2                     l1028:
  6832  000AB2  A023               	btfss	___fldiv@b^0,0,c
  6833  000AB4  EF5E  F005         	goto	u4891
  6834  000AB8  EF60  F005         	goto	u4890
  6835  000ABC                     u4891:
  6836  000ABC  EF62  F005         	goto	l1027
  6837  000AC0                     u4890:
  6838  000AC0  EF55  F005         	goto	l4177
  6839  000AC4                     l1027:
  6840  000AC4  503B               	movf	___fldiv@aexp^0,w,c
  6841  000AC6  B4D8               	btfsc	status,2,c
  6842  000AC8  EF68  F005         	goto	u4901
  6843  000ACC  EF6A  F005         	goto	u4900
  6844  000AD0                     u4901:
  6845  000AD0  EF8E  F005         	goto	l4189
  6846  000AD4                     u4900:
  6847  000AD4  0E01               	movlw	1
  6848  000AD6  2623               	addwf	___fldiv@b^0,f,c
  6849  000AD8  0E00               	movlw	0
  6850  000ADA  2224               	addwfc	(___fldiv@b+1)^0,f,c
  6851  000ADC  2225               	addwfc	(___fldiv@b+2)^0,f,c
  6852  000ADE  2226               	addwfc	(___fldiv@b+3)^0,f,c
  6853  000AE0  A026               	btfss	(___fldiv@b+3)^0,0,c
  6854  000AE2  EF75  F005         	goto	u4911
  6855  000AE6  EF77  F005         	goto	u4910
  6856  000AEA                     u4911:
  6857  000AEA  EF8E  F005         	goto	l4189
  6858  000AEE                     u4910:
  6859  000AEE  C023  F02B         	movff	___fldiv@b,??___fldiv
  6860  000AF2  C024  F02C         	movff	___fldiv@b+1,??___fldiv+1
  6861  000AF6  C025  F02D         	movff	___fldiv@b+2,??___fldiv+2
  6862  000AFA  C026  F02E         	movff	___fldiv@b+3,??___fldiv+3
  6863  000AFE  342E               	rlcf	(??___fldiv+3)^0,w,c
  6864  000B00  322E               	rrcf	(??___fldiv+3)^0,f,c
  6865  000B02  322D               	rrcf	(??___fldiv+2)^0,f,c
  6866  000B04  322C               	rrcf	(??___fldiv+1)^0,f,c
  6867  000B06  322B               	rrcf	??___fldiv^0,f,c
  6868  000B08  C02B  F023         	movff	??___fldiv,___fldiv@b
  6869  000B0C  C02C  F024         	movff	??___fldiv+1,___fldiv@b+1
  6870  000B10  C02D  F025         	movff	??___fldiv+2,___fldiv@b+2
  6871  000B14  C02E  F026         	movff	??___fldiv+3,___fldiv@b+3
  6872  000B18  4A34               	infsnz	___fldiv@new_exp^0,f,c
  6873  000B1A  2A35               	incf	(___fldiv@new_exp+1)^0,f,c
  6874  000B1C                     l4189:
  6875  000B1C  BE35               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6876  000B1E  EF99  F005         	goto	u4921
  6877  000B22  5035               	movf	(___fldiv@new_exp+1)^0,w,c
  6878  000B24  E108               	bnz	u4920
  6879  000B26  2834               	incf	___fldiv@new_exp^0,w,c
  6880  000B28  A0D8               	btfss	status,0,c
  6881  000B2A  EF99  F005         	goto	u4921
  6882  000B2E  EF9B  F005         	goto	u4920
  6883  000B32                     u4921:
  6884  000B32  EFA6  F005         	goto	l4193
  6885  000B36                     u4920:
  6886  000B36  0E00               	movlw	0
  6887  000B38  6E35               	movwf	(___fldiv@new_exp+1)^0,c
  6888  000B3A  6834               	setf	___fldiv@new_exp^0,c
  6889  000B3C  0E00               	movlw	0
  6890  000B3E  6E23               	movwf	___fldiv@b^0,c
  6891  000B40  0E00               	movlw	0
  6892  000B42  6E24               	movwf	(___fldiv@b+1)^0,c
  6893  000B44  0E00               	movlw	0
  6894  000B46  6E25               	movwf	(___fldiv@b+2)^0,c
  6895  000B48  0E00               	movlw	0
  6896  000B4A  6E26               	movwf	(___fldiv@b+3)^0,c
  6897  000B4C                     l4193:
  6898  000B4C  BE35               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6899  000B4E  EFB3  F005         	goto	u4930
  6900  000B52  5035               	movf	(___fldiv@new_exp+1)^0,w,c
  6901  000B54  E106               	bnz	u4931
  6902  000B56  0434               	decf	___fldiv@new_exp^0,w,c
  6903  000B58  B0D8               	btfsc	status,0,c
  6904  000B5A  EFB1  F005         	goto	u4931
  6905  000B5E  EFB3  F005         	goto	u4930
  6906  000B62                     u4931:
  6907  000B62  EFC1  F005         	goto	l4197
  6908  000B66                     u4930:
  6909  000B66  0E00               	movlw	0
  6910  000B68  6E35               	movwf	(___fldiv@new_exp+1)^0,c
  6911  000B6A  0E00               	movlw	0
  6912  000B6C  6E34               	movwf	___fldiv@new_exp^0,c
  6913  000B6E  0E00               	movlw	0
  6914  000B70  6E23               	movwf	___fldiv@b^0,c
  6915  000B72  0E00               	movlw	0
  6916  000B74  6E24               	movwf	(___fldiv@b+1)^0,c
  6917  000B76  0E00               	movlw	0
  6918  000B78  6E25               	movwf	(___fldiv@b+2)^0,c
  6919  000B7A  0E00               	movlw	0
  6920  000B7C  6E26               	movwf	(___fldiv@b+3)^0,c
  6921  000B7E  0E00               	movlw	0
  6922  000B80  6E33               	movwf	___fldiv@sign^0,c
  6923  000B82                     l4197:
  6924  000B82  C034  F03A         	movff	___fldiv@new_exp,___fldiv@bexp
  6925  000B86  A03A               	btfss	___fldiv@bexp^0,0,c
  6926  000B88  EFC8  F005         	goto	u4941
  6927  000B8C  EFCA  F005         	goto	u4940
  6928  000B90                     u4941:
  6929  000B90  EFCD  F005         	goto	l4203
  6930  000B94                     u4940:
  6931  000B94  8E25               	bsf	(___fldiv@b+2)^0,7,c
  6932  000B96  EFCE  F005         	goto	l4205
  6933  000B9A                     l4203:
  6934  000B9A  9E25               	bcf	(___fldiv@b+2)^0,7,c
  6935  000B9C                     l4205:
  6936  000B9C  90D8               	bcf	status,0,c
  6937  000B9E  303A               	rrcf	___fldiv@bexp^0,w,c
  6938  000BA0  6E26               	movwf	(___fldiv@b+3)^0,c
  6939  000BA2  EF84  F004         	goto	l4119
  6940  000BA6                     l1014:
  6941  000BA6  0012               	return		;funcret
  6942  000BA8                     __end_of___fldiv:
  6943                           	opt callstack 0
  6944                           
  6945 ;; *************** function _ISR *****************
  6946 ;; Defined at:
  6947 ;;		line 104 in file "main.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      void 
  6954 ;; Registers used:
  6955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6961 ;;      Params:         0       0       0       0       0       0       0
  6962 ;;      Locals:         0       0       0       0       0       0       0
  6963 ;;      Temps:          6       0       0       0       0       0       0
  6964 ;;      Totals:         6       0       0       0       0       0       0
  6965 ;;Total ram usage:        6 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    1
  6968 ;; This function calls:
  6969 ;;		_board
  6970 ;;		_move
  6971 ;; This function is called by:
  6972 ;;		Interrupt level 2
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	intcode
  6977  000008                     __pintcode:
  6978                           	opt callstack 0
  6979  000008                     _ISR:
  6980                           	opt callstack 25
  6981                           
  6982                           ;incstack = 0
  6983  000008  826B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6984  00000A  ED05  F00F         	call	int_func,f	;refresh shadow registers
  6985                           
  6986                           	psect	intcode_body
  6987  001E0A                     __pintcode_body:
  6988                           	opt callstack 25
  6989  001E0A                     int_func:
  6990                           	opt callstack 25
  6991  001E0A  0006               	pop		; remove dummy address from shadow register refresh
  6992  001E0C  CFE1 F00F          	movff	fsr1l,??_ISR
  6993  001E10  CFE2 F010          	movff	fsr1h,??_ISR+1
  6994  001E14  CFD9 F011          	movff	fsr2l,??_ISR+2
  6995  001E18  CFDA F012          	movff	fsr2h,??_ISR+3
  6996  001E1C  CFF3 F013          	movff	prodl,??_ISR+4
  6997  001E20  CFF4 F014          	movff	prodh,??_ISR+5
  6998  001E24                     
  6999                           ;main.c: 106:     if(TMR0IF && TMR0IE)
  7000  001E24  A4F2               	btfss	4082,2,c	;volatile
  7001  001E26  EF17  F00F         	goto	i2u353_41
  7002  001E2A  EF19  F00F         	goto	i2u353_40
  7003  001E2E                     i2u353_41:
  7004  001E2E  EF9F  F00F         	goto	i2l125
  7005  001E32                     i2u353_40:
  7006  001E32  AAF2               	btfss	4082,5,c	;volatile
  7007  001E34  EF1E  F00F         	goto	i2u354_41
  7008  001E38  EF20  F00F         	goto	i2u354_40
  7009  001E3C                     i2u354_41:
  7010  001E3C  EF9F  F00F         	goto	i2l125
  7011  001E40                     i2u354_40:
  7012  001E40                     
  7013                           ;main.c: 107:     {;main.c: 108:         TMR0IF = 0;
  7014  001E40  94F2               	bcf	4082,2,c	;volatile
  7015  001E42                     
  7016                           ;main.c: 109:         if(mode==1){
  7017  001E42  045F               	decf	_mode^0,w,c
  7018  001E44  A4D8               	btfss	status,2,c
  7019  001E46  EF27  F00F         	goto	i2u355_41
  7020  001E4A  EF29  F00F         	goto	i2u355_40
  7021  001E4E                     i2u355_41:
  7022  001E4E  EF67  F00F         	goto	i2l3305
  7023  001E52                     i2u355_40:
  7024  001E52                     
  7025                           ;main.c: 110:         if(PORTDbits.RD3)
  7026  001E52  A683               	btfss	131,3,c	;volatile
  7027  001E54  EF2E  F00F         	goto	i2u356_41
  7028  001E58  EF30  F00F         	goto	i2u356_40
  7029  001E5C                     i2u356_41:
  7030  001E5C  EF38  F00F         	goto	i2l112
  7031  001E60                     i2u356_40:
  7032  001E60                     
  7033                           ;main.c: 111:             move(0);
  7034  001E60  0E00               	movlw	0
  7035  001E62  6E02               	movwf	(move@direct+1)^0,c
  7036  001E64  0E00               	movlw	0
  7037  001E66  6E01               	movwf	move@direct^0,c
  7038  001E68  ECD4  F005         	call	_move	;wreg free
  7039  001E6C  EF9E  F00F         	goto	i2l3315
  7040  001E70                     i2l112:
  7041  001E70  A283               	btfss	131,1,c	;volatile
  7042  001E72  EF3D  F00F         	goto	i2u357_41
  7043  001E76  EF3F  F00F         	goto	i2u357_40
  7044  001E7A                     i2u357_41:
  7045  001E7A  EF47  F00F         	goto	i2l114
  7046  001E7E                     i2u357_40:
  7047  001E7E                     
  7048                           ;main.c: 113:             move(1);
  7049  001E7E  0E00               	movlw	0
  7050  001E80  6E02               	movwf	(move@direct+1)^0,c
  7051  001E82  0E01               	movlw	1
  7052  001E84  6E01               	movwf	move@direct^0,c
  7053  001E86  ECD4  F005         	call	_move	;wreg free
  7054  001E8A  EF9E  F00F         	goto	i2l3315
  7055  001E8E                     i2l114:
  7056  001E8E  A083               	btfss	131,0,c	;volatile
  7057  001E90  EF4C  F00F         	goto	i2u358_41
  7058  001E94  EF4E  F00F         	goto	i2u358_40
  7059  001E98                     i2u358_41:
  7060  001E98  EF56  F00F         	goto	i2l116
  7061  001E9C                     i2u358_40:
  7062  001E9C                     
  7063                           ;main.c: 115:             move(2);
  7064  001E9C  0E00               	movlw	0
  7065  001E9E  6E02               	movwf	(move@direct+1)^0,c
  7066  001EA0  0E02               	movlw	2
  7067  001EA2  6E01               	movwf	move@direct^0,c
  7068  001EA4  ECD4  F005         	call	_move	;wreg free
  7069  001EA8  EF9E  F00F         	goto	i2l3315
  7070  001EAC                     i2l116:
  7071  001EAC  A483               	btfss	131,2,c	;volatile
  7072  001EAE  EF5B  F00F         	goto	i2u359_41
  7073  001EB2  EF5D  F00F         	goto	i2u359_40
  7074  001EB6                     i2u359_41:
  7075  001EB6  EF65  F00F         	goto	i2l113
  7076  001EBA                     i2u359_40:
  7077  001EBA                     
  7078                           ;main.c: 117:             move(3);
  7079  001EBA  0E00               	movlw	0
  7080  001EBC  6E02               	movwf	(move@direct+1)^0,c
  7081  001EBE  0E03               	movlw	3
  7082  001EC0  6E01               	movwf	move@direct^0,c
  7083  001EC2  ECD4  F005         	call	_move	;wreg free
  7084  001EC6  EF9E  F00F         	goto	i2l3315
  7085  001ECA                     i2l113:
  7086                           
  7087                           ;main.c: 120:         }
  7088  001ECA  EF9E  F00F         	goto	i2l3315
  7089  001ECE                     i2l3305:
  7090  001ECE  0E02               	movlw	2
  7091  001ED0  185F               	xorwf	_mode^0,w,c
  7092  001ED2  A4D8               	btfss	status,2,c
  7093  001ED4  EF6E  F00F         	goto	i2u360_41
  7094  001ED8  EF70  F00F         	goto	i2u360_40
  7095  001EDC                     i2u360_41:
  7096  001EDC  EF89  F00F         	goto	i2l120
  7097  001EE0                     i2u360_40:
  7098  001EE0                     
  7099                           ;main.c: 122:             board(PORTDbits.RD0,PORTDbits.RD1,PORTDbits.RD3,PORTDbits.RD2)
      +                          ;
  7100  001EE0  0E00               	movlw	0
  7101  001EE2  B283               	btfsc	131,1,c	;volatile
  7102  001EE4  0E01               	movlw	1
  7103  001EE6  6E01               	movwf	board@left_down^0,c
  7104  001EE8  0E00               	movlw	0
  7105  001EEA  B683               	btfsc	131,3,c	;volatile
  7106  001EEC  0E01               	movlw	1
  7107  001EEE  6E02               	movwf	board@right_up^0,c
  7108  001EF0  0E00               	movlw	0
  7109  001EF2  B483               	btfsc	131,2,c	;volatile
  7110  001EF4  0E01               	movlw	1
  7111  001EF6  6E03               	movwf	board@right_down^0,c
  7112  001EF8  B083               	btfsc	131,0,c	;volatile
  7113  001EFA  EF81  F00F         	goto	i2u361_41
  7114  001EFE  EF84  F00F         	goto	i2u361_40
  7115  001F02                     i2u361_41:
  7116  001F02  0E01               	movlw	1
  7117  001F04  EF85  F00F         	goto	i2u361_46
  7118  001F08                     i2u361_40:
  7119  001F08  0E00               	movlw	0
  7120  001F0A                     i2u361_46:
  7121  001F0A  EC96  F007         	call	_board
  7122                           
  7123                           ;main.c: 124:         }
  7124  001F0E  EF9E  F00F         	goto	i2l3315
  7125  001F12                     i2l120:
  7126                           
  7127                           ;main.c: 126:             if(PORTDbits.RD1){
  7128  001F12  A283               	btfss	131,1,c	;volatile
  7129  001F14  EF8E  F00F         	goto	i2u362_41
  7130  001F18  EF90  F00F         	goto	i2u362_40
  7131  001F1C                     i2u362_41:
  7132  001F1C  EF9E  F00F         	goto	i2l3315
  7133  001F20                     i2u362_40:
  7134  001F20                     
  7135                           ;main.c: 127:                 if(select==0){
  7136  001F20  5054               	movf	_select^0,w,c
  7137  001F22  A4D8               	btfss	status,2,c
  7138  001F24  EF96  F00F         	goto	i2u363_41
  7139  001F28  EF98  F00F         	goto	i2u363_40
  7140  001F2C                     i2u363_41:
  7141  001F2C  EF9C  F00F         	goto	i2l3313
  7142  001F30                     i2u363_40:
  7143  001F30                     
  7144                           ;main.c: 128:                     mode=1;
  7145  001F30  0E01               	movlw	1
  7146  001F32  6E5F               	movwf	_mode^0,c
  7147                           
  7148                           ;main.c: 129:                 }
  7149  001F34  EF9E  F00F         	goto	i2l3315
  7150  001F38                     i2l3313:
  7151                           
  7152                           ;main.c: 131:                     mode=2;
  7153  001F38  0E02               	movlw	2
  7154  001F3A  6E5F               	movwf	_mode^0,c
  7155  001F3C                     i2l3315:
  7156                           
  7157                           ;main.c: 147:         TMR0L = 255;
  7158  001F3C  68D6               	setf	214,c	;volatile
  7159  001F3E                     i2l125:
  7160  001F3E  C014  FFF4         	movff	??_ISR+5,prodh
  7161  001F42  C013  FFF3         	movff	??_ISR+4,prodl
  7162  001F46  C012  FFDA         	movff	??_ISR+3,fsr2h
  7163  001F4A  C011  FFD9         	movff	??_ISR+2,fsr2l
  7164  001F4E  C010  FFE2         	movff	??_ISR+1,fsr1h
  7165  001F52  C00F  FFE1         	movff	??_ISR,fsr1l
  7166  001F56  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7167  001F58  0011               	retfie		f
  7168  001F5A                     __end_of_ISR:
  7169                           	opt callstack 0
  7170                           
  7171 ;; *************** function _move *****************
  7172 ;; Defined at:
  7173 ;;		line 125 in file "snake.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  direct          2    0[COMRAM] int 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;  j               2   12[COMRAM] int 
  7178 ;;  i               2   10[COMRAM] int 
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  1    wreg      void 
  7181 ;; Registers used:
  7182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7188 ;;      Params:         2       0       0       0       0       0       0
  7189 ;;      Locals:         4       0       0       0       0       0       0
  7190 ;;      Temps:          8       0       0       0       0       0       0
  7191 ;;      Totals:        14       0       0       0       0       0       0
  7192 ;;Total ram usage:       14 bytes
  7193 ;; Hardware stack levels used:    1
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_ISR
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text29
  7202  000BA8                     __ptext29:
  7203                           	opt callstack 0
  7204  000BA8                     _move:
  7205                           	opt callstack 25
  7206  000BA8                     
  7207                           ;snake.c: 126:     map[player[1]][player[0]]=0;
  7208  000BA8  5061               	movf	(_player+1)^0,w,c
  7209  000BAA  0D10               	mullw	16
  7210  000BAC  0E00               	movlw	low _map
  7211  000BAE  6E03               	movwf	??_move^0,c
  7212  000BB0  0E02               	movlw	high _map
  7213  000BB2  6E04               	movwf	(??_move+1)^0,c
  7214  000BB4  50F3               	movf	243,w,c
  7215  000BB6  2603               	addwf	??_move^0,f,c
  7216  000BB8  50F4               	movf	244,w,c
  7217  000BBA  2204               	addwfc	(??_move+1)^0,f,c
  7218  000BBC  5060               	movf	_player^0,w,c
  7219  000BBE  2403               	addwf	??_move^0,w,c
  7220  000BC0  6ED9               	movwf	fsr2l,c
  7221  000BC2  0E00               	movlw	0
  7222  000BC4  2004               	addwfc	(??_move+1)^0,w,c
  7223  000BC6  6EDA               	movwf	fsr2h,c
  7224  000BC8  0E00               	movlw	0
  7225  000BCA  6EDF               	movwf	indf2,c
  7226                           
  7227                           ;snake.c: 127:  switch(direct){
  7228  000BCC  EFF4  F005         	goto	i2l2621
  7229  000BD0                     i2l2611:
  7230                           
  7231                           ;snake.c: 129:    player[1]-=1;
  7232  000BD0  0661               	decf	(_player+1)^0,f,c
  7233                           
  7234                           ;snake.c: 130:    break;
  7235  000BD2  EF0E  F006         	goto	i2l2623
  7236  000BD6                     i2l2613:
  7237                           
  7238                           ;snake.c: 132:    player[1]+=1;
  7239  000BD6  2A61               	incf	(_player+1)^0,f,c
  7240                           
  7241                           ;snake.c: 133:    break;
  7242  000BD8  EF0E  F006         	goto	i2l2623
  7243  000BDC                     i2l2615:
  7244                           
  7245                           ;snake.c: 135:    player[0]-=1;
  7246  000BDC  0660               	decf	_player^0,f,c
  7247                           
  7248                           ;snake.c: 136:    break;
  7249  000BDE  EF0E  F006         	goto	i2l2623
  7250  000BE2                     i2l2617:
  7251                           
  7252                           ;snake.c: 138:    player[0]+=1;
  7253  000BE2  2A60               	incf	_player^0,f,c
  7254                           
  7255                           ;snake.c: 139:    break;
  7256  000BE4  EF0E  F006         	goto	i2l2623
  7257  000BE8                     i2l2621:
  7258  000BE8  C001  F003         	movff	move@direct,??_move
  7259  000BEC  C002  F004         	movff	move@direct+1,??_move+1
  7260                           
  7261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7262                           ; Switch size 1, requested type "simple"
  7263                           ; Number of cases is 1, Range of values is 0 to 0
  7264                           ; switch strategies available:
  7265                           ; Name         Instructions Cycles
  7266                           ; simple_byte            4     3 (average)
  7267                           ;	Chosen strategy is simple_byte
  7268  000BF0  5004               	movf	(??_move+1)^0,w,c
  7269  000BF2  0A00               	xorlw	0	; case 0
  7270  000BF4  B4D8               	btfsc	status,2,c
  7271  000BF6  EFFF  F005         	goto	i2l4449
  7272  000BFA  EFF1  F005         	goto	i2l2617
  7273  000BFE                     i2l4449:
  7274                           
  7275                           ; Switch size 1, requested type "simple"
  7276                           ; Number of cases is 3, Range of values is 0 to 2
  7277                           ; switch strategies available:
  7278                           ; Name         Instructions Cycles
  7279                           ; simple_byte           10     6 (average)
  7280                           ;	Chosen strategy is simple_byte
  7281  000BFE  5003               	movf	??_move^0,w,c
  7282  000C00  0A00               	xorlw	0	; case 0
  7283  000C02  B4D8               	btfsc	status,2,c
  7284  000C04  EFE8  F005         	goto	i2l2611
  7285  000C08  0A01               	xorlw	1	; case 1
  7286  000C0A  B4D8               	btfsc	status,2,c
  7287  000C0C  EFEB  F005         	goto	i2l2613
  7288  000C10  0A03               	xorlw	3	; case 2
  7289  000C12  B4D8               	btfsc	status,2,c
  7290  000C14  EFEE  F005         	goto	i2l2615
  7291  000C18  EFF1  F005         	goto	i2l2617
  7292  000C1C                     i2l2623:
  7293                           
  7294                           ;snake.c: 141:     map[player[1]][player[0]]=1;
  7295  000C1C  5061               	movf	(_player+1)^0,w,c
  7296  000C1E  0D10               	mullw	16
  7297  000C20  0E00               	movlw	low _map
  7298  000C22  6E03               	movwf	??_move^0,c
  7299  000C24  0E02               	movlw	high _map
  7300  000C26  6E04               	movwf	(??_move+1)^0,c
  7301  000C28  50F3               	movf	243,w,c
  7302  000C2A  2603               	addwf	??_move^0,f,c
  7303  000C2C  50F4               	movf	244,w,c
  7304  000C2E  2204               	addwfc	(??_move+1)^0,f,c
  7305  000C30  5060               	movf	_player^0,w,c
  7306  000C32  2403               	addwf	??_move^0,w,c
  7307  000C34  6ED9               	movwf	fsr2l,c
  7308  000C36  0E00               	movlw	0
  7309  000C38  2004               	addwfc	(??_move+1)^0,w,c
  7310  000C3A  6EDA               	movwf	fsr2h,c
  7311  000C3C  0E01               	movlw	1
  7312  000C3E  6EDF               	movwf	indf2,c
  7313  000C40                     
  7314                           ;snake.c: 142:     int i,j;;snake.c: 143:     for(j=0;j<6;++j){
  7315  000C40  0E00               	movlw	0
  7316  000C42  6E0E               	movwf	(move@j+1)^0,c
  7317  000C44  0E00               	movlw	0
  7318  000C46  6E0D               	movwf	move@j^0,c
  7319  000C48                     i2l2631:
  7320                           
  7321                           ;snake.c: 144:         for(i=0;i<3;++i){
  7322  000C48  0E00               	movlw	0
  7323  000C4A  6E0C               	movwf	(move@i+1)^0,c
  7324  000C4C  0E00               	movlw	0
  7325  000C4E  6E0B               	movwf	move@i^0,c
  7326  000C50                     i2l337:
  7327                           
  7328                           ;snake.c: 145:             if(j%2==0){
  7329  000C50  B00D               	btfsc	move@j^0,0,c
  7330  000C52  EF2D  F006         	goto	i2u248_41
  7331  000C56  EF2F  F006         	goto	i2u248_40
  7332  000C5A                     i2u248_41:
  7333  000C5A  EFD6  F006         	goto	i2l2647
  7334  000C5E                     i2u248_40:
  7335  000C5E                     
  7336                           ;snake.c: 146:     if(car[j][0]-i<=15){
  7337  000C5E  0EC0               	movlw	low _car
  7338  000C60  6E03               	movwf	??_move^0,c
  7339  000C62  0E00               	movlw	high _car
  7340  000C64  6E04               	movwf	(??_move+1)^0,c
  7341  000C66  90D8               	bcf	status,0,c
  7342  000C68  340D               	rlcf	move@j^0,w,c
  7343  000C6A  6ED9               	movwf	fsr2l,c
  7344  000C6C  340E               	rlcf	(move@j+1)^0,w,c
  7345  000C6E  6EDA               	movwf	fsr2h,c
  7346  000C70  90D8               	bcf	status,0,c
  7347  000C72  36D9               	rlcf	fsr2l,f,c
  7348  000C74  36DA               	rlcf	fsr2h,f,c
  7349  000C76  5003               	movf	??_move^0,w,c
  7350  000C78  26D9               	addwf	fsr2l,f,c
  7351  000C7A  5004               	movf	(??_move+1)^0,w,c
  7352  000C7C  22DA               	addwfc	fsr2h,f,c
  7353  000C7E  CFDE F005          	movff	postinc2,??_move+2
  7354  000C82  CFDD F006          	movff	postdec2,??_move+3
  7355  000C86  500B               	movf	move@i^0,w,c
  7356  000C88  5E05               	subwf	(??_move+2)^0,f,c
  7357  000C8A  500C               	movf	(move@i+1)^0,w,c
  7358  000C8C  5A06               	subwfb	(??_move+3)^0,f,c
  7359  000C8E  BE06               	btfsc	(??_move+3)^0,7,c
  7360  000C90  EF55  F006         	goto	i2u249_40
  7361  000C94  5006               	movf	(??_move+3)^0,w,c
  7362  000C96  E107               	bnz	i2u249_41
  7363  000C98  0E10               	movlw	16
  7364  000C9A  5C05               	subwf	(??_move+2)^0,w,c
  7365  000C9C  B0D8               	btfsc	status,0,c
  7366  000C9E  EF53  F006         	goto	i2u249_41
  7367  000CA2  EF55  F006         	goto	i2u249_40
  7368  000CA6                     i2u249_41:
  7369  000CA6  EF75  F007         	goto	i2l2657
  7370  000CAA                     i2u249_40:
  7371  000CAA                     
  7372                           ;snake.c: 147:      map[2+2*j][car[j][0]-i]=1;
  7373  000CAA  0EC0               	movlw	low _car
  7374  000CAC  6E03               	movwf	??_move^0,c
  7375  000CAE  0E00               	movlw	high _car
  7376  000CB0  6E04               	movwf	(??_move+1)^0,c
  7377  000CB2  90D8               	bcf	status,0,c
  7378  000CB4  340D               	rlcf	move@j^0,w,c
  7379  000CB6  6ED9               	movwf	fsr2l,c
  7380  000CB8  340E               	rlcf	(move@j+1)^0,w,c
  7381  000CBA  6EDA               	movwf	fsr2h,c
  7382  000CBC  90D8               	bcf	status,0,c
  7383  000CBE  36D9               	rlcf	fsr2l,f,c
  7384  000CC0  36DA               	rlcf	fsr2h,f,c
  7385  000CC2  5003               	movf	??_move^0,w,c
  7386  000CC4  26D9               	addwf	fsr2l,f,c
  7387  000CC6  5004               	movf	(??_move+1)^0,w,c
  7388  000CC8  22DA               	addwfc	fsr2h,f,c
  7389  000CCA  CFDE F005          	movff	postinc2,??_move+2
  7390  000CCE  CFDD F006          	movff	postdec2,??_move+3
  7391  000CD2  C00D  F007         	movff	move@j,??_move+4
  7392  000CD6  C00E  F008         	movff	move@j+1,??_move+5
  7393  000CDA  90D8               	bcf	status,0,c
  7394  000CDC  3607               	rlcf	(??_move+4)^0,f,c
  7395  000CDE  3608               	rlcf	(??_move+5)^0,f,c
  7396  000CE0  3A07               	swapf	(??_move+4)^0,f,c
  7397  000CE2  3A08               	swapf	(??_move+5)^0,f,c
  7398  000CE4  0EF0               	movlw	240
  7399  000CE6  1608               	andwf	(??_move+5)^0,f,c
  7400  000CE8  5007               	movf	(??_move+4)^0,w,c
  7401  000CEA  0B0F               	andlw	15
  7402  000CEC  1208               	iorwf	(??_move+5)^0,f,c
  7403  000CEE  0EF0               	movlw	240
  7404  000CF0  1607               	andwf	(??_move+4)^0,f,c
  7405  000CF2  0E00               	movlw	low _map
  7406  000CF4  6E09               	movwf	(??_move+6)^0,c
  7407  000CF6  0E02               	movlw	high _map
  7408  000CF8  6E0A               	movwf	(??_move+7)^0,c
  7409  000CFA  0E20               	movlw	32
  7410  000CFC  2609               	addwf	(??_move+6)^0,f,c
  7411  000CFE  0E00               	movlw	0
  7412  000D00  220A               	addwfc	(??_move+7)^0,f,c
  7413  000D02  5007               	movf	(??_move+4)^0,w,c
  7414  000D04  2609               	addwf	(??_move+6)^0,f,c
  7415  000D06  5008               	movf	(??_move+5)^0,w,c
  7416  000D08  220A               	addwfc	(??_move+7)^0,f,c
  7417  000D0A  500B               	movf	move@i^0,w,c
  7418  000D0C  5E09               	subwf	(??_move+6)^0,f,c
  7419  000D0E  500C               	movf	(move@i+1)^0,w,c
  7420  000D10  5A0A               	subwfb	(??_move+7)^0,f,c
  7421  000D12  5005               	movf	(??_move+2)^0,w,c
  7422  000D14  2409               	addwf	(??_move+6)^0,w,c
  7423  000D16  6ED9               	movwf	fsr2l,c
  7424  000D18  5006               	movf	(??_move+3)^0,w,c
  7425  000D1A  200A               	addwfc	(??_move+7)^0,w,c
  7426  000D1C  6EDA               	movwf	fsr2h,c
  7427  000D1E  0E01               	movlw	1
  7428  000D20  6EDF               	movwf	indf2,c
  7429  000D22                     
  7430                           ;snake.c: 148:      if(player[1]==2+2*j && player[0]==car[j][0]-i)
  7431  000D22  5061               	movf	(_player+1)^0,w,c
  7432  000D24  6E03               	movwf	??_move^0,c
  7433  000D26  6A04               	clrf	(??_move+1)^0,c
  7434  000D28  C00D  F005         	movff	move@j,??_move+2
  7435  000D2C  C00E  F006         	movff	move@j+1,??_move+3
  7436  000D30  90D8               	bcf	status,0,c
  7437  000D32  3605               	rlcf	(??_move+2)^0,f,c
  7438  000D34  3606               	rlcf	(??_move+3)^0,f,c
  7439  000D36  0E02               	movlw	2
  7440  000D38  2605               	addwf	(??_move+2)^0,f,c
  7441  000D3A  0E00               	movlw	0
  7442  000D3C  2206               	addwfc	(??_move+3)^0,f,c
  7443  000D3E  5003               	movf	??_move^0,w,c
  7444  000D40  1805               	xorwf	(??_move+2)^0,w,c
  7445  000D42  E107               	bnz	i2u250_41
  7446  000D44  5004               	movf	(??_move+1)^0,w,c
  7447  000D46  1806               	xorwf	(??_move+3)^0,w,c
  7448  000D48  A4D8               	btfss	status,2,c
  7449  000D4A  EFA9  F006         	goto	i2u250_41
  7450  000D4E  EFAB  F006         	goto	i2u250_40
  7451  000D52                     i2u250_41:
  7452  000D52  EF75  F007         	goto	i2l2657
  7453  000D56                     i2u250_40:
  7454  000D56  0EC0               	movlw	low _car
  7455  000D58  6E03               	movwf	??_move^0,c
  7456  000D5A  0E00               	movlw	high _car
  7457  000D5C  6E04               	movwf	(??_move+1)^0,c
  7458  000D5E  90D8               	bcf	status,0,c
  7459  000D60  340D               	rlcf	move@j^0,w,c
  7460  000D62  6ED9               	movwf	fsr2l,c
  7461  000D64  340E               	rlcf	(move@j+1)^0,w,c
  7462  000D66  6EDA               	movwf	fsr2h,c
  7463  000D68  90D8               	bcf	status,0,c
  7464  000D6A  36D9               	rlcf	fsr2l,f,c
  7465  000D6C  36DA               	rlcf	fsr2h,f,c
  7466  000D6E  5003               	movf	??_move^0,w,c
  7467  000D70  26D9               	addwf	fsr2l,f,c
  7468  000D72  5004               	movf	(??_move+1)^0,w,c
  7469  000D74  22DA               	addwfc	fsr2h,f,c
  7470  000D76  CFDE F005          	movff	postinc2,??_move+2
  7471  000D7A  CFDD F006          	movff	postdec2,??_move+3
  7472  000D7E  500B               	movf	move@i^0,w,c
  7473  000D80  5E05               	subwf	(??_move+2)^0,f,c
  7474  000D82  500C               	movf	(move@i+1)^0,w,c
  7475  000D84  5A06               	subwfb	(??_move+3)^0,f,c
  7476  000D86  5060               	movf	_player^0,w,c
  7477  000D88  6E07               	movwf	(??_move+4)^0,c
  7478  000D8A  6A08               	clrf	(??_move+5)^0,c
  7479  000D8C  5005               	movf	(??_move+2)^0,w,c
  7480  000D8E  1807               	xorwf	(??_move+4)^0,w,c
  7481  000D90  E107               	bnz	i2u251_41
  7482  000D92  5006               	movf	(??_move+3)^0,w,c
  7483  000D94  1808               	xorwf	(??_move+5)^0,w,c
  7484  000D96  A4D8               	btfss	status,2,c
  7485  000D98  EFD0  F006         	goto	i2u251_41
  7486  000D9C  EFD2  F006         	goto	i2u251_40
  7487  000DA0                     i2u251_41:
  7488  000DA0  EF75  F007         	goto	i2l2657
  7489  000DA4                     i2u251_40:
  7490  000DA4                     i2l2645:
  7491                           
  7492                           ;snake.c: 149:       error=1;
  7493  000DA4  0E01               	movlw	1
  7494  000DA6  6E56               	movwf	_error^0,c
  7495  000DA8  EF75  F007         	goto	i2l2657
  7496  000DAC                     i2l2647:
  7497                           
  7498                           ;snake.c: 153:     if(car[j][0]+i>=0){
  7499  000DAC  0EC0               	movlw	low _car
  7500  000DAE  6E03               	movwf	??_move^0,c
  7501  000DB0  0E00               	movlw	high _car
  7502  000DB2  6E04               	movwf	(??_move+1)^0,c
  7503  000DB4  90D8               	bcf	status,0,c
  7504  000DB6  340D               	rlcf	move@j^0,w,c
  7505  000DB8  6ED9               	movwf	fsr2l,c
  7506  000DBA  340E               	rlcf	(move@j+1)^0,w,c
  7507  000DBC  6EDA               	movwf	fsr2h,c
  7508  000DBE  90D8               	bcf	status,0,c
  7509  000DC0  36D9               	rlcf	fsr2l,f,c
  7510  000DC2  36DA               	rlcf	fsr2h,f,c
  7511  000DC4  5003               	movf	??_move^0,w,c
  7512  000DC6  26D9               	addwf	fsr2l,f,c
  7513  000DC8  5004               	movf	(??_move+1)^0,w,c
  7514  000DCA  22DA               	addwfc	fsr2h,f,c
  7515  000DCC  CFDE F005          	movff	postinc2,??_move+2
  7516  000DD0  CFDD F006          	movff	postdec2,??_move+3
  7517  000DD4  500B               	movf	move@i^0,w,c
  7518  000DD6  2405               	addwf	(??_move+2)^0,w,c
  7519  000DD8  500C               	movf	(move@i+1)^0,w,c
  7520  000DDA  2006               	addwfc	(??_move+3)^0,w,c
  7521  000DDC  0B80               	andlw	128
  7522  000DDE  A4D8               	btfss	status,2,c
  7523  000DE0  EFF4  F006         	goto	i2u252_41
  7524  000DE4  EFF6  F006         	goto	i2u252_40
  7525  000DE8                     i2u252_41:
  7526  000DE8  EF75  F007         	goto	i2l2657
  7527  000DEC                     i2u252_40:
  7528  000DEC                     
  7529                           ;snake.c: 154:      map[2+2*j][car[j][0]+i]=1;
  7530  000DEC  0EC0               	movlw	low _car
  7531  000DEE  6E03               	movwf	??_move^0,c
  7532  000DF0  0E00               	movlw	high _car
  7533  000DF2  6E04               	movwf	(??_move+1)^0,c
  7534  000DF4  90D8               	bcf	status,0,c
  7535  000DF6  340D               	rlcf	move@j^0,w,c
  7536  000DF8  6ED9               	movwf	fsr2l,c
  7537  000DFA  340E               	rlcf	(move@j+1)^0,w,c
  7538  000DFC  6EDA               	movwf	fsr2h,c
  7539  000DFE  90D8               	bcf	status,0,c
  7540  000E00  36D9               	rlcf	fsr2l,f,c
  7541  000E02  36DA               	rlcf	fsr2h,f,c
  7542  000E04  5003               	movf	??_move^0,w,c
  7543  000E06  26D9               	addwf	fsr2l,f,c
  7544  000E08  5004               	movf	(??_move+1)^0,w,c
  7545  000E0A  22DA               	addwfc	fsr2h,f,c
  7546  000E0C  CFDE F005          	movff	postinc2,??_move+2
  7547  000E10  CFDD F006          	movff	postdec2,??_move+3
  7548  000E14  C00D  F007         	movff	move@j,??_move+4
  7549  000E18  C00E  F008         	movff	move@j+1,??_move+5
  7550  000E1C  90D8               	bcf	status,0,c
  7551  000E1E  3607               	rlcf	(??_move+4)^0,f,c
  7552  000E20  3608               	rlcf	(??_move+5)^0,f,c
  7553  000E22  3A07               	swapf	(??_move+4)^0,f,c
  7554  000E24  3A08               	swapf	(??_move+5)^0,f,c
  7555  000E26  0EF0               	movlw	240
  7556  000E28  1608               	andwf	(??_move+5)^0,f,c
  7557  000E2A  5007               	movf	(??_move+4)^0,w,c
  7558  000E2C  0B0F               	andlw	15
  7559  000E2E  1208               	iorwf	(??_move+5)^0,f,c
  7560  000E30  0EF0               	movlw	240
  7561  000E32  1607               	andwf	(??_move+4)^0,f,c
  7562  000E34  0E00               	movlw	low _map
  7563  000E36  6E09               	movwf	(??_move+6)^0,c
  7564  000E38  0E02               	movlw	high _map
  7565  000E3A  6E0A               	movwf	(??_move+7)^0,c
  7566  000E3C  0E20               	movlw	32
  7567  000E3E  2609               	addwf	(??_move+6)^0,f,c
  7568  000E40  0E00               	movlw	0
  7569  000E42  220A               	addwfc	(??_move+7)^0,f,c
  7570  000E44  5007               	movf	(??_move+4)^0,w,c
  7571  000E46  2609               	addwf	(??_move+6)^0,f,c
  7572  000E48  5008               	movf	(??_move+5)^0,w,c
  7573  000E4A  220A               	addwfc	(??_move+7)^0,f,c
  7574  000E4C  5005               	movf	(??_move+2)^0,w,c
  7575  000E4E  2609               	addwf	(??_move+6)^0,f,c
  7576  000E50  5006               	movf	(??_move+3)^0,w,c
  7577  000E52  220A               	addwfc	(??_move+7)^0,f,c
  7578  000E54  500B               	movf	move@i^0,w,c
  7579  000E56  2409               	addwf	(??_move+6)^0,w,c
  7580  000E58  6ED9               	movwf	fsr2l,c
  7581  000E5A  500C               	movf	(move@i+1)^0,w,c
  7582  000E5C  200A               	addwfc	(??_move+7)^0,w,c
  7583  000E5E  6EDA               	movwf	fsr2h,c
  7584  000E60  0E01               	movlw	1
  7585  000E62  6EDF               	movwf	indf2,c
  7586  000E64                     
  7587                           ;snake.c: 155:      if(player[1]==2+2*j && player[0]==car[j][0]+i)
  7588  000E64  5061               	movf	(_player+1)^0,w,c
  7589  000E66  6E03               	movwf	??_move^0,c
  7590  000E68  6A04               	clrf	(??_move+1)^0,c
  7591  000E6A  C00D  F005         	movff	move@j,??_move+2
  7592  000E6E  C00E  F006         	movff	move@j+1,??_move+3
  7593  000E72  90D8               	bcf	status,0,c
  7594  000E74  3605               	rlcf	(??_move+2)^0,f,c
  7595  000E76  3606               	rlcf	(??_move+3)^0,f,c
  7596  000E78  0E02               	movlw	2
  7597  000E7A  2605               	addwf	(??_move+2)^0,f,c
  7598  000E7C  0E00               	movlw	0
  7599  000E7E  2206               	addwfc	(??_move+3)^0,f,c
  7600  000E80  5003               	movf	??_move^0,w,c
  7601  000E82  1805               	xorwf	(??_move+2)^0,w,c
  7602  000E84  E107               	bnz	i2u253_41
  7603  000E86  5004               	movf	(??_move+1)^0,w,c
  7604  000E88  1806               	xorwf	(??_move+3)^0,w,c
  7605  000E8A  A4D8               	btfss	status,2,c
  7606  000E8C  EF4A  F007         	goto	i2u253_41
  7607  000E90  EF4C  F007         	goto	i2u253_40
  7608  000E94                     i2u253_41:
  7609  000E94  EF75  F007         	goto	i2l2657
  7610  000E98                     i2u253_40:
  7611  000E98  5060               	movf	_player^0,w,c
  7612  000E9A  6E03               	movwf	??_move^0,c
  7613  000E9C  6A04               	clrf	(??_move+1)^0,c
  7614  000E9E  0EC0               	movlw	low _car
  7615  000EA0  6E05               	movwf	(??_move+2)^0,c
  7616  000EA2  0E00               	movlw	high _car
  7617  000EA4  6E06               	movwf	(??_move+3)^0,c
  7618  000EA6  90D8               	bcf	status,0,c
  7619  000EA8  340D               	rlcf	move@j^0,w,c
  7620  000EAA  6ED9               	movwf	fsr2l,c
  7621  000EAC  340E               	rlcf	(move@j+1)^0,w,c
  7622  000EAE  6EDA               	movwf	fsr2h,c
  7623  000EB0  90D8               	bcf	status,0,c
  7624  000EB2  36D9               	rlcf	fsr2l,f,c
  7625  000EB4  36DA               	rlcf	fsr2h,f,c
  7626  000EB6  5005               	movf	(??_move+2)^0,w,c
  7627  000EB8  26D9               	addwf	fsr2l,f,c
  7628  000EBA  5006               	movf	(??_move+3)^0,w,c
  7629  000EBC  22DA               	addwfc	fsr2h,f,c
  7630  000EBE  CFDE F007          	movff	postinc2,??_move+4
  7631  000EC2  CFDD F008          	movff	postdec2,??_move+5
  7632  000EC6  500B               	movf	move@i^0,w,c
  7633  000EC8  2607               	addwf	(??_move+4)^0,f,c
  7634  000ECA  500C               	movf	(move@i+1)^0,w,c
  7635  000ECC  2208               	addwfc	(??_move+5)^0,f,c
  7636  000ECE  5003               	movf	??_move^0,w,c
  7637  000ED0  1807               	xorwf	(??_move+4)^0,w,c
  7638  000ED2  E107               	bnz	i2u254_41
  7639  000ED4  5004               	movf	(??_move+1)^0,w,c
  7640  000ED6  1808               	xorwf	(??_move+5)^0,w,c
  7641  000ED8  A4D8               	btfss	status,2,c
  7642  000EDA  EF71  F007         	goto	i2u254_41
  7643  000EDE  EF73  F007         	goto	i2u254_40
  7644  000EE2                     i2u254_41:
  7645  000EE2  EF75  F007         	goto	i2l2657
  7646  000EE6                     i2u254_40:
  7647  000EE6  EFD2  F006         	goto	i2l2645
  7648  000EEA                     i2l2657:
  7649                           
  7650                           ;snake.c: 159:         }
  7651  000EEA  4A0B               	infsnz	move@i^0,f,c
  7652  000EEC  2A0C               	incf	(move@i+1)^0,f,c
  7653  000EEE  BE0C               	btfsc	(move@i+1)^0,7,c
  7654  000EF0  EF83  F007         	goto	i2u255_41
  7655  000EF4  500C               	movf	(move@i+1)^0,w,c
  7656  000EF6  E109               	bnz	i2u255_40
  7657  000EF8  0E03               	movlw	3
  7658  000EFA  5C0B               	subwf	move@i^0,w,c
  7659  000EFC  A0D8               	btfss	status,0,c
  7660  000EFE  EF83  F007         	goto	i2u255_41
  7661  000F02  EF85  F007         	goto	i2u255_40
  7662  000F06                     i2u255_41:
  7663  000F06  EF28  F006         	goto	i2l337
  7664  000F0A                     i2u255_40:
  7665  000F0A                     
  7666                           ;snake.c: 160:     }
  7667  000F0A  4A0D               	infsnz	move@j^0,f,c
  7668  000F0C  2A0E               	incf	(move@j+1)^0,f,c
  7669  000F0E  BE0E               	btfsc	(move@j+1)^0,7,c
  7670  000F10  EF93  F007         	goto	i2u256_41
  7671  000F14  500E               	movf	(move@j+1)^0,w,c
  7672  000F16  E109               	bnz	i2u256_40
  7673  000F18  0E06               	movlw	6
  7674  000F1A  5C0D               	subwf	move@j^0,w,c
  7675  000F1C  A0D8               	btfss	status,0,c
  7676  000F1E  EF93  F007         	goto	i2u256_41
  7677  000F22  EF95  F007         	goto	i2u256_40
  7678  000F26                     i2u256_41:
  7679  000F26  EF24  F006         	goto	i2l2631
  7680  000F2A                     i2u256_40:
  7681  000F2A  0012               	return		;funcret
  7682  000F2C                     __end_of_move:
  7683                           	opt callstack 0
  7684                           
  7685 ;; *************** function _board *****************
  7686 ;; Defined at:
  7687 ;;		line 122 in file "ball.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  left_up         1    wreg     unsigned char 
  7690 ;;  left_down       1    0[COMRAM] unsigned char 
  7691 ;;  right_up        1    1[COMRAM] unsigned char 
  7692 ;;  right_down      1    2[COMRAM] unsigned char 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;  left_up         1    5[COMRAM] unsigned char 
  7695 ;;  i               2    8[COMRAM] int 
  7696 ;;  k               2    6[COMRAM] int 
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  1    wreg      void 
  7699 ;; Registers used:
  7700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7701 ;; Tracked objects:
  7702 ;;		On entry : 0/0
  7703 ;;		On exit  : 0/0
  7704 ;;		Unchanged: 0/0
  7705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7706 ;;      Params:         3       0       0       0       0       0       0
  7707 ;;      Locals:         5       0       0       0       0       0       0
  7708 ;;      Temps:          2       0       0       0       0       0       0
  7709 ;;      Totals:        10       0       0       0       0       0       0
  7710 ;;Total ram usage:       10 bytes
  7711 ;; Hardware stack levels used:    1
  7712 ;; This function calls:
  7713 ;;		Nothing
  7714 ;; This function is called by:
  7715 ;;		_ISR
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text30
  7720  000F2C                     __ptext30:
  7721                           	opt callstack 0
  7722  000F2C                     _board:
  7723                           	opt callstack 25
  7724                           
  7725                           ;incstack = 0
  7726                           ;board@left_up stored from wreg
  7727  000F2C  6E06               	movwf	board@left_up^0,c
  7728  000F2E                     
  7729                           ;ball.c: 122: void board(unsigned char left_up,unsigned char left_down,unsigned char rig
      +                          ht_up,unsigned char right_down);ball.c: 123: {;ball.c: 124:     int i;;ball.c: 131:  if(
      +                          left_up == 1)
  7730  000F2E  0406               	decf	board@left_up^0,w,c
  7731  000F30  A4D8               	btfss	status,2,c
  7732  000F32  EF9D  F007         	goto	i2u257_41
  7733  000F36  EF9F  F007         	goto	i2u257_40
  7734  000F3A                     i2u257_41:
  7735  000F3A  EFE1  F007         	goto	i2l2689
  7736  000F3E                     i2u257_40:
  7737  000F3E                     
  7738                           ;ball.c: 132:  {;ball.c: 133:   if(left_board[0] != 1)
  7739  000F3E  0100               	movlb	0	; () banked
  7740  000F40  05A0               	decf	_left_board& (0+255),w,b
  7741  000F42  11A1               	iorwf	(_left_board+1)& (0+255),w,b
  7742  000F44  B4D8               	btfsc	status,2,c
  7743  000F46  EFA7  F007         	goto	i2u258_41
  7744  000F4A  EFA9  F007         	goto	i2u258_40
  7745  000F4E                     i2u258_41:
  7746  000F4E  EFE1  F007         	goto	i2l2689
  7747  000F52                     i2u258_40:
  7748  000F52                     
  7749                           ; BSR set to: 0
  7750                           ;ball.c: 134:   {;ball.c: 135:    for(i=0;i<15;i++)
  7751  000F52  0E00               	movlw	0
  7752  000F54  6E0A               	movwf	(board@i+1)^0,c
  7753  000F56  0E00               	movlw	0
  7754  000F58  6E09               	movwf	board@i^0,c
  7755  000F5A                     i2l2679:
  7756                           
  7757                           ;ball.c: 136:    {;ball.c: 137:     left_board[i] = left_board[i+1];
  7758  000F5A  90D8               	bcf	status,0,c
  7759  000F5C  3409               	rlcf	board@i^0,w,c
  7760  000F5E  6ED9               	movwf	fsr2l,c
  7761  000F60  340A               	rlcf	(board@i+1)^0,w,c
  7762  000F62  6EDA               	movwf	fsr2h,c
  7763  000F64  0EA2               	movlw	low (_left_board+2)
  7764  000F66  26D9               	addwf	fsr2l,f,c
  7765  000F68  0E00               	movlw	high (_left_board+2)
  7766  000F6A  22DA               	addwfc	fsr2h,f,c
  7767  000F6C  90D8               	bcf	status,0,c
  7768  000F6E  3409               	rlcf	board@i^0,w,c
  7769  000F70  6EE1               	movwf	fsr1l,c
  7770  000F72  340A               	rlcf	(board@i+1)^0,w,c
  7771  000F74  6EE2               	movwf	fsr1h,c
  7772  000F76  0EA0               	movlw	low _left_board
  7773  000F78  26E1               	addwf	fsr1l,f,c
  7774  000F7A  0E00               	movlw	high _left_board
  7775  000F7C  22E2               	addwfc	fsr1h,f,c
  7776  000F7E  CFDE FFE6          	movff	postinc2,postinc1
  7777  000F82  CFDD FFE5          	movff	postdec2,postdec1
  7778  000F86                     
  7779                           ;ball.c: 138:    }
  7780  000F86  4A09               	infsnz	board@i^0,f,c
  7781  000F88  2A0A               	incf	(board@i+1)^0,f,c
  7782  000F8A  BE0A               	btfsc	(board@i+1)^0,7,c
  7783  000F8C  EFD1  F007         	goto	i2u259_41
  7784  000F90  500A               	movf	(board@i+1)^0,w,c
  7785  000F92  E109               	bnz	i2u259_40
  7786  000F94  0E0F               	movlw	15
  7787  000F96  5C09               	subwf	board@i^0,w,c
  7788  000F98  A0D8               	btfss	status,0,c
  7789  000F9A  EFD1  F007         	goto	i2u259_41
  7790  000F9E  EFD3  F007         	goto	i2u259_40
  7791  000FA2                     i2u259_41:
  7792  000FA2  EFAD  F007         	goto	i2l2679
  7793  000FA6                     i2u259_40:
  7794  000FA6                     
  7795                           ;ball.c: 139:             if(left_board[15]==1)
  7796  000FA6  0100               	movlb	0	; () banked
  7797  000FA8  05BE               	decf	(_left_board+30)& (0+255),w,b
  7798  000FAA  11BF               	iorwf	(_left_board+31)& (0+255),w,b
  7799  000FAC  A4D8               	btfss	status,2,c
  7800  000FAE  EFDB  F007         	goto	i2u260_41
  7801  000FB2  EFDD  F007         	goto	i2u260_40
  7802  000FB6                     i2u260_41:
  7803  000FB6  EFE1  F007         	goto	i2l2689
  7804  000FBA                     i2u260_40:
  7805  000FBA                     
  7806                           ; BSR set to: 0
  7807                           ;ball.c: 140:                 left_board[15]=0;
  7808  000FBA  0E00               	movlw	0
  7809  000FBC  6FBF               	movwf	(_left_board+31)& (0+255),b
  7810  000FBE  0E00               	movlw	0
  7811  000FC0  6FBE               	movwf	(_left_board+30)& (0+255),b
  7812  000FC2                     i2l2689:
  7813                           
  7814                           ;ball.c: 143:     if(left_down == 1)
  7815  000FC2  0401               	decf	board@left_down^0,w,c
  7816  000FC4  A4D8               	btfss	status,2,c
  7817  000FC6  EFE7  F007         	goto	i2u261_41
  7818  000FCA  EFE9  F007         	goto	i2u261_40
  7819  000FCE                     i2u261_41:
  7820  000FCE  EF2B  F008         	goto	i2l2709
  7821  000FD2                     i2u261_40:
  7822  000FD2                     
  7823                           ;ball.c: 144:     {;ball.c: 145:         if(left_board[15] != 1)
  7824  000FD2  0100               	movlb	0	; () banked
  7825  000FD4  05BE               	decf	(_left_board+30)& (0+255),w,b
  7826  000FD6  11BF               	iorwf	(_left_board+31)& (0+255),w,b
  7827  000FD8  B4D8               	btfsc	status,2,c
  7828  000FDA  EFF1  F007         	goto	i2u262_41
  7829  000FDE  EFF3  F007         	goto	i2u262_40
  7830  000FE2                     i2u262_41:
  7831  000FE2  EF2B  F008         	goto	i2l2709
  7832  000FE6                     i2u262_40:
  7833  000FE6                     
  7834                           ; BSR set to: 0
  7835                           ;ball.c: 146:         {;ball.c: 147:             for(i=15;i>0;i--)
  7836  000FE6  0E00               	movlw	0
  7837  000FE8  6E0A               	movwf	(board@i+1)^0,c
  7838  000FEA  0E0F               	movlw	15
  7839  000FEC  6E09               	movwf	board@i^0,c
  7840  000FEE                     i2l2699:
  7841                           
  7842                           ;ball.c: 148:             {;ball.c: 149:                 left_board[i] = left_board[i-1]
      +                          ;
  7843  000FEE  90D8               	bcf	status,0,c
  7844  000FF0  3409               	rlcf	board@i^0,w,c
  7845  000FF2  6ED9               	movwf	fsr2l,c
  7846  000FF4  340A               	rlcf	(board@i+1)^0,w,c
  7847  000FF6  6EDA               	movwf	fsr2h,c
  7848  000FF8  0E9E               	movlw	low (_left_board+65534)
  7849  000FFA  26D9               	addwf	fsr2l,f,c
  7850  000FFC  0E00               	movlw	high (_left_board+65534)
  7851  000FFE  22DA               	addwfc	fsr2h,f,c
  7852  001000  90D8               	bcf	status,0,c
  7853  001002  3409               	rlcf	board@i^0,w,c
  7854  001004  6EE1               	movwf	fsr1l,c
  7855  001006  340A               	rlcf	(board@i+1)^0,w,c
  7856  001008  6EE2               	movwf	fsr1h,c
  7857  00100A  0EA0               	movlw	low _left_board
  7858  00100C  26E1               	addwf	fsr1l,f,c
  7859  00100E  0E00               	movlw	high _left_board
  7860  001010  22E2               	addwfc	fsr1h,f,c
  7861  001012  CFDE FFE6          	movff	postinc2,postinc1
  7862  001016  CFDD FFE5          	movff	postdec2,postdec1
  7863  00101A                     
  7864                           ;ball.c: 150:             }
  7865  00101A  0609               	decf	board@i^0,f,c
  7866  00101C  A0D8               	btfss	status,0,c
  7867  00101E  060A               	decf	(board@i+1)^0,f,c
  7868  001020  BE0A               	btfsc	(board@i+1)^0,7,c
  7869  001022  EF1D  F008         	goto	i2u263_40
  7870  001026  500A               	movf	(board@i+1)^0,w,c
  7871  001028  E106               	bnz	i2u263_41
  7872  00102A  0409               	decf	board@i^0,w,c
  7873  00102C  B0D8               	btfsc	status,0,c
  7874  00102E  EF1B  F008         	goto	i2u263_41
  7875  001032  EF1D  F008         	goto	i2u263_40
  7876  001036                     i2u263_41:
  7877  001036  EFF7  F007         	goto	i2l2699
  7878  00103A                     i2u263_40:
  7879  00103A                     
  7880                           ;ball.c: 151:             if(left_board[0]==1)
  7881  00103A  0100               	movlb	0	; () banked
  7882  00103C  05A0               	decf	_left_board& (0+255),w,b
  7883  00103E  11A1               	iorwf	(_left_board+1)& (0+255),w,b
  7884  001040  A4D8               	btfss	status,2,c
  7885  001042  EF25  F008         	goto	i2u264_41
  7886  001046  EF27  F008         	goto	i2u264_40
  7887  00104A                     i2u264_41:
  7888  00104A  EF2B  F008         	goto	i2l2709
  7889  00104E                     i2u264_40:
  7890  00104E                     
  7891                           ; BSR set to: 0
  7892                           ;ball.c: 152:                 left_board[0]=0;
  7893  00104E  0E00               	movlw	0
  7894  001050  6FA1               	movwf	(_left_board+1)& (0+255),b
  7895  001052  0E00               	movlw	0
  7896  001054  6FA0               	movwf	_left_board& (0+255),b
  7897  001056                     i2l2709:
  7898                           
  7899                           ;ball.c: 155:     if(right_up == 1)
  7900  001056  0402               	decf	board@right_up^0,w,c
  7901  001058  A4D8               	btfss	status,2,c
  7902  00105A  EF31  F008         	goto	i2u265_41
  7903  00105E  EF33  F008         	goto	i2u265_40
  7904  001062                     i2u265_41:
  7905  001062  EF75  F008         	goto	i2l2729
  7906  001066                     i2u265_40:
  7907  001066                     
  7908                           ;ball.c: 156:     {;ball.c: 157:         if(right_board[0] != 1)
  7909  001066  0100               	movlb	0	; () banked
  7910  001068  0580               	decf	_right_board& (0+255),w,b
  7911  00106A  1181               	iorwf	(_right_board+1)& (0+255),w,b
  7912  00106C  B4D8               	btfsc	status,2,c
  7913  00106E  EF3B  F008         	goto	i2u266_41
  7914  001072  EF3D  F008         	goto	i2u266_40
  7915  001076                     i2u266_41:
  7916  001076  EF75  F008         	goto	i2l2729
  7917  00107A                     i2u266_40:
  7918  00107A                     
  7919                           ; BSR set to: 0
  7920                           ;ball.c: 158:         {;ball.c: 159:             for(i=0;i<15;i++)
  7921  00107A  0E00               	movlw	0
  7922  00107C  6E0A               	movwf	(board@i+1)^0,c
  7923  00107E  0E00               	movlw	0
  7924  001080  6E09               	movwf	board@i^0,c
  7925  001082                     i2l2719:
  7926                           
  7927                           ;ball.c: 160:             {;ball.c: 161:                 right_board[i] = right_board[i+
      +                          1];
  7928  001082  90D8               	bcf	status,0,c
  7929  001084  3409               	rlcf	board@i^0,w,c
  7930  001086  6ED9               	movwf	fsr2l,c
  7931  001088  340A               	rlcf	(board@i+1)^0,w,c
  7932  00108A  6EDA               	movwf	fsr2h,c
  7933  00108C  0E82               	movlw	low (_right_board+2)
  7934  00108E  26D9               	addwf	fsr2l,f,c
  7935  001090  0E00               	movlw	high (_right_board+2)
  7936  001092  22DA               	addwfc	fsr2h,f,c
  7937  001094  90D8               	bcf	status,0,c
  7938  001096  3409               	rlcf	board@i^0,w,c
  7939  001098  6EE1               	movwf	fsr1l,c
  7940  00109A  340A               	rlcf	(board@i+1)^0,w,c
  7941  00109C  6EE2               	movwf	fsr1h,c
  7942  00109E  0E80               	movlw	low _right_board
  7943  0010A0  26E1               	addwf	fsr1l,f,c
  7944  0010A2  0E00               	movlw	high _right_board
  7945  0010A4  22E2               	addwfc	fsr1h,f,c
  7946  0010A6  CFDE FFE6          	movff	postinc2,postinc1
  7947  0010AA  CFDD FFE5          	movff	postdec2,postdec1
  7948  0010AE                     
  7949                           ;ball.c: 162:             }
  7950  0010AE  4A09               	infsnz	board@i^0,f,c
  7951  0010B0  2A0A               	incf	(board@i+1)^0,f,c
  7952  0010B2  BE0A               	btfsc	(board@i+1)^0,7,c
  7953  0010B4  EF65  F008         	goto	i2u267_41
  7954  0010B8  500A               	movf	(board@i+1)^0,w,c
  7955  0010BA  E109               	bnz	i2u267_40
  7956  0010BC  0E0F               	movlw	15
  7957  0010BE  5C09               	subwf	board@i^0,w,c
  7958  0010C0  A0D8               	btfss	status,0,c
  7959  0010C2  EF65  F008         	goto	i2u267_41
  7960  0010C6  EF67  F008         	goto	i2u267_40
  7961  0010CA                     i2u267_41:
  7962  0010CA  EF41  F008         	goto	i2l2719
  7963  0010CE                     i2u267_40:
  7964  0010CE                     
  7965                           ;ball.c: 163:             if(right_board[15]==1)
  7966  0010CE  0100               	movlb	0	; () banked
  7967  0010D0  059E               	decf	(_right_board+30)& (0+255),w,b
  7968  0010D2  119F               	iorwf	(_right_board+31)& (0+255),w,b
  7969  0010D4  A4D8               	btfss	status,2,c
  7970  0010D6  EF6F  F008         	goto	i2u268_41
  7971  0010DA  EF71  F008         	goto	i2u268_40
  7972  0010DE                     i2u268_41:
  7973  0010DE  EF75  F008         	goto	i2l2729
  7974  0010E2                     i2u268_40:
  7975  0010E2                     
  7976                           ; BSR set to: 0
  7977                           ;ball.c: 164:                 right_board[15]=0;
  7978  0010E2  0E00               	movlw	0
  7979  0010E4  6F9F               	movwf	(_right_board+31)& (0+255),b
  7980  0010E6  0E00               	movlw	0
  7981  0010E8  6F9E               	movwf	(_right_board+30)& (0+255),b
  7982  0010EA                     i2l2729:
  7983                           
  7984                           ;ball.c: 167:     if(right_down == 1)
  7985  0010EA  0403               	decf	board@right_down^0,w,c
  7986  0010EC  A4D8               	btfss	status,2,c
  7987  0010EE  EF7B  F008         	goto	i2u269_41
  7988  0010F2  EF7D  F008         	goto	i2u269_40
  7989  0010F6                     i2u269_41:
  7990  0010F6  EFBF  F008         	goto	i2l420
  7991  0010FA                     i2u269_40:
  7992  0010FA                     
  7993                           ;ball.c: 168:     {;ball.c: 169:         if(right_board[15] != 1)
  7994  0010FA  0100               	movlb	0	; () banked
  7995  0010FC  059E               	decf	(_right_board+30)& (0+255),w,b
  7996  0010FE  119F               	iorwf	(_right_board+31)& (0+255),w,b
  7997  001100  B4D8               	btfsc	status,2,c
  7998  001102  EF85  F008         	goto	i2u270_41
  7999  001106  EF87  F008         	goto	i2u270_40
  8000  00110A                     i2u270_41:
  8001  00110A  EFBF  F008         	goto	i2l420
  8002  00110E                     i2u270_40:
  8003  00110E                     
  8004                           ; BSR set to: 0
  8005                           ;ball.c: 170:         {;ball.c: 171:             for(i=15;i>0;i--)
  8006  00110E  0E00               	movlw	0
  8007  001110  6E0A               	movwf	(board@i+1)^0,c
  8008  001112  0E0F               	movlw	15
  8009  001114  6E09               	movwf	board@i^0,c
  8010  001116                     i2l2739:
  8011                           
  8012                           ;ball.c: 172:             {;ball.c: 173:                 right_board[i] = right_board[i-
      +                          1];
  8013  001116  90D8               	bcf	status,0,c
  8014  001118  3409               	rlcf	board@i^0,w,c
  8015  00111A  6ED9               	movwf	fsr2l,c
  8016  00111C  340A               	rlcf	(board@i+1)^0,w,c
  8017  00111E  6EDA               	movwf	fsr2h,c
  8018  001120  0E7E               	movlw	low (_right_board+65534)
  8019  001122  26D9               	addwf	fsr2l,f,c
  8020  001124  0E00               	movlw	high (_right_board+65534)
  8021  001126  22DA               	addwfc	fsr2h,f,c
  8022  001128  90D8               	bcf	status,0,c
  8023  00112A  3409               	rlcf	board@i^0,w,c
  8024  00112C  6EE1               	movwf	fsr1l,c
  8025  00112E  340A               	rlcf	(board@i+1)^0,w,c
  8026  001130  6EE2               	movwf	fsr1h,c
  8027  001132  0E80               	movlw	low _right_board
  8028  001134  26E1               	addwf	fsr1l,f,c
  8029  001136  0E00               	movlw	high _right_board
  8030  001138  22E2               	addwfc	fsr1h,f,c
  8031  00113A  CFDE FFE6          	movff	postinc2,postinc1
  8032  00113E  CFDD FFE5          	movff	postdec2,postdec1
  8033  001142                     
  8034                           ;ball.c: 174:             }
  8035  001142  0609               	decf	board@i^0,f,c
  8036  001144  A0D8               	btfss	status,0,c
  8037  001146  060A               	decf	(board@i+1)^0,f,c
  8038  001148  BE0A               	btfsc	(board@i+1)^0,7,c
  8039  00114A  EFB1  F008         	goto	i2u271_40
  8040  00114E  500A               	movf	(board@i+1)^0,w,c
  8041  001150  E106               	bnz	i2u271_41
  8042  001152  0409               	decf	board@i^0,w,c
  8043  001154  B0D8               	btfsc	status,0,c
  8044  001156  EFAF  F008         	goto	i2u271_41
  8045  00115A  EFB1  F008         	goto	i2u271_40
  8046  00115E                     i2u271_41:
  8047  00115E  EF8B  F008         	goto	i2l2739
  8048  001162                     i2u271_40:
  8049  001162                     
  8050                           ;ball.c: 175:             if(right_board[0]==1)
  8051  001162  0100               	movlb	0	; () banked
  8052  001164  0580               	decf	_right_board& (0+255),w,b
  8053  001166  1181               	iorwf	(_right_board+1)& (0+255),w,b
  8054  001168  A4D8               	btfss	status,2,c
  8055  00116A  EFB9  F008         	goto	i2u272_41
  8056  00116E  EFBB  F008         	goto	i2u272_40
  8057  001172                     i2u272_41:
  8058  001172  EFBF  F008         	goto	i2l420
  8059  001176                     i2u272_40:
  8060  001176                     
  8061                           ; BSR set to: 0
  8062                           ;ball.c: 176:                 right_board[0]=0;
  8063  001176  0E00               	movlw	0
  8064  001178  6F81               	movwf	(_right_board+1)& (0+255),b
  8065  00117A  0E00               	movlw	0
  8066  00117C  6F80               	movwf	_right_board& (0+255),b
  8067  00117E                     i2l420:
  8068                           
  8069                           ;ball.c: 179:     int k;;ball.c: 180:  for(k=0;k<16;k++)
  8070  00117E  0E00               	movlw	0
  8071  001180  6E08               	movwf	(board@k+1)^0,c
  8072  001182  0E00               	movlw	0
  8073  001184  6E07               	movwf	board@k^0,c
  8074  001186                     i2l2753:
  8075                           
  8076                           ;ball.c: 181:  {;ball.c: 182:   LED[k][0] = 0;
  8077  001186  C007  F004         	movff	board@k,??_board
  8078  00118A  C008  F005         	movff	board@k+1,??_board+1
  8079  00118E  3A04               	swapf	??_board^0,f,c
  8080  001190  3A05               	swapf	(??_board+1)^0,f,c
  8081  001192  0EF0               	movlw	240
  8082  001194  1605               	andwf	(??_board+1)^0,f,c
  8083  001196  5004               	movf	??_board^0,w,c
  8084  001198  0B0F               	andlw	15
  8085  00119A  1205               	iorwf	(??_board+1)^0,f,c
  8086  00119C  0EF0               	movlw	240
  8087  00119E  1604               	andwf	??_board^0,f,c
  8088  0011A0  0E00               	movlw	low _LED
  8089  0011A2  2404               	addwf	??_board^0,w,c
  8090  0011A4  6ED9               	movwf	fsr2l,c
  8091  0011A6  0E03               	movlw	high _LED
  8092  0011A8  2005               	addwfc	(??_board+1)^0,w,c
  8093  0011AA  6EDA               	movwf	fsr2h,c
  8094  0011AC  0E00               	movlw	0
  8095  0011AE  6EDF               	movwf	indf2,c
  8096                           
  8097                           ;ball.c: 183:   LED[k][15] = 0;
  8098  0011B0  C007  F004         	movff	board@k,??_board
  8099  0011B4  C008  F005         	movff	board@k+1,??_board+1
  8100  0011B8  3A04               	swapf	??_board^0,f,c
  8101  0011BA  3A05               	swapf	(??_board+1)^0,f,c
  8102  0011BC  0EF0               	movlw	240
  8103  0011BE  1605               	andwf	(??_board+1)^0,f,c
  8104  0011C0  5004               	movf	??_board^0,w,c
  8105  0011C2  0B0F               	andlw	15
  8106  0011C4  1205               	iorwf	(??_board+1)^0,f,c
  8107  0011C6  0EF0               	movlw	240
  8108  0011C8  1604               	andwf	??_board^0,f,c
  8109  0011CA  0E0F               	movlw	low (_LED+15)
  8110  0011CC  2404               	addwf	??_board^0,w,c
  8111  0011CE  6ED9               	movwf	fsr2l,c
  8112  0011D0  0E03               	movlw	high (_LED+15)
  8113  0011D2  2005               	addwfc	(??_board+1)^0,w,c
  8114  0011D4  6EDA               	movwf	fsr2h,c
  8115  0011D6  0E00               	movlw	0
  8116  0011D8  6EDF               	movwf	indf2,c
  8117  0011DA                     
  8118                           ;ball.c: 185:  }
  8119  0011DA  4A07               	infsnz	board@k^0,f,c
  8120  0011DC  2A08               	incf	(board@k+1)^0,f,c
  8121  0011DE  BE08               	btfsc	(board@k+1)^0,7,c
  8122  0011E0  EFFB  F008         	goto	i2u273_41
  8123  0011E4  5008               	movf	(board@k+1)^0,w,c
  8124  0011E6  E109               	bnz	i2u273_40
  8125  0011E8  0E10               	movlw	16
  8126  0011EA  5C07               	subwf	board@k^0,w,c
  8127  0011EC  A0D8               	btfss	status,0,c
  8128  0011EE  EFFB  F008         	goto	i2u273_41
  8129  0011F2  EFFD  F008         	goto	i2u273_40
  8130  0011F6                     i2u273_41:
  8131  0011F6  EFC3  F008         	goto	i2l2753
  8132  0011FA                     i2u273_40:
  8133  0011FA                     
  8134                           ;ball.c: 186:  for(k=0;k<16;k++)
  8135  0011FA  0E00               	movlw	0
  8136  0011FC  6E08               	movwf	(board@k+1)^0,c
  8137  0011FE  0E00               	movlw	0
  8138  001200  6E07               	movwf	board@k^0,c
  8139  001202                     i2l2765:
  8140                           
  8141                           ;ball.c: 187:  {;ball.c: 188:   LED[k][0] = left_board[k];
  8142  001202  90D8               	bcf	status,0,c
  8143  001204  3407               	rlcf	board@k^0,w,c
  8144  001206  6ED9               	movwf	fsr2l,c
  8145  001208  3408               	rlcf	(board@k+1)^0,w,c
  8146  00120A  6EDA               	movwf	fsr2h,c
  8147  00120C  0EA0               	movlw	low _left_board
  8148  00120E  26D9               	addwf	fsr2l,f,c
  8149  001210  0E00               	movlw	high _left_board
  8150  001212  22DA               	addwfc	fsr2h,f,c
  8151  001214  C007  F004         	movff	board@k,??_board
  8152  001218  C008  F005         	movff	board@k+1,??_board+1
  8153  00121C  3A04               	swapf	??_board^0,f,c
  8154  00121E  3A05               	swapf	(??_board+1)^0,f,c
  8155  001220  0EF0               	movlw	240
  8156  001222  1605               	andwf	(??_board+1)^0,f,c
  8157  001224  5004               	movf	??_board^0,w,c
  8158  001226  0B0F               	andlw	15
  8159  001228  1205               	iorwf	(??_board+1)^0,f,c
  8160  00122A  0EF0               	movlw	240
  8161  00122C  1604               	andwf	??_board^0,f,c
  8162  00122E  0E00               	movlw	low _LED
  8163  001230  2404               	addwf	??_board^0,w,c
  8164  001232  6EE1               	movwf	fsr1l,c
  8165  001234  0E03               	movlw	high _LED
  8166  001236  2005               	addwfc	(??_board+1)^0,w,c
  8167  001238  6EE2               	movwf	fsr1h,c
  8168  00123A  CFDF FFE7          	movff	indf2,indf1
  8169                           
  8170                           ;ball.c: 189:   LED[k][15] = right_board[k];
  8171  00123E  90D8               	bcf	status,0,c
  8172  001240  3407               	rlcf	board@k^0,w,c
  8173  001242  6ED9               	movwf	fsr2l,c
  8174  001244  3408               	rlcf	(board@k+1)^0,w,c
  8175  001246  6EDA               	movwf	fsr2h,c
  8176  001248  0E80               	movlw	low _right_board
  8177  00124A  26D9               	addwf	fsr2l,f,c
  8178  00124C  0E00               	movlw	high _right_board
  8179  00124E  22DA               	addwfc	fsr2h,f,c
  8180  001250  C007  F004         	movff	board@k,??_board
  8181  001254  C008  F005         	movff	board@k+1,??_board+1
  8182  001258  3A04               	swapf	??_board^0,f,c
  8183  00125A  3A05               	swapf	(??_board+1)^0,f,c
  8184  00125C  0EF0               	movlw	240
  8185  00125E  1605               	andwf	(??_board+1)^0,f,c
  8186  001260  5004               	movf	??_board^0,w,c
  8187  001262  0B0F               	andlw	15
  8188  001264  1205               	iorwf	(??_board+1)^0,f,c
  8189  001266  0EF0               	movlw	240
  8190  001268  1604               	andwf	??_board^0,f,c
  8191  00126A  0E0F               	movlw	low (_LED+15)
  8192  00126C  2404               	addwf	??_board^0,w,c
  8193  00126E  6EE1               	movwf	fsr1l,c
  8194  001270  0E03               	movlw	high (_LED+15)
  8195  001272  2005               	addwfc	(??_board+1)^0,w,c
  8196  001274  6EE2               	movwf	fsr1h,c
  8197  001276  CFDF FFE7          	movff	indf2,indf1
  8198  00127A                     
  8199                           ;ball.c: 191:  }
  8200  00127A  4A07               	infsnz	board@k^0,f,c
  8201  00127C  2A08               	incf	(board@k+1)^0,f,c
  8202  00127E  BE08               	btfsc	(board@k+1)^0,7,c
  8203  001280  EF4B  F009         	goto	i2u274_41
  8204  001284  5008               	movf	(board@k+1)^0,w,c
  8205  001286  E109               	bnz	i2u274_40
  8206  001288  0E10               	movlw	16
  8207  00128A  5C07               	subwf	board@k^0,w,c
  8208  00128C  A0D8               	btfss	status,0,c
  8209  00128E  EF4B  F009         	goto	i2u274_41
  8210  001292  EF4D  F009         	goto	i2u274_40
  8211  001296                     i2u274_41:
  8212  001296  EF01  F009         	goto	i2l2765
  8213  00129A                     i2u274_40:
  8214  00129A  0012               	return		;funcret
  8215  00129C                     __end_of_board:
  8216                           	opt callstack 0
  8217  0000                     
  8218                           	psect	rparam
  8219  0000                     
  8220                           	psect	temp
  8221  00006B                     btemp:
  8222                           	opt callstack 0
  8223  00006B                     	ds	1
  8224  0000                     int$flags	set	btemp
  8225  0000                     wtemp8	set	btemp+1
  8226  0000                     ttemp5	set	btemp+1
  8227  0000                     ttemp6	set	btemp+4
  8228  0000                     ttemp7	set	btemp+8
  8229                           tosu	equ	0xFFF
  8230                           tosh	equ	0xFFE
  8231                           tosl	equ	0xFFD
  8232                           stkptr	equ	0xFFC
  8233                           pclatu	equ	0xFFB
  8234                           pclath	equ	0xFFA
  8235                           pcl	equ	0xFF9
  8236                           tblptru	equ	0xFF8
  8237                           tblptrh	equ	0xFF7
  8238                           tblptrl	equ	0xFF6
  8239                           tablat	equ	0xFF5
  8240                           prodh	equ	0xFF4
  8241                           prodl	equ	0xFF3
  8242                           indf0	equ	0xFEF
  8243                           postinc0	equ	0xFEE
  8244                           postdec0	equ	0xFED
  8245                           preinc0	equ	0xFEC
  8246                           plusw0	equ	0xFEB
  8247                           fsr0h	equ	0xFEA
  8248                           fsr0l	equ	0xFE9
  8249                           wreg	equ	0xFE8
  8250                           indf1	equ	0xFE7
  8251                           postinc1	equ	0xFE6
  8252                           postdec1	equ	0xFE5
  8253                           preinc1	equ	0xFE4
  8254                           plusw1	equ	0xFE3
  8255                           fsr1h	equ	0xFE2
  8256                           fsr1l	equ	0xFE1
  8257                           bsr	equ	0xFE0
  8258                           indf2	equ	0xFDF
  8259                           postinc2	equ	0xFDE
  8260                           postdec2	equ	0xFDD
  8261                           preinc2	equ	0xFDC
  8262                           plusw2	equ	0xFDB
  8263                           fsr2h	equ	0xFDA
  8264                           fsr2l	equ	0xFD9
  8265                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        331
    BSS         588
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     59     106
    BANK0           128     20     124
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256     36      36
    BANK5           244      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    plot@pattern	PTR unsigned char [16] size(2) Largest target is 256
		 -> LED(BANK3[256]), map(BANK2[256]), outputMap1(BANK1[256]), 

    endSnake	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), mode(COMRAM[1]), 

    endBall	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), mode(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->___fldiv
    _updateMap->_printError
    _updateMap->_updateCar
    _plot->_set_register1
    _plot->_set_register2
    _plot->_set_register3
    _plot->_set_register4
    _init_max7219->_clear_matrix
    _clear_matrix->_set_register1
    _clear_matrix->_set_register2
    _clear_matrix->_set_register3
    _clear_matrix->_set_register4
    _set_register4->_shiftOut4
    _set_register3->_shiftOut3
    _set_register2->_shiftOut2
    _set_register1->_shiftOut1
    _initMap->___awmod
    _srand->_time
    _rand->___omul
    ___awmod->_rand
    _ball->_move_ball
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _ISR in COMRAM

    _ISR->_move

Critical Paths under _main in BANK0

    _main->_initMap
    _initMap->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_plot

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   25257
                                             16 BANK0      4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                               _ball
                            _initMap
                       _init_max7219
                            _initial
                               _plot
                          _updateMap
 ---------------------------------------------------------------------------------
 (1) _updateMap                                           12    12      0    1694
                                             28 COMRAM    12    12      0
                         _printError
                          _updateCar
 ---------------------------------------------------------------------------------
 (2) _updateCar                                           10    10      0     446
                                             20 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (2) _printError                                           8     8      0     387
                                             20 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _plot                                                43    41      2    7070
                                             26 COMRAM     7     5      2
                                              0 BANK4     36    36      0
                      _set_register1
                      _set_register2
                      _set_register3
                      _set_register4
 ---------------------------------------------------------------------------------
 (1) _initial                                              6     6      0     192
                                             20 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _init_max7219                                         0     0      0    9944
                       _clear_matrix
                      _set_register1
                      _set_register2
                      _set_register3
                      _set_register4
 ---------------------------------------------------------------------------------
 (2) _clear_matrix                                         2     2      0    5068
                                             26 COMRAM     2     2      0
                      _set_register1
                      _set_register2
                      _set_register3
                      _set_register4
 ---------------------------------------------------------------------------------
 (2) _set_register4                                        2     1      1    1219
                                             24 COMRAM     2     1      1
                          _shiftOut4
 ---------------------------------------------------------------------------------
 (3) _shiftOut4                                            4     3      1     347
                                             20 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _set_register3                                        2     1      1    1219
                                             24 COMRAM     2     1      1
                          _shiftOut3
 ---------------------------------------------------------------------------------
 (3) _shiftOut3                                            4     3      1     347
                                             20 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _set_register2                                        2     1      1    1219
                                             24 COMRAM     2     1      1
                          _shiftOut2
 ---------------------------------------------------------------------------------
 (3) _shiftOut2                                            4     3      1     347
                                             20 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _set_register1                                        2     1      1    1219
                                             24 COMRAM     2     1      1
                          _shiftOut1
 ---------------------------------------------------------------------------------
 (3) _shiftOut1                                            4     3      1     347
                                             20 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _initMap                                             14    14      0    2553
                                              2 BANK0     14    14      0
                            ___awmod
                             ___wmul
                               _rand
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (2) _time                                                 8     0      8     332
                                             20 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (2) _srand                                                6     4      2     121
                                             28 COMRAM     6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (2) _rand                                                10     8      2     456
                                             44 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (3) ___omul                                              24     8     16     456
                                             20 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                             54 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _ball                                                 8     8      0     405
                                             28 COMRAM     8     8      0
                          _move_ball
 ---------------------------------------------------------------------------------
 (2) _move_ball                                           10    10      0     207
                                             20 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    2183
                                             34 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  6     6      0    1692
                                             14 COMRAM     6     6      0
                              _board
                               _move
 ---------------------------------------------------------------------------------
 (6) _move                                                14    12      2     792
                                              0 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (6) _board                                               10     7      3     900
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _ball
     _move_ball
   _initMap
     ___awmod
       _rand (ARG)
         ___omul
     ___wmul
     _rand
       ___omul
     _srand
       _time (ARG)
     _time
   _init_max7219
     _clear_matrix
       _set_register1
         _shiftOut1
       _set_register2
         _shiftOut2
       _set_register3
         _shiftOut3
       _set_register4
         _shiftOut4
     _set_register1
       _shiftOut1
     _set_register2
       _shiftOut2
     _set_register3
       _shiftOut3
     _set_register4
       _shiftOut4
   _initial
   _plot
     _set_register1
       _shiftOut1
     _set_register2
       _shiftOut2
     _set_register3
       _shiftOut3
     _set_register4
       _shiftOut4
   _updateMap
     _printError
     _updateCar

 _ISR (ROOT)
   _board
   _move

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100     24      24      12       14.1%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0     100      10      100.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0     100       6      100.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     14      7C       4       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3B      6A       1       84.1%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     40A      14        0.0%
DATA                 0      0     40A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 30 20:39:10 2019

           ___fldiv@aexp 003B             ___fldiv@bexp 003A                        _a 0053  
                      _b 0052                        _c 0051                        _d 0050  
           ___fldiv@sign 0033      ___wmul@multiplicand 0017              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l201 2B4A                      l204 2B2C  
                    l212 24F8                      l301 050E                      l136 14FC  
                    l209 2A2E                      l402 25C2                      l171 29DC  
                    l245 0446                      l326 185E                      l318 16B2  
                    l432 2B0E                      l192 284C                      l185 28D4  
                    l450 27C4                      l178 2958                      l195 2B86  
                    l276 206A                      l381 196E                      l390 1A72  
                    l198 2B68                      l294 080C                      l279 1A7C  
                    l449 27A4                      l289 1C54                      l395 234E  
                    l729 2172                      l676 2726             __CFG_CPB$OFF 000000  
                    _LED 0300             __CFG_CPD$OFF 000000                      _ISR 0008  
                    _car 00C0                      _end 0055                      _map 0200  
           ___awmod@sign 00E9                      wreg 000FE8             __CFG_LVP$OFF 000000  
                   ?_ISR 0001             ___fltol@exp1 00F1             __CFG_WDT$OFF 000000  
                   l1101 1DA0                     l1014 0BA6                     l1111 242A  
                   l1016 0A06                     l1025 0A4C                     l1027 0AC4  
                   l1019 09CA                     l1115 2A7A                     l1028 0AB2  
                   l1108 2AE8                     l1090 1E08                     l1094 1D44  
                   l1087 1CAC                     l4001 04C2                     l4003 04DE  
                   l4101 0890                     l4021 0568                     l4013 0506  
                   l4005 04E2                     l4103 08A0                     l4111 08CA  
                   l4031 06AA                     l4023 05E0                     l4007 04FE  
                   l4201 0B94                     l4121 090C                     l4113 08DA  
                   l4105 08B0                     l4041 07AC                     l4033 0722  
                   l4025 0614                     l4203 0B9A                     l4115 08F0  
                   l4107 08C0                     l4051 24FE                     l4043 07C8  
                   l4035 0756                     l4027 0662                     l4019 051C  
                   l4205 0B9C                     l4141 098E                     l4133 0944  
                   l4117 0900                     l4125 0920                     l4109 08C2  
                   l4221 20C2                     l4213 206C                     l4045 07CC  
                   l4029 066A                     l4151 09D4                     l4143 0996  
                   l4135 095E                     l4127 0930                     l4119 0908  
                   l4223 20C4                     l4215 2084                     l4071 256C  
                   l4063 250E                     l3511 293E                     l3503 28DC  
                   l4047 07E8                     l4039 07A8                     l4311 12B8  
                   l4303 129C                     l4161 0A2C                     l4153 09F2  
                   l4145 09A6                     l4137 096E                     l4129 0930  
                   l4081 082A                     l4225 20D4                     l4073 2588  
                   l4065 2548                     l4057 2506                     l4049 24FA  
                   l3513 2944                     l3505 28EC                     l4321 12DE  
                   l4313 12CE                     l4305 12B2                     l4171 0A6A  
                   l4163 0A32                     l4155 09F4                     l4147 09BA  
                   l4139 097E                     l4083 083A                     l4091 0864  
                   l4075 080E                     l4251 2152                     l4235 20FE  
                   l4227 20D8                     l4219 2098                     l4067 254C  
                   l3515 2946                     l3507 2916                     l3531 28B8  
                   l3603 29E6                     l4331 131E                     l4323 12E0  
                   l4315 12D4                     l4307 12B4                     l4181 0AD4  
                   l4173 0A6E                     l4165 0A3C                     l4157 0A04  
                   l4149 09C8                     l4093 0874                     l4085 084A  
                   l4077 081A                     l4253 2162                     l4245 2126  
                   l4237 2108                     l4229 20E6                     l4261 1C76  
                   l3701 18FC                     l4069 2568                     l3517 2948  
                   l3509 293C                     l3533 28BA                     l3525 2854  
                   l3541 27C8                     l3605 2A0E                     l3621 1F72  
                   l4341 1346                     l4333 1322                     l4325 12F2  
                   l4317 12DA                     l4309 12B6                     l4191 0B36  
                   l4183 0AE0                     l4175 0A7C                     l4167 0A4A  
                   l4159 0A16                     l4095 087A                     l4087 085A  
                   l4079 0828                     l4247 2132                     l4239 2112  
                   l4271 1CEE                     l4263 1CBC                     l3711 1942  
                   l3703 190E                     l3535 28C0                     l3527 2864  
                   l3519 2850                     l3551 2808                     l3607 2A12  
                   l3631 202E                     l3623 1F8A                     l3615 1F6A  
                   l4351 13B8                     l4343 1350                     l4335 1326  
                   l4327 1308                     l4319 12DC                     l4193 0B4C  
                   l4185 0AEE                     l4177 0AAA                     l4169 0A5C  
                   l4097 0880                     l4089 085C                     l4249 2142  
                   l4281 1D76                     l4273 1CFA                     l4265 1CD2  
                   l4257 1C58                     l3721 19AC                     l3713 194A  
                   l3705 1916                     l3481 2960                     l3537 28C2  
                   l3529 2890                     l3561 283C                     l3553 2830  
                   l3801 2332                     l3633 204A                     l3625 1FB2  
                   l3609 1F5A                     l4361 13EA                     l4345 1352  
                   l4353 13C8                     l4337 132E                     l4329 131A  
                   l4195 0B66                     l4187 0B18                     l4099 088E  
                   l4291 1DB4                     l4283 1D82                     l4275 1D2C  
                   l4259 1C68                     l3731 1A0E                     l3723 19B4  
                   l3715 1966                     l3707 1928                     l3803 15B6  
                   l3491 29C8                     l3483 2970                     l3475 295C  
                   l3563 2B6C                     l3571 2B52                     l3539 28C4  
                   l3555 2832                     l3547 27CC                     l3635 204E  
                   l3627 1FF0                     l3651 1AF2                     l3643 1A8A  
                   l4371 146A                     l4363 13FA                     l4355 13D8  
                   l4347 1368                     l4339 1336                     l4197 0B82  
                   l4189 0B1C                     l4293 1DD8                     l4285 1D90  
                   l4277 1D2E                     l4269 1CE6                     l3741 1A4E  
                   l3733 1A16                     l3725 19C6                     l3717 1976  
                   l3709 1934                     l3821 1646                     l3813 1604  
                   l3805 15C2                     l3493 29CA                     l3485 299A  
                   l3565 2B70                     l3573 2B66                     l3557 2838  
                   l3549 27DC                     l3581 2B12                     l3901 0176  
                   l3629 202A                     l3661 1C34                     l3653 1B00  
                   l3645 1A92                     l3637 1A74                     l4381 14A6  
                   l4373 146C                     l4365 13FE                     l4357 13DA  
                   l4349 1392                     l4199 0B86                     l4295 1DE8  
                   l4287 1DAE                     l4279 1D3A                     l3743 1A6A  
                   l3735 1A28                     l3719 1988                     l3727 19D6  
                   l3751 2676                     l3591 2742                     l3831 16AA  
                   l3823 164A                     l3807 15FA                     l3495 29CC  
                   l3487 29C0                     l3567 2B84                     l3575 2B30  
                   l3559 283A                     l3583 2B16                     l3911 01D4  
                   l3903 0194                     l3663 1C38                     l3655 1B48  
                   l3647 1A9A                     l4447 158C                     l4391 155E  
                   l4383 1500                     l4375 147C                     l4367 1402  
                   l4359 13DE                     l4297 1DF6                     l4289 1DB0  
                   l3729 19EA                     l3737 1A38                     l3681 1860  
                   l3761 26A4                     l3753 267C                     l3745 2AEA  
                   l3593 2762                     l3673 2ABC                     l3665 2A30  
                   l3841 16D0                     l3825 1666                     l3489 29C2  
                   l3497 28D8                     l3569 2B4E                     l3577 2B34  
                   l3585 2B2A                     l3905 0198                     l3657 1BA4  
                   l3649 1AC2                     l4385 151E                     l4377 148E  
                   l4369 1458                     l4299 1DF8                     l3739 1A46  
                   l3691 18BC                     l3683 187E                     l3771 26DC  
                   l3763 26AC                     l3755 268A                     l3747 2B06  
                   l3595 2774                     l3587 2728                     l3675 2350  
                   l3667 2A42                     l3851 1790                     l3843 171A  
                   l3827 166A                     l3819 160C                     l3579 2B48  
                   l3931 0270                     l3923 01E4                     l3907 01B4  
                   l3659 1BDC                     l4387 1532                     l4379 14A2  
                   l4395 1574                     l3693 18C4                     l3685 188A  
                   l3781 2716                     l3773 26F2                     l3765 26BE  
                   l3757 2692                     l3589 2734                     l3677 23E4  
                   l3669 2A6A                     l3853 181E                     l3845 1788  
                   l3837 16C0                     l3829 1686                     l3597 29DE  
                   l3941 0298                     l3933 0274                     l3925 0242  
                   l3917 01DC                     l3909 01B8                     l3861 0012  
                   l4389 1548                     l3695 18D6                     l3687 1892  
                   l3783 271E                     l3775 26FA                     l3767 26C6  
                   l3759 2696                     l3855 1822                     l3839 16C8  
                   l3951 032C                     l3935 0290                     l3927 0250  
                   l3863 0042                     l3697 18DE                     l3689 18B0  
                   l3777 2700                     l3769 26CE                     l3857 183E  
                   l3961 0394                     l3953 0330                     l3929 0254  
                   l3881 00BC                     l3699 18F0                     l3779 2706  
                   l3859 1842                     l3787 242C                     l3795 227C  
                   l3971 0402                     l3955 034C                     l3947 02A0  
                   l3883 00D8                     l3875 0054                     l3797 22F4  
                   l3789 2274                     l3973 041E                     l3957 0350  
                   l3949 030E                     l3893 0100                     l3885 00DC  
                   l3877 00AA                     l3869 004C                     l3981 046C  
                   l3799 232E                     l3967 039E                     l3959 036C  
                   l3887 00F8                     l3879 00B8                     l3991 047C  
                   l3975 0448                     l3969 03FC                     l3985 0474  
                   l3977 0458                     l3899 0108                     l3979 045C  
                   l3997 0484                     l3999 04BE                     _LATA 000F89  
                   u4000 2A2E                     u4001 2A2A                     u4010 1F8A  
                   u4011 1F86                     u4100 2A42                     u4020 1FB2  
                   u4101 2A3E                     u4021 1FAE                     u4110 241C  
                   u4030 204A                     u4031 2046                     u5000 2142  
                   u4200 1988                     u4120 187E                     u4040 206A  
                   u5001 213E                     u4201 1984                     u4121 187A  
                   u4041 2066                     u5010 2152                     u4210 19AC  
                   u4130 18B0                     u4050 1A8A                     u5011 214E  
                   u4211 19A8                     u4131 18AC                     u4115 240A  
                   u4051 1A86                     u5100 1DE8                     u5020 1C68  
                   u4220 19C6                     u4140 18D6                     u4300 26BE  
                   u4060 1B00                     u5101 1DE4                     u5021 1C64  
                   u4221 19C2                     u4141 18D2                     u4301 26BA  
                   u4061 1AFC                     u5110 1DF6                     u5030 1C76  
                   u4230 19EA                     u4150 18F0                     u4310 26DC  
                   u4070 1B48                     u5111 1DF2                     u5031 1C72  
                   u4231 19E6                     u4151 18EC                     u4311 26D8  
                   u4071 1B44                     u5040 1CD2                     u4240 1A0E  
                   u4160 190E                     u4320 26F2                     u4080 1BDC  
                   u5120 12F2                     u5041 1CCE                     u4241 1A0A  
                   u4161 190A                     u4321 26EE                     u4401 0018  
                   u4081 1BD8                     u5121 12EE                     u5050 1D28  
                   u4250 1A28                     u4170 1928                     u4330 2716  
                   u4090 1C54                     u5130 1346                     u5051 1D24  
                   u4251 1A24                     u4171 1924                     u4331 2712  
                   u4411 0024                     u4091 1C50                     u5131 1342  
                   u5060 1D72                     u4260 1A46                     u4180 1942  
                   u4340 234E                     u4500 0242                     u5140 1368  
                   u5061 1D6E                     u4261 1A42                     u4181 193E  
                   u4341 234A                     u4501 023E                     u4421 0030  
                   u5141 1364                     u5070 1D90                     u4270 1A6A  
                   u4190 1966                     u4350 1666                     u4510 0270  
                   u5150 13D8                     u5071 1D8C                     u4271 1A66  
                   u4191 1962                     u4351 1662                     u4511 026C  
                   u4431 003C                     u5151 13D4                     u5080 1DA0  
                   u4280 268A                     u4360 1686                     u3800 28FE  
                   u4520 0290                     u4440 00AA                     u4600 04FE  
                   u5160 13FA                     u5081 1D9C                     u4281 2686  
                   u4361 1682                     u3801 28F6                     u4521 028C  
                   u4441 00A6                     u4601 04FA                     u5217 150C  
                   u5161 13F6                     u5090 1DAE                     u4290 26A4  
                   u4370 16C0                     u3730 2970                     u4530 030E  
                   u4450 00D8                     u4610 051C                     u5170 146A  
                   u5091 1DAA                     u4291 26A0                     u4371 16BC  
                   u3731 296C                     u4531 030A                     u4451 00D4  
                   u4611 0518                     u5227 1526                     u5171 1466  
                   u4700 2568                     u4380 183E                     u3740 2982  
                   u3820 2928                     u3900 28D4                     u4540 034C  
                   u4460 00F8                     u4620 0568                     u5180 148E  
                   u4701 2564                     u4381 183A                     u3741 297A  
                   u3821 2920                     u3901 28D0                     u4541 0348  
                   u4461 00F4                     u4621 0564                     u5237 153A  
                   u5181 148A                     u4710 2588                     u4390 185E  
                   u3910 27DC                     u4550 036C                     u4470 0176  
                   u4630 0614                     u5190 14A2                     u4711 2584  
                   u4391 185A                     u3911 27D8                     u4551 0368  
                   u4471 0172                     u4631 0610                     u5247 1550  
                   u5191 149E                     u4800 09A6                     u4720 0828  
                   u3760 29AC                     u3840 2958                     u3920 27EE  
                   u4560 041E                     u4480 01B4                     u4640 0662  
                   u4801 09A2                     u4721 0824                     u3761 29A4  
                   u3841 2954                     u3921 27E6                     u4561 041A  
                   u4481 01B0                     u4641 065E                     u5257 1566  
                   u4810 09C8                     u4730 083A                     u3818 2900  
                   u3850 2864                     u4490 01D4                     u4650 06AA  
                   u4570 0458                     u4811 09C4                     u4731 0836  
                   u3851 2860                     u4491 01D0                     u4651 06A6  
                   u4571 0454                     u4900 0AD4                     u4820 09F2  
                   u4740 084A                     u3780 29DC                     u3860 2876  
                   u3940 281A                     u4660 0756                     u4580 046C  
                   u4901 0AD0                     u4821 09EE                     u4741 0846  
                   u3781 29D8                     u3861 286E                     u3941 2812  
                   u4661 0752                     u4581 0468                     u4910 0AEE  
                   u4830 0A16                     u4750 088E                     u3758 2984  
                   u3838 292A                     u3790 28EC                     u4670 07A4  
                   u4590 04DE                     u4911 0AEA                     u4831 0A12  
                   u4751 088A                     u3791 28E8                     u4671 07A0  
                   u4591 04DA                     u4920 0B36                     u4840 0A2C  
                   u4760 08A0                     u3880 28A2                     u3960 284C  
                   u4680 07C8                     u4921 0B32                     u4841 0A28  
                   u4761 089C                     u3881 289A                     u3961 2848  
                   u4681 07C4                     u4930 0B66                     u4850 0A4A  
                   u4770 08B0                     u3778 29AE                     u3938 27F0  
                   u4690 07E8                     u4931 0B62                     u4851 0A46  
                   u4771 08AC                     u3971 272E                     u4691 07E4  
                   u4940 0B94                     u4860 0A6A                     u4780 08F0  
                   u3980 2742                     u4941 0B90                     u4861 0A66  
                   u4781 08EC                     u3981 273E                     u4870 0A7C  
                   u4790 0930                     u4950 2084                     u3990 27A4  
                   u3878 2878                     u3958 281C                     u4871 0A78  
                   u4791 092C                     u4951 2080                     u3991 27A0  
                   u4880 0AAA                     u4960 20B8                     u4881 0AA6  
                   u4890 0AC0                     u4970 20E6                     u3898 28A4  
                   u4891 0ABC                     u4971 20E2                     u4980 20FA  
                   u4981 20F6                     u4965 20AE                     u4990 2122  
                   u4991 211E                     _ball 24FA                     _main 129C  
                   _mode 005F                     _rand 2350                     _seed 0057  
                   _move 0BA8                     _plot 0012                     _time 2A30  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 006B                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000          ___fldiv@new_exp 0034  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ??_ISR 000F  
                  ?_ball 0001            ___fltol@sign1 00F0                    ?_main 0001  
        __end_of___fldiv 0BA8                    ?_rand 002D                    _ADRES 000FC3  
                  ?_move 0001          __end_of___awmod 2728                    ?_plot 001B  
                  ?_time 0015          __end_of___fltol 2174                    _T0CON 000FD5  
                  i2l120 1F12                    i2l112 1E70                    i2l113 1ECA  
                  i2l114 1E8E                    i2l116 1EAC                    i2l125 1F3E  
                  i2l420 117E                    i2l345 0F2A                    i2l337 0C50  
                  i2l429 129A                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000     __end_of_clear_matrix 2A30  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _board 0F2C                    ball@i 0021  
                  ball@j 0023          __end_of_initMap 1860                    _error 0056  
        __end_of_initial 2350                    _input 006A             updateCar@num 0019  
                  _srand 2ABC                    tablat 000FF5                    move@i 000B  
                  move@j 000D                    plot@i 0422                    plot@j 0420  
                  time@t 0015                    plusw2 000FDB                    ttemp5 006C  
                  ttemp6 006F                    ttemp7 0073                    status 000FD8  
                  wtemp8 006C           board@left_down 0001          __initialization 25C4  
           __end_of_ball 25C4             __end_of_main 15B6             __end_of_rand 242C  
           __end_of_move 0F2C             __end_of_plot 0448             __end_of_time 2A7C  
     set_register1@value 0019       set_register2@value 0019       set_register3@value 0019  
     set_register4@value 0019                   ??_ball 001D                   ??_main 00F8  
                 ??_rand 002F                   ??_move 0003                   ??_plot 001D  
                 ??_time 001D            __activetblptr 000002                   ?_board 0001  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
          ?_init_max7219 0001                   ?_srand 001D                   i2l3301 1E9C  
                 i2l3311 1F30                   i2l3303 1EBA                   i2l3313 1F38  
                 i2l3305 1ECE                   i2l2611 0BD0                   i2l3307 1EE0  
                 i2l3315 1F3C                   i2l2701 101A                   i2l2613 0BD6  
                 i2l2621 0BE8                   i2l3309 1F20                   i2l2711 1066  
                 i2l2703 1020                   i2l2631 0C48                   i2l2615 0BDC  
                 i2l2623 0C1C                   i2l2721 10AE                   i2l2713 107A  
                 i2l2705 103A                   i2l2641 0D22                   i2l2625 0C40  
                 i2l2617 0BE2                   i2l2609 0BA8                   i2l2731 10FA  
                 i2l2723 10B2                   i2l2707 104E                   i2l2651 0E64  
                 i2l2643 0D56                   i2l3291 1E40                   i2l2741 1142  
                 i2l2733 110E                   i2l2725 10CE                   i2l2709 1056  
                 i2l2661 0F0A                   i2l2653 0E98                   i2l2645 0DA4  
                 i2l2637 0C5E                   i2l3293 1E42                   i2l2743 1148  
                 i2l2727 10E2                   i2l2719 1082                   i2l2671 0F3E  
                 i2l2663 0F0E                   i2l2639 0CAA                   i2l2647 0DAC  
                 i2l3295 1E52                   i2l3287 1E24                   i2l2753 1186  
                 i2l2745 1162                   i2l2729 10EA                   i2l2681 0F86  
                 i2l2673 0F52                   i2l2649 0DEC                   i2l2657 0EEA  
                 i2l3297 1E60                   i2l3289 1E32                   i2l2755 11DA  
                 i2l2747 1176                   i2l2739 1116                   i2l2691 0FD2  
                 i2l2683 0F8A                   i2l2659 0EEE                   i2l3299 1E7E  
                 i2l2765 1202                   i2l2757 11DE                   i2l2693 0FE6  
                 i2l2685 0FA6                   i2l2669 0F2E                   i2l2767 127A  
                 i2l2759 11FA                   i2l2687 0FBA                   i2l2679 0F5A  
                 i2l2769 127E                   i2l2689 0FC2                   i2l4449 0BFE  
                 i2l2699 0FEE                   _TMR0IE 007F95                   _TMR0IF 007F92  
       __end_of___xxtofl 1E0A           __CFG_XINST$OFF 000000                   ___omul 2728  
                 ___wmul 2AEA                   _ball_x 0068                   _ball_y 0066  
              ??___fldiv 002B           __CFG_STVREN$ON 000000                ??___awmod 003B  
              ??___fltol 00EC                   clear_0 2630                   clear_1 2644  
                 clear_2 2656                   clear_3 2662                   board@i 0009  
                 board@k 0007          ___awmod@divisor 0039                   _select 0054  
                 _player 0060          ___awmod@counter 00E8                ??_initMap 00EA  
           __pdataCOMRAM 0060                ??_initial 0015                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   srand@s 001D  
         ??_init_max7219 001D             ___xxtofl@arg 001F             ___xxtofl@exp 001E  
           ___xxtofl@val 0015               __accesstop 0080  __end_of__initialization 2668  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001               ___fltol@f1 00E8  
         __pcstackCOMRAM 0001             __pidataBANK0 2A7C             __pidataBANK1 2174  
          __end_of_board 129C            __end_of_srand 2AEA    __size_of_clear_matrix 0052  
  __end_of_set_register1 2B88    __end_of_set_register2 2B6A    __end_of_set_register3 2B4C  
  __end_of_set_register4 2B2E                  ??_board 0004                  ??_srand 001F  
             __pbssBANK0 00C0               __pbssBANK2 0200               __pbssBANK3 0300  
        board@right_down 0003             _clear_matrix 29DE                  ?___omul 0015  
                ?___wmul 0015      ___omul@multiplicand 001D       __size_of_move_ball 0214  
     __size_of_shiftOut1 0084       __size_of_shiftOut2 0084       __size_of_shiftOut3 0088  
     __size_of_shiftOut4 0088                ?___xxtofl 0015       __size_of_updateCar 01E2  
     __size_of_updateMap 03C6               _left_board 00A0                  __Hparam 0000  
                __Lparam 0000                  ___fldiv 080E                  ___awmod 2676  
        __size_of___omul 009E     __end_of_init_max7219 24FA                  ___fltol 206C  
        __size_of___wmul 0026                  _endBall 004C                  __pcinit 25C4  
            plot@pattern 001B                  __ramtop 0600                  __ptext0 129C  
                __ptext1 0448                  __ptext2 1A74                  __ptext3 1F5A  
                __ptext4 0012                  __ptext5 2274                  __ptext6 242C  
                __ptext7 29DE                  __ptext8 2B10                  __ptext9 27C6  
           __size_of_ISR 1F52                  _initMap 15B6                  _initial 2274  
             ??___xxtofl 0019         ___awmod@dividend 0037           __pintcode_body 1E0A  
   end_of_initialization 2668        shiftOut1@bitOrder 0017           ___omul@product 0025  
      __end_of_move_ball 1A74        __end_of_shiftOut1 29DE        __end_of_shiftOut2 295A  
      __end_of_shiftOut3 28D6        __end_of_shiftOut4 284E        shiftOut2@bitOrder 0017  
          __Lmediumconst 0000                  int_func 1E0A        shiftOut3@bitOrder 0017  
      __end_of_updateCar 1C56        shiftOut4@bitOrder 0017        __end_of_updateMap 080E  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE                _PORTDbits 000F83  
             _printError 1F5A            ___xxtofl@sign 001D                _TRISAbits 000F92  
            ___fldiv@grs 0036              ___fldiv@rem 002F              printError@i 0019  
            printError@j 001B               _outputMap1 0100     set_register1@address 001A  
         __end_of___omul 27C6           __end_of___wmul 2B10     set_register2@address 001A  
          __pidataCOMRAM 2B88     set_register3@address 001A     set_register4@address 001A  
    start_initialization 25C4              __end_of_ISR 1F5A        plot@char_pattern1 0400  
      plot@char_pattern2 0408        plot@char_pattern3 0410        plot@char_pattern4 0418  
          board@right_up 0002               initMap@num 00F2        ___omul@multiplier 0015  
       __CFG_OSC$INTIO67 000000    __size_of_init_max7219 00CE              _ball_last_x 0064  
            _ball_last_y 0062            clear_matrix@i 001B                 ??___omul 0025  
               ??___wmul 0019              __pdataBANK0 0080              __pdataBANK1 0100  
       __CFG_LPT1OSC$OFF 000000              ?_printError 0001                ___fldiv@a 0027  
              ___fldiv@b 0023              __pbssCOMRAM 003C            __pcstackBANK0 00E8  
          __pcstackBANK4 0400        __size_of___xxtofl 01B4             _init_max7219 242C  
 __size_of_set_register1 001E   __size_of_set_register2 001E   __size_of_set_register3 001E  
 __size_of_set_register4 001E        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
               ?___fldiv 0023                 ?___awmod 0037                 ?___fltol 00E8  
             move@direct 0001                 ?_initMap 0001                 ?_initial 0001  
         __size_of_board 0370               shiftOut1@i 0018               shiftOut2@i 0018  
             shiftOut3@i 0018               shiftOut4@i 0018           __size_of_srand 002E  
         ___wmul@product 0019                 _LATBbits 000F8A                 _LATCbits 000F8B  
               _LATDbits 000F8C      __size_of_printError 0112                _move_ball 1860  
              _shiftOut1 295A                _shiftOut2 28D6                _shiftOut3 284E  
              _shiftOut4 27C6                 i2u250_40 0D56                 i2u250_41 0D52  
               i2u251_40 0DA4                 i2u251_41 0DA0                 i2u260_40 0FBA  
               i2u252_40 0DEC                 i2u260_41 0FB6                 i2u252_41 0DE8  
               i2u261_40 0FD2                 i2u253_40 0E98                 i2u261_41 0FCE  
               i2u253_41 0E94                 i2u270_40 110E                 i2u262_40 0FE6  
               i2u254_40 0EE6                 i2u270_41 110A                 i2u262_41 0FE2  
               i2u254_41 0EE2                 i2u271_40 1162                 i2u263_40 103A  
               i2u255_40 0F0A                 i2u271_41 115E                 i2u263_41 1036  
               i2u255_41 0F06                 i2u272_40 1176                 i2u264_40 104E  
               i2u256_40 0F2A                 i2u248_40 0C5E                 i2u360_40 1EE0  
               i2u272_41 1172                 i2u264_41 104A                 i2u256_41 0F26  
               i2u248_41 0C5A                 i2u360_41 1EDC                 i2u273_40 11FA  
               i2u265_40 1066                 i2u257_40 0F3E                 i2u249_40 0CAA  
               i2u361_40 1F08                 i2u353_40 1E32                 i2u273_41 11F6  
               i2u265_41 1062                 i2u257_41 0F3A                 i2u249_41 0CA6  
               i2u361_41 1F02                 i2u353_41 1E2E                 i2u361_46 1F0A  
               i2u274_40 129A                 i2u266_40 107A                 i2u258_40 0F52  
               i2u362_40 1F20                 i2u354_40 1E40                 i2u274_41 1296  
               i2u266_41 1076                 i2u258_41 0F4E                 i2u362_41 1F1C  
               i2u354_41 1E3C                 i2u267_40 10CE                 i2u259_40 0FA6  
               i2u363_40 1F30                 i2u355_40 1E52                 i2u267_41 10CA  
               i2u259_41 0FA2                 i2u363_41 1F2C                 i2u355_41 1E4E  
               i2u268_40 10E2                 i2u356_40 1E60                 i2u268_41 10DE  
               i2u356_41 1E5C                 i2u269_40 10FA                 i2u357_40 1E7E  
               i2u269_41 10F6                 i2u357_41 1E7A                 i2u358_40 1E9C  
               i2u358_41 1E98                 i2u359_40 1EBA                 i2u359_41 1EB6  
               _RCONbits 000FD0         __CFG_WDTPS$32768 000000                _updateCar 1A74  
              _updateMap 0448               _ADCON0bits 000FC2        ___wmul@multiplier 0015  
          _set_register1 2B6A            _set_register2 2B4C            _set_register3 2B2E  
          _set_register4 2B10                main@speed 00FA                copy_data0 25D8  
              copy_data1 25FC                copy_data2 261C               updateCar@j 001B  
             updateMap@i 0025               updateMap@j 0027             board@left_up 0006  
               __Hrparam 0000               ?_move_ball 0001               ?_shiftOut1 0015  
             ?_shiftOut2 0015               ?_shiftOut3 0015               ?_shiftOut4 0015  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___fldiv 039A  
       __size_of___awmod 00B2         __size_of___fltol 0108               ?_updateCar 0001  
             ?_updateMap 0001           ?_set_register1 0019           ?_set_register2 0019  
         ?_set_register3 0019           ?_set_register4 0019             shiftOut1@val 0015  
           shiftOut2@val 0015             shiftOut3@val 0015             shiftOut4@val 0015  
               ___xxtofl 1C56                plot@F2600 00D8                plot@F2594 0044  
              plot@F2596 003C                plot@F2598 00E0         __size_of_initMap 02AA  
       __size_of_initial 00DC                 _endSnake 004E                 __ptext10 2B2E  
               __ptext11 284E                 __ptext20 2728                 __ptext12 2B4C  
               __ptext21 2AEA                 __ptext13 28D6                 __ptext30 0F2C  
               __ptext22 2676                 __ptext14 2B6A                 __ptext23 24FA  
               __ptext15 295A                 __ptext24 1860                 __ptext16 15B6  
               __ptext25 1C56                 __ptext17 2A30                 __ptext26 206C  
               __ptext18 2ABC                 __ptext27 080E                 __ptext19 2350  
               __ptext29 0BA8            __size_of_ball 00CA            __size_of_main 031A  
          __size_of_rand 00DC            __size_of_move 0384            __size_of_plot 0436  
          __size_of_time 004C            ?_clear_matrix 0001                 int$flags 006B  
           ??_printError 0015               _INTCONbits 000FF2                 initMap@i 00F4  
               initMap@j 00F6                 initial@k 0019                 intlevel2 0000  
            _right_board 0080           ??_clear_matrix 001B       __end_of_printError 206C  
            ??_move_ball 0015              ??_shiftOut1 0016              ??_shiftOut2 0016  
            ??_shiftOut3 0016              ??_shiftOut4 0016          ??_set_register1 001A  
        ??_set_register2 001A          ??_set_register3 001A          ??_set_register4 001A  
            ??_updateCar 0015              ??_updateMap 001D        move_ball@x_direct 0017  
      move_ball@y_direct 0019         move_ball@rebound 001B  
